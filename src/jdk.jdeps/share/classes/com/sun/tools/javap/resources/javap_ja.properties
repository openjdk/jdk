#
# Copyright (c) 2010, 2024, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

javap.description=1つ以上のクラス・ファイルを逆アセンブルします

err.prefix=エラー:

err.bad.constant.pool={0}の定数プールの読取り中にエラーが発生しました: {1}
err.class.not.found=クラスが見つかりません: {0}
err.crash=重大な内部エラーが発生しました: {0}\n次の情報を含むbugレポートをファイルしてください:\n{1}
err.end.of.file={0}の読取り中に予期しないファイルの終わりが検出されました
err.file.not.found=ファイルが見つかりません: {0}
err.incompatible.options=オプションの組合せが不正です: {0}
err.internal.error=内部エラー: {0} {1} {2}
err.invalid.arg.for.option=オプションの引数が無効です: {0}
err.ioerror={0}の読取り中にIOエラーが発生しました: {1}
err.missing.arg={0}に値が指定されていません
err.no.classes.specified=クラスが指定されていません
err.not.standard.file.manager=標準ファイル・マネージャを使用している場合はクラス・ファイルのみ指定できます
err.invalid.use.of.option=オプションの使用が無効です: {0}
err.unknown.option=不明なオプション: {0}
err.no.SourceFile.attribute=SourceFile属性がありません
err.source.file.not.found=ソース・ファイルが見つかりません
err.bad.innerclasses.attribute={0}のInnerClasses属性が不正です
err.nomem=メモリーが不足しています。メモリーを増やすには、-J-Xmxオプションを使用します。
err.cant.find.module=モジュール{0}が見つかりません
err.cant.find.module.ex=モジュール{0}の検索中に問題が発生しました: {1}
err.only.for.launcher=このオプションは、コマンドライン・ランチャからjavapを起動した場合にのみ使用できます。
err.fatal.err=致命的エラー: {0}

main.usage.summary=使用方法: {0} <options> <classes>\n使用可能なオプションのリストについては、--helpを使用します

warn.prefix=警告:
warn.unexpected.class=ファイル{0}にクラス{1}が含まれていません

note.prefix=ノート:

main.usage=使用方法: {0} <options> <classes>\n使用可能なオプションには次のものがあります:


main.opt.help=\  --help -help -h -?               このヘルプ・メッセージを出力する

main.opt.version=\  -version                         バージョン情報

main.opt.v=\  -v  -verbose                     追加情報を出力する

main.opt.l=\  -l                               行番号とローカル変数表を出力する。-cとの組合せで動作します

main.opt.public=\  -public                          publicクラスおよびメンバーのみを表示する

main.opt.protected=\  -protected                       protected/publicクラスおよびメンバーのみを表示する

main.opt.package=\  -package                         package/protected/publicクラスおよび\n                                   メンバーのみを表示する(デフォルト)

main.opt.p=\  -p  -private                     すべてのクラスとメンバーを表示する

main.opt.c=\  -c                               コードを逆アセンブルする

main.opt.s=\  -s                               内部タイプ署名を出力する

main.opt.class_path=\  --class-path <path>              ユーザー・クラス・ファイルのある場所を指定する

main.opt.classpath=\  -classpath <path>                ユーザー・クラス・ファイルを検索する場所を指定する

main.opt.cp=\  -cp <path>                       ユーザー・クラス・ファイルを検索する場所を指定する

main.opt.bootclasspath=\  -bootclasspath <path>            ブートストラップ・クラス・ファイルの場所をオーバーライドする

main.opt.upgrade_module_path=\  --upgrade-module-path <path>     アップグレード可能なモジュールを検索する場所を指定する

main.opt.system=\  --system <jdk>                   システム・モジュールを検索する場所を指定する

main.opt.module_path=\  --module-path <path>             アプリケーション・モジュールを検索する場所を指定する

main.opt.multi_release=\  --multi-release <version>        マルチリリースJARファイルで使用するバージョンを指定します

main.opt.constants=\  -constants                       final定数を表示する

main.opt.sysinfo=\  -sysinfo                         処理しているクラスのシステム情報(パス、サイズ、日付、SHA-256ハッシュ)\n                                   を表示します

main.opt.verify=\  -verify                          クラスの検証情報が追加で出力されます

main.opt.module=\  --module <module>  -m <module>   逆アセンブルされるクラスを含むモジュールを指定する

main.opt.J=\  -J<vm-option>                    VMオプションを指定する

main.usage.foot=\nGNUスタイル・オプションでは、オプションの名前とその値を区切るために空白ではなく'='を\n使用できます。\n\n表示される各クラスは、ファイル名、URLまたはその完全修飾クラス名\nで指定できます。例:\n   path/to/MyClass.class\n   jar:file:///path/to/MyJar.jar!/mypkg/MyClass.class\n   java.lang.Object\n
