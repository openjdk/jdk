#
# Copyright (c) 2010, 2024, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

doclet.build_version=标准 Doclet 版本 {0}
doclet.Contents=目录
doclet.Overview=概览
doclet.Window_Overview_Summary=概览
doclet.Element=元素
doclet.Package=程序包
doclet.Unnamed_Package=未命名程序包
doclet.Module=模块
doclet.Open_Module=打开模块
doclet.All_Packages=所有程序包
doclet.All_Modules=全部模块
doclet.None=无
doclet.Tree=树
doclet.Class_Hierarchy=类分层结构
doclet.Window_Class_Hierarchy=类分层结构
doclet.Interface_Hierarchy=接口分层结构
doclet.Enum_Hierarchy=枚举分层结构
doclet.Enum_Class_Hierarchy=枚举类分层结构
doclet.Record_Class_Hierarchy=记录类分层结构
doclet.Annotation_Type_Hierarchy=批注类型分层结构
doclet.Annotation_Interface_Hierarchy=批注接口分层结构
doclet.Href_Class_Title={0}中的类
doclet.Href_Interface_Title={0}中的接口
doclet.Href_Annotation_Title={0}中的批注
doclet.Href_Annotation_Interface_Title={0} 中的批注接口
doclet.Href_Enum_Title={0}中的枚举
doclet.Href_Enum_Class_Title={0} 中的枚举类
doclet.Href_Type_Param_Title={0}中的类型参数
doclet.Href_Class_Or_Interface_Title={0}中的类或接口
doclet.Summary=概要:
doclet.Detail=详细资料:
doclet.Module_Sub_Nav=模块:
doclet.Help_Sub_Nav=帮助：
doclet.Package_Sub_Nav=程序包：
doclet.navClassesAndInterfaces=类和接口
doclet.navDescription=说明
doclet.navModules=模块
doclet.navPackages=程序包
doclet.navServices=服务
doclet.navNested=嵌套
doclet.navAnnotationTypeOptionalMember=可选
doclet.navAnnotationTypeRequiredMember=必需
doclet.navAnnotationTypeMember=元素
doclet.navField=字段
doclet.navProperty=属性
doclet.navEnum=枚举常量
doclet.navConstructor=构造器
doclet.navMethod=方法
doclet.navNavigation=导航
doclet.navPages=页
doclet.not.exhaustive=（非详尽）
doclet.Index=索引
doclet.Window_Single_Index=索引
doclet.Window_Split_Index={0} - 索引
doclet.Help=帮助
doclet.Skip_navigation_links=跳过导航链接
doclet.Toggle_navigation_links=切换导航链接
doclet.Navigation=导航
doclet.navDeprecated=已过时
doclet.Window_Deprecated_List=已过时的列表
doclet.Window_New_List=新 API 列表
doclet.Window_Preview_List=预览列表
doclet.Window_Restricted_List=受限制方法列表
doclet.Overrides=覆盖:
doclet.in_class=在类中
doclet.Element_in={0} 中的元素
doclet.Enum_constant_in={0} 中的枚举常量
doclet.Static_variable_in={0}中的静态变量
doclet.Variable_in={0}中的变量
doclet.Constructor_for={0}的构造器
doclet.Record_component_in={0} 的记录组件
doclet.Static_method_in={0}中的静态方法
doclet.Search_tag_in={0}中的搜索标记
doclet.Method_in={0}中的方法
doclet.module=模块
doclet.package=程序包
doclet.MalformedURL=格式错误的 URL: {0}
doclet.File_error=读取文件时出错: {0}
doclet.URL_error=获取 URL 时出错: {0}
doclet.Resource_error=读取资源时出错：{0}
doclet.link.no_reference=未提供引用
doclet.link.see.no_label=缺少引用标签
doclet.link.see.reference_invalid=引用无效
doclet.link.see.reference_not_found=未找到引用: {0}
doclet.link.see.reference_not_accessible=无法访问引用：{0}
doclet.see.nested_link=标记 {0}：嵌套链接
doclet.throws.reference_not_found=无法按名称查找异常错误类型
doclet.throws.reference_bad_type=不是异常错误类型：{0}
doclet.tag.invalid_usage=标记 {0} 的用法无效
doclet.tag.invalid_input=无效输入：''{0}''
doclet.tag.invalid=@{0} 无效
doclet.Deprecated_API=已过时的 API
doclet.Deprecated_API_Checkbox_Label=显示在以下发行版中已过时的 API：
doclet.Deprecated_API_Checkbox_All_Releases=全部
doclet.Deprecated_API_Checkbox_Other_Releases=其他
doclet.Deprecated_Elements=已过时的 {0}
doclet.Deprecated_Elements_Release_Column_Header=在以下发行版中已过时
doclet.Deprecated_In_Release=在 {0} 中已过时
doclet.New_API=新建 API
doclet.New_API_Checkbox_Label=显示在以下发行版中添加的 API：
doclet.New_API_Checkbox_All_Releases=全部
doclet.New_Elements=新建 {0}
doclet.New_Elements_Release_Column_Header=在以下发行版中已添加
doclet.New_Label=新建
doclet.Preview_API=预览 API
doclet.Preview_API_Checkbox_Label=显示预览 API：
doclet.Preview_API_Checkbox_Toggle_All=全部切换
doclet.Preview_JEP_URL=https://openjdk.org/jeps/{0}
doclet.Preview_Label=预览
doclet.Preview_Mark=PREVIEW
doclet.Restricted_Methods=受限制的方法
doclet.Restricted_Mark=RESTRICTED
doclet.searchTag=搜索标记
doclet.searchTags=搜索标记
doclet.searchTagsSummary=搜索标记概要
doclet.Terminally_Deprecated=最终已过时
doclet.Terminally_Deprecated_Elements=最终已过时的元素
doclet.Terminally_Deprecated_In_Release=最终在 {0} 中已过时
doclet.Annotation_Types=批注类型
doclet.Annotation_Interfaces=批注接口
doclet.Annotation_Type_Members=批注类型元素
doclet.Annotation_Interface_Members=批注接口元素
doclet.annotation_types=批注类型
doclet.annotation_interfaces=批注接口
doclet.annotation_type_members=批注类型元素
doclet.annotation_interface_members=批注接口元素
doclet.Generated_Docs_Untitled=生成的文档 (无标题)
doclet.Other_Packages=其他程序包
doclet.Description=说明
doclet.Specified_By=指定者:
doclet.in_interface=在接口中
doclet.Subclasses=直接已知子类:
doclet.Subinterfaces=所有已知子接口:
doclet.Implementing_Classes=所有已知实现类:
doclet.Functional_Interface=函数接口:
doclet.Functional_Interface_Message=这是一个函数接口, 因此可用作 lambda 表达式或方法引用的赋值目标。
doclet.also=并
doclet.Package_Hierarchies=程序包分层结构:
doclet.Hierarchy_For_Package=程序包{0}的分层结构
doclet.Hierarchy_For_All_Packages=所有程序包的分层结构
doclet.Hierarchy_For_Unnamed_Package=未命名程序包的分层结构
doclet.No_Script_Message=您的浏览器已禁用 JavaScript。
doclet.Description_From_Interface=从接口复制的说明:
doclet.Description_From_Class=从类复制的说明:
doclet.No_Non_Deprecated_Classes_To_Document=找不到可以文档化的未过时的类。
doclet.Interfaces=接口
doclet.Enclosing_Class=封闭类:
doclet.Enclosing_Interface=封闭接口:
doclet.Inheritance_Tree=继承树
doclet.DefinedIn=定义位置
doclet.ReferencedIn=参考位置
doclet.Section=节
doclet.External_Specification=外部规范
doclet.External_Specifications=外部规范
doclet.External_Specifications.All_Specifications=所有规范
doclet.External_Specifications.no-host=本地
doclet.Specification=规范
doclet.System_Property=系统属性
doclet.systemProperties=系统属性
doclet.systemPropertiesSummary=系统属性概要
doclet.Window_Source_title=源代码
doclet.Window_Help_title=API 帮助
# 0: number of references (> 1)
doclet.references={0} 个引用
doclet.Window_Search_title=搜索
doclet.search.main_heading=搜索

# label for link/button element to show the information below
doclet.search.show_more=其他资源
doclet.search.help_page_link=帮助页
# 0: a link to the help page with text above
doclet.search.help_page_info= {0} 介绍了 JavaDoc 搜索的范围和语法。
doclet.search.keyboard_info= 您可以使用 <ctrl> 或 <cmd> 键与左箭头和右箭头键组合在此页面中的结果选项卡之间切换。
doclet.search.browser_info= 下面的 URL 模板可用于在支持此功能的浏览器中将此页面配置为搜索引擎。已经对其进行了测试以在 Google Chrome 和 Mozilla Firefox 中使用。请注意，其他浏览器可能不支持此功能或需要不同的 URL 格式。
doclet.search.redirect=重定向到第一个结果

# 0: a date
doclet.Option_date_out_of_range=''--date'' 的值超出范围：{0}

# 0: a date
doclet.Option_date_not_valid=''--date'' 的值无效：{0}

doclet.help.main_heading=JavaDoc 帮助
doclet.help.navigation.head=导航
# 0: link to the Overview page
doclet.help.navigation.intro=从 {0} 页开始，您可以使用每页中的链接以及每页顶部导航栏中的链接来浏览文档。
# 0: link to the Index;  1: short list of links
doclet.help.navigation.index=使用 {0} 和搜索框可以导航到特定声明和概要页，包括：{1}
doclet.help.page_kinds.head=页面类型
doclet.help.page_kinds.intro=以下各部分介绍了此集合中不同类型的页面。
# 0: link to the Overview page
doclet.help.overview.modules.body={0} 页是此 API 文档的首页，提供了所有模块的列表及其概要。此页也可能包含这些模块的总体说明。
# 0: link to the Overview page
doclet.help.overview.packages.body={0} 页面是此 API 文档的首页, 提供了所有程序包的列表及其概要。此页面也可能包含这些程序包的总体说明。
doclet.help.package.intro=每个程序包都有一页，其中包含它的类和接口的列表及其概要。这些页可以包含以下类别：
doclet.help.module.intro=每个模块都有一页，其中包含它的程序包、与其他模块的依赖关系和服务的列表以及各个模块的概要。这些页可以包含以下类别：
doclet.help.class_interface.head=类或接口
doclet.help.class_interface.intro=每个类、接口、嵌套类和嵌套接口都有自己独立的页面。如果这些部分中每个部分的条目为空或不适用，则省略这些条目。
doclet.help.class_interface.inheritance_diagram=类继承图
doclet.help.class_interface.subclasses=直接子类
doclet.help.class_interface.subinterfaces=所有已知子接口
doclet.help.class_interface.implementations=所有已知实现类
doclet.help.class_interface.declaration=类或接口声明
doclet.help.class_interface.description=类或接口说明
doclet.help.class_interface.member_order=概要条目按字母顺序排列，而详细说明则按其在源代码中出现的顺序排列。这有助于保持程序员所建立的逻辑分组。
doclet.help.class_interface.note=注:
doclet.help.class_interface.anno=批注接口有必需的元素和可选的元素，但没有方法。
doclet.help.class_interface.enum=只有枚举类有枚举常量。
doclet.help.class_interface.record=记录类的组件显示为记录类声明的一部分。
doclet.help.class_interface.property=属性是 JavaFX 的一个特性。
doclet.help.other_files.head=其他文件
doclet.help.other_files.body=程序包和模块所包含的页面中可能带有与附近声明相关的附加信息。
doclet.help.use.head=使用
doclet.help.use.body=每个已文档化的程序包、类或接口都有各自的“使用”页面，其中列出了使用该程序包、类或接口的任何部分的程序包、类、接口、方法、构造器和字段。对于给定的类或接口 A，其“使用”页面包含 A 的子类或子接口、声明为 A 的字段、返回 A 的方法、带有类型为 A 的参数的方法和构造器，以及带有类型为 A 的参数的子类或子接口。访问此页面的方法是：首先转至程序包、类或接口，然后单击导航栏中的“使用”链接。
doclet.help.tree.head=树 (类分层结构)
# 0: link to main Class Hierarchy page;  1: java.lang.Object
doclet.help.tree.intro=对于所有程序包，都有一个 {0} 页，以及每个程序包的分层结构。每个分层结构页都包含类的列表和接口的列表。从 {1} 开始，按继承结构对类进行排列。接口不从 {1} 继承。
doclet.help.tree.overview=查看“概览”页面时，单击“树”将显示所有程序包的分层结构。
doclet.help.tree.package=查看特定程序包、类或接口页时，单击“树”将仅显示该程序包的分层结构。
# 0: link to the Deprecated summary page
doclet.help.deprecated.body={0} 页面列出了所有已过时的 API。通常，由于已过时的 API 存在缺点并且已提供替代 API，不建议使用已过时的 API。在将来的实施中，可能会删除已过时的 API。
# 0: link to the Preview summary page
doclet.help.preview.body={0} 页面列出了所有预览 API。在将来的实施中，可能会删除预览 API。
doclet.help.new.body={0} 页面列出了最近的发行版中已添加的 API。
doclet.help.restricted.body={0} 页面列出了所有受限制的方法。受限制的方法不安全，如果使用不当，可能会导致 JVM 崩溃或内存损坏。
doclet.help.index.head=索引
# 0: link to Index page;  1: list of links to pages
doclet.help.index.body={0} 包含文档中所有类、接口、构造器、方法和字段的按字母顺序排列的索引，以及概要页（例如 {1}）。
doclet.help.all_classes.head=所有类和接口
# 0: link to All Classes page
doclet.help.all_classes.body={0} 包含文档中所有类和接口（包括批注接口、枚举类和记录类）的按字母顺序排列的索引。
doclet.help.all_packages.head=所有程序包
# 0: link to All Packages page
doclet.help.all_packages.body={0} 包含文档中所有程序包的按字母顺序排列的索引。
doclet.help.serial_form.body=每个可序列化或可外部化的类都有其序列化字段和方法的说明。此信息对实施（而非使用）API 的人员有用。尽管导航栏中没有链接，但您可以通过下列方式获取此信息：转至任何序列化类，然后单击类说明的“另请参阅”部分中的“序列化形式”。
# 0: link to Constant Values page
doclet.help.constants.body={0}页面列出了静态最终字段及其值。
# 0: link to Search Tags page
doclet.help.searchTags.body={0} 页面列出了文档中定义的搜索标记。
# 0: link to System Properties page
doclet.help.systemProperties.body={0} 页面列出了对系统属性的引用。
# 0: link to External Specifications page
doclet.help.externalSpecifications.body={0} 页面列出了对外部规范的引用。
doclet.help.footnote=此帮助文件适用于由标准 doclet 生成的 API 文档。
doclet.help.enum.intro=每个枚举类都有各自的页面，其中包含以下部分：
doclet.help.enum.class.intro=每个枚举类都有各自的页面，其中包含以下部分：
doclet.help.annotation_type.intro=每个批注类型都有各自的页面, 其中包含以下部分:
doclet.help.annotation_interface.intro=每个批注接口都有各自的页面，其中包含以下部分：
doclet.help.annotation_type.declaration=批注类型声明
doclet.help.annotation_interface.declaration=批注接口声明
doclet.help.annotation_type.description=批注类型说明
doclet.help.annotation_interface.description=批注接口说明
doclet.help.search.head=搜索
# Introduction to Javadoc search features, followed by a list of examples
doclet.help.search.intro=可以搜索模块、程序包、类型、字段、方法、系统属性以及 API 中定义的其他术语的定义。可以使用部分或完整名称搜索这些项，（可选）也可以使用“驼峰大小写式”缩写，或使用空格分隔的多个搜索词进行搜索。一些示例：
# Used to list search examples, {0} is a search term and {1} the matching result
doclet.help.search.example={0} 匹配 {1}
# {0} contains a link to the current Javadoc Search Specification
doclet.help.search.refer=有关搜索功能的完整说明，请参阅 {0}。
# The URL for the Javadoc Search Specification. {0} will be replaced by the JDK version number
doclet.help.search.spec.url=https://docs.oracle.com/en/java/javase/{0}/docs/specs/javadoc/javadoc-search-spec.html
# The title for the Javadoc Search Specification
doclet.help.search.spec.title=Javadoc 搜索规范

doclet.ClassUse_Packages.that.use.0=使用{0}的程序包
doclet.ClassUse_Uses.of.0.in.1={1}中{0}的使用
doclet.ClassUse_Classes.in.0.used.by.1={1}使用的{0}中的类
doclet.ClassUse_PackageAnnotation=批注类型为{0}的程序包
doclet.ClassUse_Annotation=批注类型为{0}的{1}中的类
doclet.ClassUse_TypeParameter=类型参数类型为{0}的{1}中的类
doclet.ClassUse_SubclassTypeParameter={1} 中类型参数类型为 {0} 的子类
doclet.ClassUse_SubinterfaceTypeParameter={1} 中类型参数类型为 {0} 的子接口
doclet.ClassUse_ImplementsTypeParameter={1} 中实现类型参数类型为 {0} 的接口的类
doclet.ClassUse_MethodTypeParameter=类型参数类型为{0}的{1}中的方法
doclet.ClassUse_FieldTypeParameter=类型参数类型为{0}的{1}中的字段
doclet.ClassUse_FieldAnnotations=批注类型为{0}的{1}中的字段
doclet.ClassUse_MethodAnnotations=批注类型为{0}的{1}中的方法
doclet.ClassUse_MethodParameterAnnotations=批注类型为{0}的{1}中的方法参数
doclet.ClassUse_MethodReturnTypeParameter=返回变量类型为{0}的类型的{1}中的方法
doclet.ClassUse_Subclass={1}中{0}的子类
doclet.ClassUse_Subinterface={1}中{0}的子接口
doclet.ClassUse_ImplementingClass=实现{0}的{1}中的类
doclet.ClassUse_Field=声明为{0}的{1}中的字段
doclet.ClassUse_MethodReturn=返回{0}的{1}中的方法
doclet.ClassUse_MethodArgs=参数类型为{0}的{1}中的方法
doclet.ClassUse_MethodArgsTypeParameters=类型变量类型为{0}的{1}中的方法参数
doclet.ClassUse_MethodThrows=抛出{0}的{1}中的方法
doclet.ClassUse_ConstructorAnnotations=批注类型为{0}的{1}中的构造器
doclet.ClassUse_ConstructorParameterAnnotations=批注类型为{0}的{1}中的构造器参数
doclet.ClassUse_ConstructorArgs=参数类型为{0}的{1}中的构造器
doclet.ClassUse_ConstructorArgsTypeParameters=类型变量类型为{0}的{1}中的构造器参数
doclet.ClassUse_ConstructorThrows=抛出{0}的{1}中的构造器
doclet.ClassUse_No.usage.of.0=没有{0}的用法
doclet.Window_ClassUse_Header={0} {1}的使用
doclet.ClassUse_Title={0}的使用
doclet.navClassUse=使用
doclet.Error_in_grouplist=错误的 -group 选项: {0} {1}
doclet.Groupname_already_used=在 -group 选项中, 组名已使用: {0}
doclet.Same_element_name_used=元素名称或模式使用了两次: {0}
doclet.PreviewLeadingNote={0} 依赖于 Java 平台的预览功能：
doclet.Declared_Using_Preview={0} 是使用 {1}（Java 语言 ({2}) 的预览功能）声明的。
doclet.PreviewAPI={0} 引用一个或多个预览 API：{1}。
doclet.ReflectivePreviewAPI={0} 引用一个或多个反射预览 API：{1}。
doclet.UsesDeclaredUsingPreview={0} 引用一个或多个类型，这些类型是使用 Java 语言 {1} 的预览功能声明的。
doclet.PreviewTrailingNote1=只有在启用了预览功能时，程序才能使用 {0}。
doclet.PreviewTrailingNote2=预览功能可能会在未来发行版中删除，也可能会升级为 Java 平台的永久功能。
doclet.PreviewJavaSERequiresTransitiveJavaBase=来自 <code>java.base</code> 模块的间接导出项与 <code>requires transitive java.base</code> 指令关联，这是 Java 语言的预览功能。<br>仅在启用了预览功能时，程序才能使用 <code>requires transitive java.base</code>。<br>预览功能可能会在未来发行版中删除，也可能会升级为 Java 平台的永久功能。<br>
doclet.RestrictedMethod=受限制方法
doclet.RestrictedLeadingNote={0} 是 Java 平台的 {1}。
doclet.RestrictedTrailingNote1=只有在启用了对受限制方法的访问时，程序才能使用 {0}。
doclet.RestrictedTrailingNote2=受限制的方法不安全，如果使用不当，可能会导致 JVM 崩溃或内存损坏。
doclet.Declared_Using_Preview.SEALED=密封类
doclet.Declared_Using_Preview.SEALED_PERMITS=密封类
doclet.PreviewPlatformLeadingNote={0} 是 Java 平台的预览 API。
doclet.ReflectivePreviewPlatformLeadingNote={0} 是 Java 平台的反射预览 API。

# 0: an exception
doclet.Error_copying_legal_notices=复制法律声明时出错：{0}
# 0: the path; 1: the detail message for the exception
doclet.Error_invalid_path_for_legal_notices=法律声明的路径 ''{0}'' 无效：{1}

# 0: URL; 1: an integer
doclet.extSpec.spec.has.multiple.titles=在 @spec 标记中为处于 {0} 的外部规范提供了 {1} 个不同的标题

# 0: name; 1: an integer
doclet.extSpec.title.for.multiple.specs=在 @spec 标记中标题 "{0}" 用于 {1} 个不同的外部规范

# 0: name; 1: url
doclet.extSpec.title.url=标题："{0}"，url：{1}

# 0: url; 1: name
doclet.extSpec.url.title=url：{0}，标题："{1}"

# option specifiers
doclet.usage.add-script.parameters=<file>
doclet.usage.add-script.description=向生成的文档添加脚本文件
doclet.usage.add-stylesheet.parameters=<file>
doclet.usage.add-stylesheet.description=向生成的文档添加样式表文件
doclet.usage.d.parameters=<directory>
doclet.usage.d.description=输出文件的目标目录

doclet.usage.use.description=创建类和程序包用法页面

doclet.usage.version.description=包含 @version 段

doclet.usage.author.description=包含 @author 段

doclet.usage.docfilessubdirs.description=启用对 'doc-files' 目录的深层复制。\n子目录和所有内容将递归复制到目标

doclet.usage.splitindex.description=将索引分为每个字母对应一个文件

doclet.usage.overview.parameters=<file>
doclet.usage.overview.description=从 HTML 文件读取概览文档

doclet.usage.windowtitle.parameters=<text>
doclet.usage.windowtitle.description=文档的浏览器窗口标题

doclet.usage.date.parameters=<date-and-time>
doclet.usage.date.description=使用 ISO 8601 格式指定用于对生成的页标记时间戳的值

doclet.usage.doctitle.parameters=<html-code>
doclet.usage.doctitle.description=包含概览页面的标题

doclet.usage.header.parameters=<html-code>
doclet.usage.header.description=包含每个页面的页眉文本

doclet.usage.html5.description=生成 HTML 5 输出。此选项不再是必需的。

doclet.usage.footer.parameters=<html-code>
doclet.usage.footer.description=此选项不再受支持，并会报告警告

doclet.usage.top.parameters=<html-code>
doclet.usage.top.description=包含每个页面的顶部文本

doclet.usage.bottom.parameters=<html-code>
doclet.usage.bottom.description=包含每个页面的底部文本

doclet.usage.link.parameters=<url>
doclet.usage.link.description=创建指向 <url> 中的 javadoc 输出的链接

doclet.usage.linkoffline.parameters=<url1> <url2>
doclet.usage.linkoffline.description=使用 <url2> 中的程序包列表链接到 <url1> 中的文档

# L10N: do not localize the option parameters: warn info
doclet.usage.link-modularity-mismatch.parameters=(warn|info)
doclet.usage.link-modularity-mismatch.description=用警告或信息性消息报告具有\n模块化错误的外部文档。默认\n行为是报告警告。

doclet.usage.link-platform-properties.parameters=<url>
doclet.usage.link-platform-properties.description=链接到位于 <url> 的属性文件中声明的平台文档 URL

doclet.usage.excludedocfilessubdir.parameters=<name>,<name>,...
doclet.usage.excludedocfilessubdir.description=排除包含给定名称的所有 'doc-files' 子目录。\n还可以将 ':' 作为分隔符用于参数中的任何位置。

doclet.usage.group.parameters=<name> <g1>,<g2>...
doclet.usage.group.description=在概览页面上将指定元素归到一组。\n还可以将 ':' 作为分隔符用于参数中的任何位置。

doclet.usage.legal-notices.parameters='default' | 'none' | <directory>
doclet.usage.legal-notices.description=控制所生成输出中的法律声明

doclet.usage.nocomment.description=不生成说明和标记, 只生成声明

doclet.usage.nodeprecated.description=不包含 @deprecated 信息

doclet.usage.no-fonts.description=不要在生成的文档中包含标准 Web 字体

doclet.usage.noqualifier.parameters=<name1>,<name2>,...
doclet.usage.noqualifier.description=在输出中排除一系列限定符。\n还可以将 ':' 作为分隔符用于参数中的任何位置。

doclet.usage.nosince.description=不包括 @since 信息

doclet.usage.notimestamp.description=不包括隐藏的时间戳

doclet.usage.nodeprecatedlist.description=不生成已过时的列表

doclet.usage.no-module-directories.description=不将模块文档的文件分组到\n模块特定的目录中

doclet.usage.no-platform-links.description=不生成指向平台文档的链接

doclet.usage.notree.description=不生成类分层结构

doclet.usage.noindex.description=不生成索引

doclet.usage.nohelp.description=不生成帮助链接

doclet.usage.nonavbar.description=不生成导航栏

doclet.usage.nooverview.description=不生成概览页面

doclet.usage.serialwarn.description=针对缺少 '@serial' 标记，报告编译时警告

doclet.usage.since.parameters=<release>(,<release>)*
doclet.usage.since.description=记录所指定发行版中新增和已过时的 API

doclet.usage.since-label.parameters=<text>
doclet.usage.since-label.description=提供要在“新增 API”页的标题中使用的文本

doclet.usage.tag.parameters=<name>:<locations>:<header>
doclet.usage.tag.description=使用单个参数指定定制标记

doclet.usage.taglet.description=要注册的 Taglet 的全限定名称

doclet.usage.tagletpath.description=Taglet 的路径

doclet.usage.snippet-path.parameters=<path>

doclet.usage.snippet-path.description=外部片段的路径

doclet.usage.charset.parameters=<charset>
doclet.usage.charset.description=用于跨平台查看生成的文档的字符集

doclet.usage.javafx.description=启用 JavaFX 功能

doclet.usage.helpfile.parameters=<file>
doclet.usage.helpfile.description=指定一个文件，其中包含在单击导航栏中的\n帮助链接时将显示的文本

doclet.usage.linksource.description=以 HTML 格式生成源文件

doclet.usage.sourcetab.parameters=<tab length>
doclet.usage.sourcetab.description=指定源中每个制表符占据的空格数

doclet.usage.keywords.description=随程序包, 类和成员信息一起附带 HTML 元标记

doclet.usage.main-stylesheet.parameters=<file>
doclet.usage.main-stylesheet.description=用于更改生成文档的样式的文件

doclet.usage.docencoding.parameters=<name>
doclet.usage.docencoding.description=指定输出的字符编码

doclet.usage.frames.description=允许在生成的输出中使用帧

doclet.usage.no-frames.description=禁止在生成的输出中使用帧（默认值）

doclet.usage.override-methods.parameters=(detail|summary)

doclet.usage.override-methods.description=在详细信息部分或概要部分中记录被覆盖的方法。\n默认值为 'detail'。

doclet.usage.allow-script-in-comments.description=允许在文档注释和选项中使用 JavaScript\n其值为 html-code

doclet.usage.xdocrootparent.parameters=<url>
doclet.usage.xdocrootparent.description=将文档注释中出现的所有后跟 /.. 的 @docRoot 替换为\n<url>

doclet.usage.xdoclint.description=为 javadoc 注释中的问题启用建议的检查

doclet.usage.xdoclint-extended.parameters=(all|none|[-]<group>)
# L10N: do not localize these words: all none accessibility html missing reference syntax
doclet.usage.xdoclint-extended.description=针对 javadoc\n注释中的问题\n                                  启用或禁用特定检查,\n                                  其中 <组> 为 accessibility, html,\nmissing, reference 或 syntax 之一。

doclet.usage.xdoclint-package.parameters=([-]<packages>)
doclet.usage.xdoclint-package.description=在特定的程序包中启用或禁用检查。<程序包>\n是逗号分隔的程序包说明符列表。程序包\n说明符是程序包的限定名称或程序包名称\n前缀后跟 .*, 它扩展到给定程序包的所有\n子程序包。在程序包说明符前面加上 - 可以\n为指定程序包禁用检查。

doclet.usage.spec-base-url=<URL>
doclet.usage.spec-base-url.description=在 @spec 标记中指定相对 URL 的基础 URL

doclet.Invalid_URL=URL 无效：{0}

# L10N: do not localize the option name --no-frames
doclet.NoFrames_specified=--no-frames 选项不再是必需的，可能\n会在未来发行版中删除此选项。

# L10N: do not localize the option name -footer
doclet.footer_specified=-footer 选项不再受支持并将被忽略。\n可能会在未来发行版中删除此选项。
