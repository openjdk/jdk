# This file contains error and warning messages related to XML
# The messages are arranged in key and value tuples in a ListResourceBundle.
#
# @version

        BadMessageKey = Não foi possível encontrar a mensagem de erro correspondente à chave da mensagem.
        FormatFailed = Ocorreu um erro interno ao formatar a mensagem a seguir:\n

# Document messages
        PrematureEOF=Fim prematuro do arquivo.
# 2.1 Well-Formed XML Documents
        RootElementRequired = O elemento-raiz é necessário em um documento correto.
# 2.2 Characters

        InvalidCharInCDSect = Um caractere XML inválido (Unicode: 0x{0}) foi encontrado na seção CDATA.
        InvalidCharInContent = Um caractere XML inválido (Unicode: 0x {0}) foi encontrado no conteúdo do elemento do documento.
        TwoColonsInQName = Um segundo ':' inválido foi encontrado no tipo de elemento ou no nome do atributo.
        ColonNotLegalWithNS = Não é permitido usar dois-pontos no nome ''{0}'' quando namespaces estiverem ativados.
        InvalidCharInMisc = Um caractere XML inválido (Unicode: 0x {0}) foi encontrado na marcação após o fim do conteúdo do elemento.
        InvalidCharInProlog = Um caractere XML inválido (Unicode: 0x {0}) foi encontrado no prólogo do documento.
        InvalidCharInXMLDecl = Um caractere XML inválido (Unicode: 0x{0}) foi encontrado na declaração XML.
# 2.4 Character Data and Markup
        CDEndInContent = A sequência de caracteres "]]>" não deve aparecer no conteúdo, a menos que seja usada para marcar o fim de uma seção CDATA.
# 2.7 CDATA Sections
        CDSectUnterminated = A seção CDATA deve terminar com "]]>".
# 2.8 Prolog and Document Type Declaration
        XMLDeclMustBeFirst = A declaração XML pode aparecer somente bem no início do documento.
        EqRequiredInXMLDecl = O caractere '' = '' deve estar após "{0}" na declaração XML.
        QuoteRequiredInXMLDecl = O valor após "{0}" na declaração XML deve ser uma string entre aspas.
        XMLDeclUnterminated = A declaração XML deve terminar com "?>".
        VersionInfoRequired = A versão é obrigatória na declaração XML.
        SpaceRequiredBeforeVersionInXMLDecl = O espaço em branco é necessário antes do pseudo-atributo da versão na declaração XML.
        SpaceRequiredBeforeEncodingInXMLDecl = O espaço em branco é necessário antes de codificar o pseudo-atributo na declaração XML.
        SpaceRequiredBeforeStandalone = O espaço em branco é necessário antes de codificar o pseudo-atributo na declaração XML.
        MarkupNotRecognizedInProlog = A marcação no documento que precede o elemento-raiz deve estar correta.
        MarkupNotRecognizedInMisc = A marcação no documento após o elemento-raiz deve estar correta.
        AlreadySeenDoctype = Tipo de documento já visto.
        DoctypeNotAllowed = DOCTYPE fica desativado quando o recurso "http://apache.org/xml/features/disallow-doctype-decl" é definido como verdadeiro.
        ContentIllegalInProlog = O conteúdo não é permitido no prólogo.
        ReferenceIllegalInProlog = A referência não é permitida no prólogo.
# Trailing Misc
        ContentIllegalInTrailingMisc=O conteúdo não é permitido na seção à esquerda.
        ReferenceIllegalInTrailingMisc=A referência não é permitida na seção à esquerda.

# 2.9 Standalone Document Declaration
        SDDeclInvalid = O valor da declaração do documento stand-alone deve ser "sim" ou "não", mas não deve ser "{0}".
        SDDeclNameInvalid = O nome standalone na declaração XML pode estar grafado incorretamente.
# 2.12 Language Identification
        XMLLangInvalid = O valor do atributo xml:lang "{0}" é um identificador de idioma inválido.
# 3. Logical Structures
        ETagRequired = O tipo de elemento {0}" deve ser encerrado pela tag final correspondente "</{0}>".
# 3.1 Start-Tags, End-Tags, and Empty-Element Tags
        ElementUnterminated = O tipo de elemento "{0}" deve ser seguido pelas especificações do atributo, ">" ou "/>".
        EqRequiredInAttribute = O nome do atributo "{1}" associado a um tipo de elemento "{0}" deve ser seguido do caractere '' = ''.
        OpenQuoteExpected = São esperadas aspas de abertura para o atributo "{1}" associado a um tipo de elemento "{0}".
        CloseQuoteExpected = São esperadas aspas de fechamento para o atributo "{1}" associado a um tipo de elemento "{0}".
        AttributeNotUnique = O atributo "{1}" já foi especificado para o elemento "{0}".
        AttributeNSNotUnique = O atributo "{1}" vinculado ao namespace "{2}" já foi especificado para o elemento "{0}".
        ETagUnterminated = A tag final do tipo de elemento "{0}" deve terminar com um delimitador ''>".
        MarkupNotRecognizedInContent = O conteúdo dos elementos deve consistir em dados ou marcação do caractere correto.
        DoctypeIllegalInContent = Um DOCTYPE não é permitido no conteúdo.
# 4.1 Character and Entity References
        ReferenceUnterminated = A referência deve ser encerrada por um delimitador ';'.
# 4.3.2 Well-Formed Parsed Entities
        ReferenceNotInOneEntity = A referência deve estar totalmente contida na mesma entidade submetida a parsing.
        ElementEntityMismatch = O elemento "{0}" deve começar e terminar com a mesma entidade.
        MarkupEntityMismatch=As estruturas do documento XML devem começar e terminar com a mesma entidade.

# Messages common to Document and DTD
# 2.2 Characters
        InvalidCharInAttValue = Um caractere XML inválido (Unicode: 0x {2}) foi encontrado no valor do atributo "{1}" e o elemento é "{0}".
        InvalidCharInComment = Um caractere XML inválido (Unicode: 0x{0}) foi encontrado no comentário.
        InvalidCharInPI = Um caractere XML inválido (Unicode: 0x{0}) foi encontrado na instrução de processamento.
        InvalidCharInInternalSubset = Um caractere XML inválido (Unicode: 0x {0}) foi encontrado no subconjunto interno do DTD.
        InvalidCharInTextDecl = Um caractere XML inválido (Unicode: 0x{0}) foi encontrado na declaração de texto.
# 2.3 Common Syntactic Constructs
        QuoteRequiredInAttValue = O valor do atributo "{1}" deve começar com aspas simples ou duplas.
        LessthanInAttValue = O valor do atributo "{1}" associado a um tipo de elemento "{0}" não deve conter o caractere ''<''.
        AttributeValueUnterminated = O valor do atributo "{1}" deve terminar com as aspas correspondentes.
# 2.5 Comments
        InvalidCommentStart = O comentário deve começar com "<!--".
        DashDashInComment = A string "--" não é permitida nos comentários.
        CommentUnterminated = O comentário deve terminar com "-->".
        COMMENT_NOT_IN_ONE_ENTITY = O comentário não está entre chaves na mesma entidade.
# 2.6 Processing Instructions
        PITargetRequired = A instrução de processamento deve começar com o nome do destino.
        SpaceRequiredInPI = O espaço em branco é obrigatório entre o destino da instrução de processamento e os dados.
        PIUnterminated = A instrução de processamento deve terminar com "?>".
        ReservedPITarget = O destino da instrução de processamento correspondente "[xX][mM][lL]" não é permitido.
        PI_NOT_IN_ONE_ENTITY = A instrução de processamento não está entre chaves na mesma entidade.
# 2.8 Prolog and Document Type Declaration
        VersionInfoInvalid = Versão inválida "{0}".
        VersionNotSupported = Versão XML "{0}" não suportada; somente XML 1.0 é suportada.
        VersionNotSupported11 = Versão XML "{0}" não suportada, somente XML 1.0 e XML 1.1 são suportadas.
        VersionMismatch= Uma entidade não pode incluir outra entidade de uma versão posterior.
# 4.1 Character and Entity References
        DigitRequiredInCharRef = Uma representação decimal deve seguir imediatamente o "&#" em uma referência de caractere.
        HexdigitRequiredInCharRef = Uma representação hexadecimal deve seguir imediatamente o "&#" em uma referência de caractere.
        SemicolonRequiredInCharRef = A referência de caractere deve terminar com o delimitador ';'.
        InvalidCharRef = A referência do caractere "&#{0}" é um caractere XML inválido.
        NameRequiredInReference = O nome da entidade deve seguir imediatamente o '&' na referência da entidade.
        SemicolonRequiredInReference = A referência à entidade "{0}" deve terminar com o delimitador '';''.
# 4.3.1 The Text Declaration
        TextDeclMustBeFirst = A declaração de texto somente pode aparecer bem no início da entidade externa submetida a parsing.
        EqRequiredInTextDecl = O caractere '' = '' deve estar após "{0}" na declaração de texto.
        QuoteRequiredInTextDecl = O valor após "{0}" na declaração de texto deve ser uma string entre aspas.
        CloseQuoteMissingInTextDecl = não foi encontrada a aspa de fechamento no valor após "{0}" na declaração de texto.
        SpaceRequiredBeforeVersionInTextDecl = O espaço em branco é necessário antes do pseudo-atributo da versão na declaração de texto.
        SpaceRequiredBeforeEncodingInTextDecl = O espaço em branco é necessário antes de codificar o pseudo-atributo na declaração de texto.
        TextDeclUnterminated = A declaração de texto deve terminar com "?>".
        EncodingDeclRequired = A declaração de codificação é necessária na declaração de texto.
        NoMorePseudoAttributes = Não são mais permitidos pseudo-atributos.
        MorePseudoAttributes = São esperados mais pseudo-atributos.
        PseudoAttrNameExpected = É esperado um nome de um pseudo-atributo.
# 4.3.2 Well-Formed Parsed Entities
        CommentNotInOneEntity = O comentário deve estar totalmente contido na mesma entidade submetida a parsing.
        PINotInOneEntity = A instrução de processamento deve estar totalmente contida na mesma entidade submetida a parsing.
# 4.3.3 Character Encoding in Entities
        EncodingDeclInvalid = Nome da codificação inválida "{0}".
        EncodingByteOrderUnsupported = A ordem de bytes fornecida para codificação "{0}" não é suportada.
        InvalidByte = Byte inválido {0} da sequência UTF-8 do byte {1}.
        ExpectedByte = Esperava {0} byte da sequência UTF-8 do byte {1}.
        InvalidHighSurrogate = Os bits substitutos altos na sequência da UTF-8 não devem exceder 0x10 mas foi encontrado 0x{0}.
        OperationNotSupported = A operação "{0}" não é suportada pelo leitor {1}.
        InvalidASCII = O byte "{0}" não é membro do conjunto de caracteres ASCII (7 bits).
        CharConversionFailure = Uma entidade destinada a estar em uma determinada codificação não deve conter sequências inválidas na referida codificação.

# DTD Messages
# 2.2 Characters
        InvalidCharInEntityValue = Um caractere XML inválido (Unicode: 0x {0}) foi encontrado no valor da entidade da literal.
        InvalidCharInExternalSubset = Um caractere XML inválido (Unicode: 0x {0}) foi encontrado no subconjunto externo do DTD.
        InvalidCharInIgnoreSect = Um caractere XML inválido (Unicode: 0x{0}) foi encontrado na seção condicional excluída.
        InvalidCharInPublicID = Um caractere XML inválido (Unicode: 0x{0}) foi encontrado no identificador público.
        InvalidCharInSystemID = Um caractere XML inválido (Unicode: 0x{0}) foi encontrado no identificador do sistema.
# 2.3 Common Syntactic Constructs
        SpaceRequiredAfterSYSTEM = É necessário um espaço em branco após a palavra-chave SYTEM na declaração DOCTYPE.
        QuoteRequiredInSystemID = O identificador do sistema deve começar com aspas simples ou duplas.
        SystemIDUnterminated = O identificador do sistema deve terminar com as aspas correspondentes.
        SpaceRequiredAfterPUBLIC = São necessários espaços em branco após a palavra-chave PUBLIC na declaração DOCTYPE.
        QuoteRequiredInPublicID = O identificador público deve começar com aspas simples ou duplas.
        PublicIDUnterminated = O identificador público deve terminar com as aspas correspondentes.
        PubidCharIllegal = O caractere XML (Unicode: 0x{0}) não é permitido no identificador público.
        SpaceRequiredBetweenPublicAndSystem = Espaços em branco são necessários entre publicId e systemId.
# 2.8 Prolog and Document Type Declaration
        MSG_SPACE_REQUIRED_BEFORE_ROOT_ELEMENT_TYPE_IN_DOCTYPEDECL = O espaço em branco é necessário após "<!DOCTYPE" na declaração do tipo de documento.
        MSG_ROOT_ELEMENT_TYPE_REQUIRED = O tipo de elemento-raiz deve aparecer após "<!DOCTYPE" na declaração do tipo de documento.
        DoctypedeclUnterminated = A declaração do tipo de documento do tipo de elemento "{0}" deve terminar com ''>''.
        DoctypedeclNotClosed = A declaração do tipo de documento do tipo de elemento "{0}" deve terminar com '']''.
        PEReferenceWithinMarkup = A referência da entidade do parâmetro "%{0};" não pode ocorrer na marcação no subconjunto interno do DTD.
        MSG_MARKUP_NOT_RECOGNIZED_IN_DTD = As declarações de marcação contidas ou apontadas pela declaração do tipo de documento devem estar corretas.
# 2.10 White Space Handling
        MSG_XML_SPACE_DECLARATION_ILLEGAL = Deve ser fornecida a declaração do atributo para "xml:space" como um tipo enumerado, cujo os únicos valores possíveis são "padrão" e "preserve".
# 3.2 Element Type Declarations
        MSG_SPACE_REQUIRED_BEFORE_ELEMENT_TYPE_IN_ELEMENTDECL = O espaço em branco é necessário após "<!ELEMENT" na declaração do tipo de elemento.
        MSG_ELEMENT_TYPE_REQUIRED_IN_ELEMENTDECL = O tipo de elemento é necessário na declaração do tipo de elemento.
        MSG_SPACE_REQUIRED_BEFORE_CONTENTSPEC_IN_ELEMENTDECL = O espaço em branco é necessário após o tipo de elemento "{0}" na declaração do tipo de elemento.
        MSG_CONTENTSPEC_REQUIRED_IN_ELEMENTDECL = A restrição é necessária após o tipo de elemento "{0}" na declaração do tipo de elemento.
        ElementDeclUnterminated = A declaração do tipo de elemento "{0}" deve terminar com ''>''.
# 3.2.1 Element Content
        MSG_OPEN_PAREN_OR_ELEMENT_TYPE_REQUIRED_IN_CHILDREN = É necessário um caractere ''('' ou um tipo de elemento na declaração do tipo de elemento "{0}".
        MSG_CLOSE_PAREN_REQUIRED_IN_CHILDREN = É necessário um caractere '')'' na declaração do tipo de elemento "{0}".
# 3.2.2 Mixed Content
        MSG_ELEMENT_TYPE_REQUIRED_IN_MIXED_CONTENT = É necessário um tipo de elemento na declaração do tipo de elemento "{0}".
        MSG_CLOSE_PAREN_REQUIRED_IN_MIXED = É necessário um caractere '')'' na declaração do tipo de elemento "{0}".
        MixedContentUnterminated = O modelo de conteúdo misto "{0}" deve terminar com ")*" quando os tipos de elementos filhos forem restringidos.
# 3.3 Attribute-List Declarations
        MSG_SPACE_REQUIRED_BEFORE_ELEMENT_TYPE_IN_ATTLISTDECL = O espaço em branco é necessário após "<!ATTLIST" na declaração da lista de atributos.
        MSG_ELEMENT_TYPE_REQUIRED_IN_ATTLISTDECL = É necessário o tipo de elemento na declaração da lista de atributos.
        MSG_SPACE_REQUIRED_BEFORE_ATTRIBUTE_NAME_IN_ATTDEF = É necessário o espaço em branco antes do nome do atributo na declaração da lista de atributos do elemento "{0}".
        AttNameRequiredInAttDef = O nome do atributo deve ser especificado na declaração da lista de atributos do elemento "{0}".
        MSG_SPACE_REQUIRED_BEFORE_ATTTYPE_IN_ATTDEF = É necessário o espaço em branco antes do tipo de atributo na declaração do atributo "{1}" do elemento "{0}".
        AttTypeRequiredInAttDef = É necessário o tipo de atributo na declaração do atributo "{1}" do elemento "{0}".
        MSG_SPACE_REQUIRED_BEFORE_DEFAULTDECL_IN_ATTDEF = É necessário o espaço em branco antes do padrão do atributo na declaração do atributo "{1}" do elemento "{0}".
        MSG_DUPLICATE_ATTRIBUTE_DEFINITION = Mais de uma definição de atributo fornecida para o mesmo atributo "{1}" de um determinado elemento "{0}".
# 3.3.1 Attribute Types
        MSG_SPACE_REQUIRED_AFTER_NOTATION_IN_NOTATIONTYPE = O espaço em branco deve aparecer após "NOTATION" na declaração do atributo "{1}".
        MSG_OPEN_PAREN_REQUIRED_IN_NOTATIONTYPE = O caractere ''('' deve estar após "NOTATION" na declaração do atributo "{1}".
        MSG_NAME_REQUIRED_IN_NOTATIONTYPE = É necessário o nome da notação na lista de tipos de notação para a declaração do atributo "{1}".
        NotationTypeUnterminated = A lista de tipos de notação deve terminar com '')'' na declaração do atributo "{1}".
        MSG_NMTOKEN_REQUIRED_IN_ENUMERATION = O token do nome é obrigatório na lista de tipos enumerada para a declaração do atributo "{1}".
        EnumerationUnterminated = A lista de tipos enumerada deve terminar com '')'' na declaração do atributo "{1}".
        MSG_DISTINCT_TOKENS_IN_ENUMERATION = O valor da enumeração "{1}" foi especificado mais de uma vez na declaração do atributo "{2}" do elemento "{0}". Os NMTOKENS em uma declaração de atributo de Enumeração única devem ser todos distintos.
        MSG_DISTINCT_NOTATION_IN_ENUMERATION = O valor da enumeração "{1}" foi especificado mais de uma vez na declaração do atributo "{2}" do elemento "{0}". Os nomes da NOTATION em uma declaração do atributo NotationType única devem ser todos distintos.
# 3.3.2 Attribute Defaults
        MSG_SPACE_REQUIRED_AFTER_FIXED_IN_DEFAULTDECL = O espaço em branco deve aparecer após "FIXED" na declaração do atributo "{1}".
# 3.4 Conditional Sections
        IncludeSectUnterminated = A seção condicional incluída deve terminar com "]]>".
        IgnoreSectUnterminated = A seção condicional excluída deve terminar com "]]>".
# 4.1 Character and Entity References
        NameRequiredInPEReference = O nome da entidade deve seguir imediatamente o '%' na referência da entidade do parâmetro.
        SemicolonRequiredInPEReference = A referência da entidade do parâmetro "%{0};" deve terminar com o delimitador '';".
# 4.2 Entity Declarations
        MSG_SPACE_REQUIRED_BEFORE_ENTITY_NAME_IN_ENTITYDECL = O espaço em branco é necessário após "<!ENTITY" na declaração da entidade.
        MSG_SPACE_REQUIRED_BEFORE_PERCENT_IN_PEDECL = O espaço em branco é necessário entre "<!ENTITY" e o caractere '%' na declaração da entidade do parâmetro.
        MSG_SPACE_REQUIRED_BEFORE_ENTITY_NAME_IN_PEDECL = O espaço em branco é necessário entre '%' e o nome da entidade na declaração da entidade do parâmetro.
        MSG_ENTITY_NAME_REQUIRED_IN_ENTITYDECL = O nome da entidade é necessário na declaração da entidade.
        MSG_SPACE_REQUIRED_AFTER_ENTITY_NAME_IN_ENTITYDECL = O espaço em branco é necessário entre o nome da entidade "{0}" e a definição da declaração da entidade.
        MSG_SPACE_REQUIRED_BEFORE_NOTATION_NAME_IN_UNPARSED_ENTITYDECL = É necessário um espaço em branco entre "NDATA" e o nome da notação na declaração da entidade "{0}".
        MSG_SPACE_REQUIRED_BEFORE_NDATA_IN_UNPARSED_ENTITYDECL = O espaço em branco é necessário antes de "NDATA" na declaração da entidade "{0}".
        MSG_NOTATION_NAME_REQUIRED_FOR_UNPARSED_ENTITYDECL = O nome da notação é necessário após "NDATA" na declaração da entidade "{0}".
        EntityDeclUnterminated = A declaração da entidade "{0}" deve terminar com ''>''.
        MSG_DUPLICATE_ENTITY_DEFINITION = A entidade "{0}" foi declarada mais de uma vez.
# 4.2.2 External Entities
        ExternalIDRequired = A declaração da entidade externa deve começar com "SYSTEM" ou "PUBLIC".
        MSG_SPACE_REQUIRED_BEFORE_PUBIDLITERAL_IN_EXTERNALID = O espaço em branco é necessário entre "PUBLIC" e o identificador público.
        MSG_SPACE_REQUIRED_AFTER_PUBIDLITERAL_IN_EXTERNALID = O espaço em branco é necessário entre o identificador público e o identificador do sistema.
        MSG_SPACE_REQUIRED_BEFORE_SYSTEMLITERAL_IN_EXTERNALID = O espaço em branco é necessário entre "SYSTEM" e o identificador do sistema.
        MSG_URI_FRAGMENT_IN_SYSTEMID = O identificador do fragmento não deve ser especificado como parte do identificador do sistema "{0}".
# 4.7 Notation Declarations
        MSG_SPACE_REQUIRED_BEFORE_NOTATION_NAME_IN_NOTATIONDECL = O espaço em branco é necessário após "<!NOTATION" na declaração da notação.
        MSG_NOTATION_NAME_REQUIRED_IN_NOTATIONDECL = O nome da notação é obrigatório na declaração de notação.
        MSG_SPACE_REQUIRED_AFTER_NOTATION_NAME_IN_NOTATIONDECL = O espaço em branco é necessário após o nome da notação "{0}" na declaração de notação.
        ExternalIDorPublicIDRequired = A declaração da notação "{0}" deve incluir um identificador público ou do sistema.
        NotationDeclUnterminated = A declaração da notação "{0}" deve terminar com ''>''.

# Validation messages
        DuplicateTypeInMixedContent = O tipo de elemento "{1}" já foi especificado no modelo de conteúdo da declaração do elemento "{0}".
        ENTITIESInvalid = O valor do atributo "{1}" do tipo ENTITIES deve ser o nome de uma ou mais entidades não submetidas a parsing.
        ENTITYInvalid = O valor do atributo "{1}" do tipo ENTITY deve ser o nome de uma entidade não submetida a parsing.
        IDDefaultTypeInvalid = O atributo do ID "{0}" deve ter um padrão declarado "#IMPLIED" ou "#REQUIRED".
        IDInvalid = O valor do atributo "{0}" do ID de tipo deve ser um nome.
        IDInvalidWithNamespaces = O valor do atributo "{0}" do ID de tipo deve ser um NCName quando os namespaces estiverem ativados.
        IDNotUnique = O valor do atributo "{0}" do ID de tipo deve ser exclusivo no documento.
        IDREFInvalid = O valor do atributo "{0}" do IDREF de tipo deve ser um nome.
        IDREFInvalidWithNamespaces = O valor do atributo "{0}" do IDREF de tipo deve ser um NCName quando os namespaces estiverem ativados.
        IDREFSInvalid = O valor do atributo "{0}" de tipo IDREFS deve ter um ou mais nomes.
        ILL_FORMED_PARAMETER_ENTITY_WHEN_USED_IN_DECL = O texto de substituição da entidade do parâmetro "{0}" deve incluir as declarações aninhadas corretamente quando a referência da entidade for usada como uma declaração completa.
        ImproperDeclarationNesting = O texto de substituição da entidade do parâmetro "{0}" deve incluir as declarações aninhadas corretamente.
        ImproperGroupNesting = O texto de substituição da entidade do parâmetro "{0}" deve incluir pares de parênteses aninhados corretamente.
        INVALID_PE_IN_CONDITIONAL = O texto de substituição da entidade do parâmetro "{0}" deve incluir a seção condicional inteira ou apenas INCLUDE ou IGNORE.
        MSG_ATTRIBUTE_NOT_DECLARED = O atributo "{1}" deve ser declarado para o tipo de elemento "{0}".
        MSG_ATTRIBUTE_VALUE_NOT_IN_LIST = O atributo "{0}" com o valor "{1}" deve ter um valor da lista "{2}".
        MSG_ATTVALUE_CHANGED_DURING_NORMALIZATION_WHEN_STANDALONE = O valor "{1}" do atributo "{0}" não deve ser alterado por meio da normalização (para "{2}") em um documento stand-alone.
        MSG_CONTENT_INCOMPLETE = O conteúdo do tipo de elemento "{0}" está incompleto; ele deve corresponder a "{1}".
        MSG_CONTENT_INVALID = O conteúdo do tipo de elemento "{0}" deve corresponder a "{1}".
        MSG_CONTENT_INVALID_SPECIFIED = O conteúdo do tipo de elemento "{0}" deve corresponder a "{1}". Não são permitidos os filhos do tipo "{2}".
        MSG_DEFAULTED_ATTRIBUTE_NOT_SPECIFIED = O atributo "{1}" do tipo de elemento "{0}" tem um valor padrão e deve ser especificado em um documento stand-alone.
        MSG_DUPLICATE_ATTDEF = O atributo "{1}" já foi declarado para o tipo de elemento "{0}".
        MSG_ELEMENT_ALREADY_DECLARED = O tipo de elemento "{0}" não deve ser declarado mais de uma vez.
        MSG_ELEMENT_NOT_DECLARED = O tipo de elemento "{0}" deve ser declarado.
        MSG_GRAMMAR_NOT_FOUND = O documento é inválido: nenhuma gramática encontrada.
        MSG_ELEMENT_WITH_ID_REQUIRED = Um elemento com o identificador "{0}" deve aparecer no documento.
        MSG_EXTERNAL_ENTITY_NOT_PERMITTED = A referência à entidade externa "{0}" não é permitida em um documento stand-alone.
        MSG_FIXED_ATTVALUE_INVALID = O atributo "{1}" com o valor "{2}" deve ter um valor "{3}".
        MSG_MORE_THAN_ONE_ID_ATTRIBUTE = O tipo de elemento "{0}" já tem o atributo "{1}" do ID do tipo; um segundo atributo "{2}" do ID de tipo não é permitido.
        MSG_MORE_THAN_ONE_NOTATION_ATTRIBUTE = O tipo de elemento "{0}" já tem o atributo "{1}" do tipo NOTATION; um segundo atributo "{2}" do tipo NOTATION não é permitido.
        MSG_NOTATION_NOT_DECLARED_FOR_NOTATIONTYPE_ATTRIBUTE = A notação "{1}" deve ser declarada quando referenciada na lista de tipos de notação do atributo "{0}".
        MSG_NOTATION_NOT_DECLARED_FOR_UNPARSED_ENTITYDECL = A notação "{1}" deve ser declarada quando referenciada na declaração da entidade não submetida a parsing para "{0}".
        MSG_REFERENCE_TO_EXTERNALLY_DECLARED_ENTITY_WHEN_STANDALONE = A referência à entidade "{0}" declarada em uma entidade externa submetida a parsing não é permitida em um documento stand-alone.
        MSG_REQUIRED_ATTRIBUTE_NOT_SPECIFIED = O atributo "{1}" é necessário e deve ser especificado para o tipo de elemento "{0}".
        MSG_WHITE_SPACE_IN_ELEMENT_CONTENT_WHEN_STANDALONE = Não deve haver espaço em branco entre os elementos declarados em uma entidade externa submetida a parsing com o conteúdo do elemento em um documento stand-alone.
        NMTOKENInvalid = O valor do atributo "{0}" do tipo NMTOKEN deve ser um token de nome.
        NMTOKENSInvalid = O valor do atributo "{0}" do tipo NMTOKENS deve ter um ou mais tokens de nome.
        NoNotationOnEmptyElement = O tipo de elemento "{0}" que foi declarado EMPTY não pode declarar o atributo "{1}" do tipo NOTATION.
        RootElementTypeMustMatchDoctypedecl = O elemento-raiz do documento "{1}" deve corresponder à raiz de DOCTYPE "{0}".
        UndeclaredElementInContentSpec = O modelo do conteúdo do elemento "{0}" refere-se ao elemento não declarado "{1}".
        UniqueNotationName = A declaração da notação "{0}" não é exclusiva. Um Nome fornecido não deve ser declarado em mais de uma declaração de notação.
        ENTITYFailedInitializeGrammar =  Validador de ENTITYDatatype: Falha ao chamar o método de inicialização com uma referência de Gramática válida. \t
        ENTITYNotUnparsed = ENTITY "{0}" não é submetida a parsing.
        ENTITYNotValid = ENTITY "{0}" não é válida.
        EmptyList = O valor dos tipos ENTITIES, IDREFS e NMTOKENS não pode estar na lista vazia.

# Entity related messages
# 3.1 Start-Tags, End-Tags, and Empty-Element Tags
        ReferenceToExternalEntity = A referência da entidade externa "&{0};" não é permitida em um valor do atributo.
        AccessExternalDTD = DTD Externo: falha ao ler o DTD ''{0}'' externo porque o acesso a ''{1}'' não é permitido em decorrência de uma restrição definida pela propriedade accessExternalDTD.
        AccessExternalEntity = Entidade Externa: falha ao ler o documento ''{0}'' externo porque o acesso a ''{1}'' não é permitido em decorrência de uma restrição definida pela propriedade accessExternalDTD.

# 4.1 Character and Entity References
        EntityNotDeclared = A entidade "{0}" foi referenciada, mas não declarada.
        ReferenceToUnparsedEntity = A referência da entidade não submetida a parsing "&{0};" não é permitida.
        RecursiveReference = Referência da entidade recursiva "{0}". (Caminho de referência: {1}),
        RecursiveGeneralReference = Referência geral da entidade recursiva "&{0};". (Caminho de referência: {1}),
        RecursivePEReference = Referência da entidade do parâmetro recursivo "%{0};". (Caminho de referência: {1}),
# 4.3.3 Character Encoding in Entities
        EncodingNotSupported = A codificação "{0}" não é suportada.
        EncodingRequired = Uma entidade submetida a parsing não codificada em UTF-8 nem em UTF-16 deve conter uma declaração de codificação.

# Namespaces support
# 4. Using Qualified Names
        IllegalQName = O elemento ou o atributo não correspondem à produção QName: QName::=(NCName':')?NCName.
        ElementXMLNSPrefix = O elemento "{0}" não pode ter "xmlns" como seu prefixo.
        ElementPrefixUnbound = O prefixo "{0}" do elemento "{1}" não está vinculado.
        AttributePrefixUnbound = O prefixo "{2}" do atributo "{1}" associado a um tipo de elemento "{0}" não está vinculado.
        EmptyPrefixedAttName = O valor do atributo "{0}" é inválido. Associações de namespace prefixadas não podem ficar vazias.
        PrefixDeclared = O prefixo do namespace "{0}" não foi declarado.
        CantBindXMLNS = O prefixo "xmlns" não pode ser vinculado a um namespace explicitamente, assim como o namespace de "xmlns" não pode ser vinculado a um prefixo explicitamente.
        CantBindXML = O prefixo "xml" não pode ser vinculado a um namespace diferente do namespace comum, assim como o namespace de "xml" não pode ser vinculado a um prefixo diferente de "xml".
        MSG_ATT_DEFAULT_INVALID = O defaultValue "{1}" do atributo "{0}" não é válido para as restrições léxicas deste tipo de atributo.

# REVISIT: These need messages
        MSG_SPACE_REQUIRED_AFTER_SYSTEMLITERAL_IN_EXTERNALID=MSG_SPACE_REQUIRED_AFTER_SYSTEMLITERAL_IN_EXTERNALID
        OpenQuoteMissingInDecl=OpenQuoteMissingInDecl
        InvalidCharInLiteral=InvalidCharInLiteral


# Implementation limits
        EntityExpansionLimit=JAXP00010001: O parser detectou mais de "{0}" expansões da entidade neste documento. Este é o limite imposto pelo JDK.
        ElementAttributeLimit=JAXP00010002: o elemento "{0}" tem mais de "{1}" atributos. "{1}" é o limite imposto pelo JDK.
        MaxEntitySizeLimit=JAXP00010003: o tamanho da entidade "{0}" é "{1}", o que excede o limite de "{2}" definido por "{3}".
        TotalEntitySizeLimit=JAXP00010004: o tamanho acumulado de entidades é "{0}", o que excedeu o limite de "{1}" definido por "{2}".
        MaxXMLNameLimit=JAXP00010005: o tamanho da entidade "{0}" é "{1}", o que excede o limite de "{2}" definido por "{3}".
        MaxElementDepthLimit=JAXP00010006: o elemento "{0}" tem uma profundidade de "{1}" que excede o limite de "{2}" definido por "{3}".
        EntityReplacementLimit=JAXP00010007: O número total de nós nas referências da entidade é de "{0}", o que está acima do limite de "{1}" definido por "{2}".

# Catalog 09
# Technical term, do not translate: catalog
        CatalogException=JAXP00090001: O CatalogResolver foi ativado com o catálogo "{0}", mas uma CatalogException foi retornada.
