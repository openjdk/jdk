#
# Copyright (c) 2000, 2025, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

NEWLINE=\n
STAR=*******************************************
STARNN=*******************************************\n\n
# keytool: Help part
.OPTION.=\u0020[OPTION]...
Options.=Optionen:
option.1.set.twice=Die Option %s wurde mehrmals angegeben. Alle Angaben bis auf die letzte werden ignoriert.
multiple.commands.1.2=Nur ein Befehl ist zulässig: Sowohl %1$s als auch %2$s wurden angegeben.
Use.keytool.help.for.all.available.commands=Verwenden Sie "keytool -?, -h, or --help" für diese Hilfemeldung
Key.and.Certificate.Management.Tool=Schlüssel- und Zertifikatsverwaltungstool
Commands.=Befehle:
Use.keytool.command.name.help.for.usage.of.command.name=Verwenden Sie "keytool -command_name --help" für die Verwendung von command_name.\nVerwenden Sie die Option -conf <url>, um eine vorkonfigurierte Optionsdatei anzugeben.
# keytool: help: commands
Generates.a.certificate.request=Generiert eine Zertifikatsanforderung
Changes.an.entry.s.alias=Ändert den Alias eines Eintrags
Deletes.an.entry=Löscht einen Eintrag
Exports.certificate=Exportiert ein Zertifikat
Generates.a.key.pair=Generiert ein Schlüsselpaar
Generates.a.secret.key=Generiert einen Secret Key
Generates.certificate.from.a.certificate.request=Generiert ein Zertifikat aus einer Zertifikatsanforderung
Generates.CRL=Generiert eine CRL
Generated.keyAlgName.secret.key={0} Secret Key generiert
Generated.keysize.bit.keyAlgName.secret.key={0}-Bit {1} Secret Key generiert
key.algorithm.weak=%1$s verwendet den Algorithmus %2$s. Das gilt als Sicherheitsrisiko.
key.size.weak=%1$s verwendet %2$s. Dies gilt als Sicherheitsrisiko.
Imports.entries.from.a.JDK.1.1.x.style.identity.database=Importiert Einträge aus einer Identity-Datenbank im JDK 1.1.x-Stil
Imports.a.certificate.or.a.certificate.chain=Importiert ein Zertifikat oder eine Zertifikatskette
Imports.a.password=Importiert ein Kennwort
Imports.one.or.all.entries.from.another.keystore=Importiert einen oder alle Einträge aus einem anderen Keystore
Clones.a.key.entry=Clont einen Schlüsseleintrag
Changes.the.key.password.of.an.entry=Ändert das Schlüsselkennwort eines Eintrags
Lists.entries.in.a.keystore=Listet die Einträge in einem Keystore auf
Prints.the.content.of.a.certificate=Druckt den Content eines Zertifikats
Prints.the.content.of.a.certificate.request=Druckt den Content einer Zertifikatsanforderung
Prints.the.content.of.a.CRL.file=Druckt den Content einer CRL-Datei
Generates.a.self.signed.certificate=Generiert ein selbst signiertes Zertifikat
Changes.the.store.password.of.a.keystore=Ändert das Speicherkennwort eines Keystores
showinfo.command.help=Zeigt sicherheitsbezogene Informationen an
Prints.the.program.version=Gibt die Programmversion aus
# keytool: help: options
alias.name.of.the.entry.to.process=Aliasname des zu verarbeitenden Eintrags
groupname.option.help=Gruppenname. Beispiel: der Name der elliptischen Kurve.
destination.alias=Zielalias
destination.key.password=Zielschlüsselkennwort
destination.keystore.name=Ziel-Keystore-Name
destination.keystore.password.protected=Ziel-Keystore kennwortgeschützt
destination.keystore.provider.name=Ziel-Keystore-Providername
destination.keystore.password=Ziel-Keystore-Kennwort
destination.keystore.type=Ziel-Keystore-Typ
distinguished.name=Distinguished Name
X.509.extension=X.509-Erweiterung
output.file.name=Ausgabedateiname
input.file.name=Eingabedateiname
key.algorithm.name=Schlüsselalgorithmusname
key.password=Schlüsselkennwort
key.bit.size=Schlüsselbitgröße
keystore.name=Keystore-Name
access.the.cacerts.keystore=Zugriff auf den cacerts Keystore
warning.cacerts.option=Warnung: Verwenden Sie die Option -cacerts für den Zugriff auf den cacerts Keystore
new.password=Neues Kennwort
do.not.prompt=Kein Prompt
password.through.protected.mechanism=Kennwort über geschützten Mechanismus
tls.option.help=Zeigt TLS-Konfigurationsinformationen an
# The following 2 values should span 2 lines, the first for the
# option itself, the second for its -providerArg value.
addprovider.option=Sicherheitsprovider nach Name hinzufügen (z.B. SunPKCS11)\nArgument für -addprovider konfigurieren
provider.class.option=Sicherheitsprovider nach vollständig angegebenem Klassennamen hinzufügen\nArgument für -providerclass konfigurieren

provider.name=Providername
provider.classpath=Provider-Classpath
output.in.RFC.style=Ausgabe in RFC-Stil
signature.algorithm.name=Signaturalgorithmusname
signer.alias=Signaturgeberalias
signer.key.password=Signaturgeber-Schlüsselkennwort
source.alias=Quellalias
source.key.password=Quellschlüsselkennwort
source.keystore.name=Quell-Keystore-Name
source.keystore.password.protected=Quell-Keystore kennwortgeschützt
source.keystore.provider.name=Quell-Keystore-Providername
source.keystore.password=Quell-Keystore-Kennwort
source.keystore.type=Quell-Keystore-Typ
SSL.server.host.and.port=SSL-Serverhost und -port
signed.jar.file=Signierte JAR-Datei
certificate.validity.start.date.time=Startdatum/-zeit für Zertifikatsgültigkeit
keystore.password=Keystore-Kennwort
keystore.type=Keystore-Typ
trust.certificates.from.cacerts=Zertifikaten aus cacerts vertrauen
verbose.output=Verbose-Ausgabe
validity.number.of.days=Gültigkeitsdauer (Tage)
Serial.ID.of.cert.to.revoke=Serielle ID des zu entziehenden Certs
# keytool: Running part
keytool.error.=Keytool-Fehler:\u0020
Illegal.option.=Unzulässige Option: \u0020
Illegal.value.=Unzulässiger Wert:\u0020
Unknown.password.type.=Unbekannter Kennworttyp:\u0020
Cannot.find.environment.variable.=Umgebungsvariable kann nicht gefunden werden:\u0020
Cannot.find.file.=Datei kann nicht gefunden werden:\u0020
Command.option.flag.needs.an.argument.=Befehlsoption {0} benötigt ein Argument.
Warning.Different.store.and.key.passwords.not.supported.for.PKCS12.KeyStores.Ignoring.user.specified.command.value.=Warnung: Keine Unterstützung für unterschiedliche Speicher- und Schlüsselkennwörter bei PKCS12 KeyStores. Der benutzerdefinierte Wert {0} wird ignoriert.
the.keystore.or.storetype.option.cannot.be.used.with.the.cacerts.option=Die Option -keystore oder -storetype kann nicht mit der Option -cacerts verwendet werden
.keystore.must.be.NONE.if.storetype.is.{0}=-keystore muss NONE sein, wenn -storetype {0} ist
Too.many.retries.program.terminated=Zu viele erneute Versuche. Programm wird beendet
.storepasswd.and.keypasswd.commands.not.supported.if.storetype.is.{0}=Befehle -storepasswd und -keypasswd werden nicht unterstützt, wenn -storetype {0} ist
.keypasswd.commands.not.supported.if.storetype.is.PKCS12=Befehle des Typs -keypasswd werden nicht unterstützt, wenn -storetype PKCS12 ist
.keypass.and.new.can.not.be.specified.if.storetype.is.{0}=-keypass und -new können nicht angegeben werden, wenn -storetype {0} ist
if.protected.is.specified.then.storepass.keypass.and.new.must.not.be.specified=Wenn -protected angegeben ist, dürfen -storepass, -keypass und -new nicht angegeben werden
if.srcprotected.is.specified.then.srcstorepass.and.srckeypass.must.not.be.specified=Wenn -srcprotected angegeben ist, dürfen -srcstorepass und -srckeypass nicht angegeben werden
if.keystore.is.not.password.protected.then.storepass.keypass.and.new.must.not.be.specified=Wenn der Keystore nicht kennwortgeschützt ist, dürfen -storepass, -keypass und -new nicht angegeben werden
if.source.keystore.is.not.password.protected.then.srcstorepass.and.srckeypass.must.not.be.specified=Wenn der Quell-Keystore nicht kennwortgeschützt ist, dürfen -srcstorepass und -srckeypass nicht angegeben werden
Illegal.startdate.value=Unzulässiger Wert für Startdatum
Validity.must.be.greater.than.zero=Gültigkeit muss größer als null sein
provclass.not.a.provider=%s kein Provider
provider.name.not.found=Provider namens "%s" nicht gefunden
provider.class.not.found=Provider "%s" nicht gefunden
Usage.error.no.command.provided=Verwendungsfehler: Kein Befehl angegeben
Source.keystore.file.exists.but.is.empty.=Quell-Keystore-Datei ist zwar vorhanden, ist aber leer:\u0020
Please.specify.srckeystore=Geben Sie -srckeystore an
Must.not.specify.both.v.and.rfc.with.list.command=-v und -rfc dürfen bei Befehl "list" nicht beide angegeben werden
Key.password.must.be.at.least.6.characters=Schlüsselkennwort muss mindestens sechs Zeichen lang sein
New.password.must.be.at.least.6.characters=Neues Kennwort muss mindestens sechs Zeichen lang sein
Keystore.file.exists.but.is.empty.=Keystore-Datei ist vorhanden, ist aber leer:\u0020
Keystore.file.does.not.exist.=Keystore-Datei ist nicht vorhanden:\u0020
Must.specify.destination.alias=Sie müssen einen Zielalias angeben
Must.specify.alias=Sie müssen einen Alias angeben
Keystore.password.must.be.at.least.6.characters=Keystore-Kennwort muss mindestens sechs Zeichen lang sein
Enter.the.password.to.be.stored.=Geben Sie das Kennwort ein, das gespeichert werden soll: \u0020
Enter.keystore.password.=Keystore-Kennwort eingeben: \u0020
Enter.source.keystore.password.=Quell-Keystore-Kennwort eingeben: \u0020
Enter.destination.keystore.password.=Ziel-Keystore-Kennwort eingeben: \u0020
Keystore.password.is.too.short.must.be.at.least.6.characters=Keystore-Kennwort ist zu kurz. Es muss mindestens sechs Zeichen lang sein
Unknown.Entry.Type=Unbekannter Eintragstyp
Entry.for.alias.alias.successfully.imported.=Eintrag für Alias {0} erfolgreich importiert.
Entry.for.alias.alias.not.imported.=Eintrag für Alias {0} nicht importiert.
Problem.importing.entry.for.alias.alias.exception.Entry.for.alias.alias.not.imported.=Problem beim Importieren des Eintrags für Alias {0}: {1}.\nEintrag für Alias {0} nicht importiert.
Import.command.completed.ok.entries.successfully.imported.fail.entries.failed.or.cancelled=Importbefehl abgeschlossen: {0} Einträge erfolgreich importiert, {1} Einträge nicht erfolgreich oder abgebrochen
Warning.Overwriting.existing.alias.alias.in.destination.keystore=Warnung: Vorhandener Alias {0} in Ziel-Keystore wird überschrieben
Existing.entry.alias.alias.exists.overwrite.no.=Eintragsalias {0} ist bereits vorhanden. Überschreiben? [Nein]: \u0020
Too.many.failures.try.later=Zu viele Fehler. Versuchen Sie es später erneut
Certification.request.stored.in.file.filename.=Zertifizierungsanforderung in Datei <{0}> gespeichert
Submit.this.to.your.CA=Leiten Sie dies an die CA weiter
if.alias.not.specified.destalias.and.srckeypass.must.not.be.specified=Wenn kein Alias angegeben ist, dürfen destalias und srckeypass nicht angegeben werden
The.destination.pkcs12.keystore.has.different.storepass.and.keypass.Please.retry.with.destkeypass.specified.=Der Ziel-Keystore pkcs12 hat unterschiedliche Kennwörter für storepass und keypass. Wiederholen Sie den Vorgang, indem Sie -destkeypass angeben.
Certificate.stored.in.file.filename.=Zertifikat in Datei <{0}> gespeichert
Certificate.reply.was.installed.in.keystore=Zertifikatsantwort wurde in Keystore installiert
Certificate.reply.was.not.installed.in.keystore=Zertifikatsantwort wurde nicht in Keystore installiert
Certificate.was.added.to.keystore=Zertifikat wurde Keystore hinzugefügt
Certificate.was.not.added.to.keystore=Zertifikat wurde nicht zu Keystore hinzugefügt
.Storing.ksfname.=[{0} wird gesichert]
alias.has.no.public.key.certificate.={0} hat keinen Public Key (Zertifikat)
Cannot.derive.signature.algorithm=Signaturalgorithmus kann nicht abgeleitet werden
Alias.alias.does.not.exist=Alias <{0}> ist nicht vorhanden
Alias.alias.has.no.certificate=Alias <{0}> hat kein Zertifikat
groupname.keysize.coexist=Es können nicht sowohl -groupname als auch -keysize angegeben werden
deprecate.keysize.for.ec=Das Angeben von -keysize zum Generieren von EC-Schlüsseln ist veraltet. Verwenden Sie stattdessen "-groupname %s".
Key.pair.not.generated.alias.alias.already.exists=Schlüsselpaar wurde nicht generiert. Alias <{0}> ist bereits vorhanden
size.bit.alg=%1$d-Bit %2$s
Generating.full.keyAlgName.key.pair.and.self.signed.certificate.sigAlgName.with.a.validity.of.days.for=Schlüsselpaar {0} und selbstsigniertes Zertifikat ({1}) werden mit einer Gültigkeit von {2} Tagen generiert\n\tfür: {3}
Generating.full.keyAlgName.key.pair.and.a.certificate.sigAlgName.issued.by.signerAlias.with.a.validity.of.days.for=Schlüsselpaar {0} und Zertifikat ({1}) werden generiert, das von <{2}> mit einer Gültigkeit von {3} Tagen ausgestellt wurde\n\tfür: {4}
Enter.key.password.for.alias.=Schlüsselkennwort für <{0}> eingeben
.RETURN.if.same.as.keystore.password.=\t(RETURN, wenn identisch mit Keystore-Kennwort): \u0020
Key.password.is.too.short.must.be.at.least.6.characters=Schlüsselkennwort ist zu kurz. Es muss mindestens sechs Zeichen lang sein
Too.many.failures.key.not.added.to.keystore=Zu viele Fehler. Schlüssel wurde nicht zu Keystore hinzugefügt
Destination.alias.dest.already.exists=Zielalias <{0}> bereits vorhanden
Password.is.too.short.must.be.at.least.6.characters=Kennwort ist zu kurz. Es muss mindestens sechs Zeichen lang sein
Too.many.failures.Key.entry.not.cloned=Zu viele Fehler. Schlüsseleintrag wurde nicht geklont
key.password.for.alias.=Schlüsselkennwort für <{0}>
No.entries.from.identity.database.added=Keine Einträge aus Identity-Datenbank hinzugefügt
Alias.name.alias=Aliasname: {0}
Creation.date.keyStore.getCreationDate.alias.=Erstellungsdatum: {0,date}
alias.keyStore.getCreationDate.alias.={0}, {1,date},\u0020
alias.={0},\u0020
Entry.type.type.=Eintragstyp: {0}
Certificate.chain.length.=Zertifikatskettenlänge:\u0020
Certificate.i.1.=Zertifikat[{0,number,integer}]:
Certificate.fingerprint.SHA.256.=Zertifikat-Fingerprint (SHA-256):\u0020
Keystore.type.=Keystore-Typ:\u0020
Keystore.provider.=Keystore-Provider:\u0020
Your.keystore.contains.keyStore.size.entry=Keystore enthält {0,number,integer} Eintrag
Your.keystore.contains.keyStore.size.entries=Keystore enthält {0,number,integer} Einträge
Failed.to.parse.input=Eingabe konnte nicht geparst werden
Empty.input=Leere Eingabe
Not.X.509.certificate=Kein X.509-Zertifikat
alias.has.no.public.key={0} hat keinen Public Key
alias.has.no.X.509.certificate={0} hat kein X.509-Zertifikat
New.certificate.self.signed.=Neues Zertifikat (selbst signiert):
Reply.has.no.certificates=Antwort hat keine Zertifikate
Certificate.not.imported.alias.alias.already.exists=Zertifikat nicht importiert. Alias <{0}> ist bereits vorhanden
Input.not.an.X.509.certificate=Eingabe kein X.509-Zertifikat
Certificate.already.exists.in.keystore.under.alias.trustalias.=Zertifikat ist bereits unter Alias <{0}> im Keystore vorhanden
Do.you.still.want.to.add.it.no.=Möchten Sie es trotzdem hinzufügen? [Nein]: \u0020
Certificate.already.exists.in.system.wide.CA.keystore.under.alias.trustalias.=Zertifikat ist bereits unter Alias <{0}> im systemweiten CA-Keystore vorhanden
Do.you.still.want.to.add.it.to.your.own.keystore.no.=Möchten Sie es trotzdem zu Ihrem eigenen Keystore hinzufügen? [Nein]: \u0020
Trust.this.certificate.no.=Diesem Zertifikat vertrauen? [Nein]: \u0020
New.prompt.=Neues {0}:\u0020
Passwords.must.differ=Kennwörter müssen sich unterscheiden
Re.enter.new.prompt.=Neues {0} erneut eingeben:\u0020
Re.enter.password.=Geben Sie das Kennwort erneut ein:\u0020
Re.enter.new.password.=Neues Kennwort erneut eingeben:\u0020
They.don.t.match.Try.again=Keine Übereinstimmung. Wiederholen Sie den Vorgang
Enter.prompt.alias.name.={0}-Aliasnamen eingeben: \u0020
Enter.new.alias.name.RETURN.to.cancel.import.for.this.entry.=Geben Sie einen neuen Aliasnamen ein\t(RETURN, um den Import dieses Eintrags abzubrechen): \u0020
Enter.alias.name.=Aliasnamen eingeben: \u0020
.RETURN.if.same.as.for.otherAlias.=\t(RETURN, wenn identisch mit <{0}>)
enter.dname.components=Geben Sie den Distinguished Name ein. Geben Sie einen einzelnen Punkt (.) an, um eine Unterkomponente leer zu lassen, oder drücken Sie die Eingabetaste, um den Standardwert in Klammern zu verwenden.
What.is.your.first.and.last.name.=Wie lautet Ihr Vor- und Nachname?
What.is.the.name.of.your.organizational.unit.=Wie lautet der Name Ihrer organisatorischen Einheit?
What.is.the.name.of.your.organization.=Wie lautet der Name Ihrer Organisation?
What.is.the.name.of.your.City.or.Locality.=Wie lautet der Name Ihrer Stadt oder Gemeinde?
What.is.the.name.of.your.State.or.Province.=Wie lautet der Name Ihres Bundeslands?
What.is.the.two.letter.country.code.for.this.unit.=Wie lautet der Ländercode (zwei Buchstaben) für diese Einheit?
no.field.in.dname=Mindestens ein Feld muss ausgefüllt werden. Wiederholen Sie die Eingabe.
Is.name.correct.=Ist {0} richtig?
no=Nein
yes=Ja
y=J
.defaultValue.=\u0020 [{0}]: \u0020
Alias.alias.has.no.key=Alias <{0}> verfügt über keinen Schlüssel
Alias.alias.references.an.entry.type.that.is.not.a.private.key.entry.The.keyclone.command.only.supports.cloning.of.private.key=Alias <{0}> verweist auf einen Eintragstyp, der kein Private-Key-Eintrag ist. Der Befehl -keyclone unterstützt nur das Klonen von Private-Key-Einträgen

.WARNING.WARNING.WARNING.=*****************  WARNING WARNING WARNING  *****************
Signer.d.=Signaturgeber #%d:
Certificate.d.=Zertifikat #%d:
Timestamp.=Zeitstempel:
Certificate.owner.=Zertifikatseigentümer:\u0020
Not.a.signed.jar.file=Keine signierte JAR-Datei
No.certificate.from.the.SSL.server=Kein Zertifikat vom SSL-Server

.The.integrity.of.the.information.stored.in.your.keystore.=* Die Integrität der Informationen, die in Ihrem Keystore gespeichert sind, *\n* wurde NICHT geprüft. Um die Integrität zu prüfen, *\n* müssen Sie Ihr Keystore-Kennwort angeben.                  *
.The.integrity.of.the.information.stored.in.the.srckeystore.=* Die Integrität der Informationen, die in Ihrem Srckeystore gespeichert sind, *\n* wurde NICHT geprüft. Um die Integrität zu prüfen, *\n* müssen Sie Ihr Srckeystore-Kennwort angeben.                  *

Certificate.reply.does.not.contain.public.key.for.alias.=Zertifikatsantwort enthält keinen Public Key für <{0}>
Incomplete.certificate.chain.in.reply=Unvollständige Zertifikatskette in Antwort
Top.level.certificate.in.reply.=Zertifikat der obersten Ebene in Antwort:\n
.is.not.trusted.=... ist nicht vertrauenswürdig.\u0020
Install.reply.anyway.no.=Antwort trotzdem installieren? [Nein]: \u0020
Public.keys.in.reply.and.keystore.don.t.match=Public Keys in Antwort und Keystore stimmen nicht überein
Certificate.reply.and.certificate.in.keystore.are.identical=Zertifikatsantwort und Zertifikat in Keystore sind identisch
Failed.to.establish.chain.from.reply=Kette konnte der Antwort nicht entnommen werden
n=N
Wrong.answer.try.again=Falsche Antwort. Wiederholen Sie den Vorgang
Secret.key.not.generated.alias.alias.already.exists=Secret Key wurde nicht generiert. Alias <{0}> ist bereits vorhanden
Please.provide.keysize.for.secret.key.generation=Geben Sie -keysize zum Erstellen eines Secret Key an

warning.not.verified.make.sure.keystore.is.correct=WARNUNG: Nicht geprüft. Stellen Sie sicher, dass -keystore korrekt ist.
warning.not.verified.make.sure.keystore.is.correct.or.specify.trustcacerts=Warnung: Nicht geprüft. Stellen Sie sicher, dass -keystore korrekt ist, oder geben Sie -trustcacerts an.

Extensions.=Erweiterungen:\u0020
.Empty.value.=(Leerer Wert)
Extension.Request.=Erweiterungsanforderung:
Unknown.keyUsage.type.=Unbekannter keyUsage-Typ:\u0020
Unknown.extendedkeyUsage.type.=Unbekannter extendedkeyUsage-Typ:\u0020
Unknown.AccessDescription.type.=Unbekannter AccessDescription-Typ:\u0020
Unrecognized.GeneralName.type.=Unbekannter GeneralName-Typ:\u0020
This.extension.cannot.be.marked.as.critical.=Erweiterung kann nicht als "Kritisch" markiert werden.\u0020
Odd.number.of.hex.digits.found.=Ungerade Anzahl hexadezimaler Ziffern gefunden:\u0020
Unknown.extension.type.=Unbekannter Erweiterungstyp:\u0020
command.{0}.is.ambiguous.=Befehl {0} ist mehrdeutig:
# 8171319: keytool should print out warnings when reading or
# generating cert/cert req using weak algorithms
the.certificate.request=Die Zertifikatsanforderung
the.issuer=Der Aussteller
the.generated.secretkey=Der generierte Secret Key
the.generated.certificate=Das generierte Zertifikat
the.generated.crl=Die generierte CRL
the.generated.certificate.request=Die generierte Zertifikatsanforderung
the.certificate=Das Zertifikat
the.crl=Die CRL
the.tsa.certificate=Das TSA-Zertifikat
the.input=Die Eingabe
reply=Antwort
one.in.many=%1$s #%2$d von %3$d
one.in.many1=%1$s #%2$d
one.in.many2=%1$s von Signaturgeber #%2$d
one.in.many3=%1$s #%2$d von Signaturgeber #%3$d
alias.in.cacerts=Aussteller <%s> in cacerts
alias.in.keystore=Aussteller <%s>
with.weak=%s (schwach)
with.disabled=%s (deaktiviert)
key.bit=%s-Schlüssel
key.bit.weak=%s Schlüssel (schwach)
key.bit.disabled=%s Schlüssel (deaktiviert)
.PATTERN.printX509Cert.with.weak=Eigentümer: {0}\nAussteller: {1}\nSeriennummer: {2}\nGültig von: {3} bis: {4}\nZertifikatsfingerprints:\n\t SHA1: {5}\n\t SHA256: {6}\nSignaturalgorithmusname: {7}\nPublic-Key-Algorithmus von Subject: {8}\nVersion: {9}
PKCS.10.with.weak=PKCS #10-Zertifikatsanforderung (Version 1.0)\nSubject: %1$s\nFormat: %2$s\nPublic Key: %3$s\nSignaturalgorithmus: %4$s\n
verified.by.s.in.s.weak=Von %1$s in %2$s mit %3$s verifiziert
whose.sigalg.disabled=%1$s verwendet den Signaturalgorithmus %2$s. Dies gilt als Sicherheitsrisiko und ist deaktiviert.
whose.sigalg.usagesignedjar=%1$s verwendet den Signaturalgorithmus %2$s. Das gilt als Sicherheitsrisiko und kann nach %3$s nicht zum Signieren von JAR-Archiven verwendet werden.
Unable.to.parse.denyAfter.string.in.exception.message=denyAfter-Datumszeichenfolge in Ausnahmemeldung kann nicht geparst werden
whose.sigalg.weak=%1$s verwendet den Signaturalgorithmus %2$s. Dies gilt als Sicherheitsrisiko.
whose.key.disabled=%1$s verwendet %2$s. Dies gilt als Sicherheitsrisiko und ist deaktiviert.
whose.key.weak=%1$s verwendet %2$s. Dies gilt als Sicherheitsrisiko. Wird in einem zukünftigen Update deaktiviert.
jks.storetype.warning=Der %1$s-Keystore verwendet ein proprietäres Format. Es wird empfohlen, auf PKCS12 zu migrieren, das ein Industriestandardformat mit "keytool -importkeystore -srckeystore %2$s -destkeystore %2$s -deststoretype pkcs12" ist.
migrate.keystore.warning="%1$s" zu %4$s migriert. Der %2$s-Keystore wurde als "%3$s" gesichert.
backup.keystore.warning=Der ursprüngliche Keystore "%1$s" wird als "%3$s" gesichert...
importing.keystore.status=Keystore %1$s wird in %2$s importiert...
keyalg.option.missing.error=Die Option -keyalg muss angegeben werden.
showinfo.no.option=Fehlende Option für -showinfo. Verwenden Sie keytool -showinfo -tls.
