#
# Copyright (c) 2000, 2025, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

# javax.security.auth.PrivateCredentialPermission
invalid.null.input.s.=entradas nulas no válidas
actions.can.only.be.read.=las acciones sólo pueden 'leerse'
permission.name.name.syntax.invalid.=sintaxis de nombre de permiso [{0}] no válida:\u0020
Credential.Class.not.followed.by.a.Principal.Class.and.Name=La clase de credencial no va seguida de una clase y nombre de principal
Principal.Class.not.followed.by.a.Principal.Name=La clase de principal no va seguida de un nombre de principal
Principal.Name.must.be.surrounded.by.quotes=El nombre de principal debe ir entre comillas
Principal.Name.missing.end.quote=Faltan las comillas finales en el nombre de principal
PrivateCredentialPermission.Principal.Class.can.not.be.a.wildcard.value.if.Principal.Name.is.not.a.wildcard.value=La clase de principal PrivateCredentialPermission no puede ser un valor comodín (*) si el nombre de principal no lo es también
CredOwner.Principal.Class.class.Principal.Name.name=CredOwner:\n\tClase de Principal = {0}\n\tNombre de Principal = {1}

# javax.security.auth.x500
provided.null.name=se ha proporcionado un nombre nulo
provided.null.keyword.map=mapa de palabras clave proporcionado nulo
provided.null.OID.map=mapa de OID proporcionado nulo

# javax.security.auth.Subject
NEWLINE=\n
invalid.null.AccessControlContext.provided=se ha proporcionado un AccessControlContext nulo no válido
invalid.null.action.provided=se ha proporcionado una acción nula no válida
invalid.null.Class.provided=se ha proporcionado una clase nula no válida
Subject.=Asunto:\n
.Principal.=\tPrincipal:\u0020
.Public.Credential.=\tCredencial Pública:\u0020
.Private.Credentials.inaccessible.=\tCredenciales Privadas Inaccesibles\n
.Private.Credential.=\tCredencial Privada:\u0020
.Private.Credential.inaccessible.=\tCredencial Privada Inaccesible\n
Subject.is.read.only=El asunto es de sólo lectura
attempting.to.add.an.object.which.is.not.an.instance.of.java.security.Principal.to.a.Subject.s.Principal.Set=intentando agregar un objeto que no es una instancia de java.security.Principal al juego principal de un asunto
attempting.to.add.an.object.which.is.not.an.instance.of.class=intentando agregar un objeto que no es una instancia de {0}

# javax.security.auth.login.AppConfigurationEntry
LoginModuleControlFlag.=LoginModuleControlFlag:\u0020

# javax.security.auth.login.LoginContext
Invalid.null.input.name=Entrada nula no válida: nombre
No.LoginModules.configured.for.name=No se han configurado LoginModules para {0}
invalid.null.Subject.provided=se ha proporcionado un asunto nulo no válido
invalid.null.CallbackHandler.provided=se ha proporcionado CallbackHandler nulo no válido
null.subject.logout.called.before.login=asunto nulo - se ha llamado al cierre de sesión antes del inicio de sesión
unable.to.instantiate.LoginModule.module.because.it.does.not.provide.a.no.argument.constructor=no se ha podido instanciar LoginModule, {0}, porque no incluye un constructor sin argumentos
unable.to.instantiate.LoginModule=no se ha podido instanciar LoginModule
unable.to.instantiate.LoginModule.=no se ha podido instanciar LoginModule:\u0020
unable.to.find.LoginModule.class.=no se ha encontrado la clase LoginModule:\u0020
unable.to.access.LoginModule.=no se ha podido acceder a LoginModule:\u0020
Login.Failure.all.modules.ignored=Fallo en inicio de sesión: se han ignorado todos los módulos

# sun.security.provider.PolicyFile

java.security.policy.error.parsing.policy.message=java.security.policy: error de análisis de {0}:\n\t{1}
java.security.policy.error.adding.Permission.perm.message=java.security.policy: error al agregar un permiso, {0}:\n\t{1}
java.security.policy.error.adding.Entry.message=java.security.policy: error al agregar una entrada:\n\t{0}
alias.name.not.provided.pe.name.=no se ha proporcionado el nombre de alias ({0})
unable.to.perform.substitution.on.alias.suffix=no se puede realizar la sustitución en el alias, {0}
substitution.value.prefix.unsupported=valor de sustitución, {0}, no soportado
SPACE=\u0020
LPARAM=(
RPARAM=)
type.can.t.be.null=el tipo no puede ser nulo

# sun.security.provider.PolicyParser
keystorePasswordURL.can.not.be.specified.without.also.specifying.keystore=keystorePasswordURL no puede especificarse sin especificar también el almacén de claves
expected.keystore.type=se esperaba un tipo de almacén de claves
expected.keystore.provider=se esperaba un proveedor de almacén de claves
multiple.Codebase.expressions=expresiones múltiples de CodeBase
multiple.SignedBy.expressions=expresiones múltiples de SignedBy
duplicate.keystore.domain.name=nombre de dominio de almacén de claves duplicado: {0}
duplicate.keystore.name=nombre de almacén de claves duplicado: {0}
SignedBy.has.empty.alias=SignedBy tiene un alias vacío
can.not.specify.Principal.with.a.wildcard.class.without.a.wildcard.name=no se puede especificar Principal con una clase de comodín sin un nombre de comodín
expected.codeBase.or.SignedBy.or.Principal=se esperaba codeBase o SignedBy o Principal
expected.permission.entry=se esperaba un permiso de entrada
number.=número\u0020
expected.expect.read.end.of.file.=se esperaba [{0}], se ha leído [final de archivo]
expected.read.end.of.file.=se esperaba [;], se ha leído [final de archivo]
line.number.msg=línea {0}: {1}
line.number.expected.expect.found.actual.=línea {0}: se esperaba [{1}], se ha encontrado [{2}]
null.principalClass.or.principalName=principalClass o principalName nulos

# sun.security.pkcs11.SunPKCS11
PKCS11.Token.providerName.Password.=Contraseña del Token PKCS11 [{0}]:\u0020

# --- DEPRECATED ---
# javax.security.auth.Policy
unable.to.instantiate.Subject.based.policy=no se ha podido instanciar una política basada en asunto
