#
# Copyright (c) 2007, 2024, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

# Translators please note do not translate the options themselves
java.launcher.opt.header  =   使用方法: {0} [options] <mainclass> [args...]\n           (クラスを実行する場合)\n   または  {0} [options] -jar <jarfile>.jar [args...]\n           (jarファイルを実行する場合)\n   または  {0} [options] -m <module>[/<mainclass>] [args...]\n       {0} [options] --module <module>[/<mainclass>] [args...]\n           (モジュールのメイン・クラスを実行する場合)\n   または  {0} [options] <sourcefile>.java [args]\n           (ソースファイル・プログラムを実行する場合)\n\n メイン・クラス、ソース・ファイル、-jar <jarfile>.jar、\n-mまたは--module <module>/<mainclass>に続く引数は、メイン・クラスへの引数として\n渡されます。\n\n オプションは次のとおりです:\n\n

java.launcher.opt.vmselect   =\    {0}\t  "{1}" VMを選択する場合\n
java.launcher.opt.hotspot    =\    {0}\t  は"{1}" VMのシノニムです  [非推奨]\n

# Translators please note do not translate the options themselves
java.launcher.opt.footer = \    -cp <ディレクトリおよびzip/jarファイルのクラス検索パス>\n    -classpath <ディレクトリおよびzip/jarファイルのクラス検索パス>\n    --class-path <ディレクトリおよびzip/jarファイルのクラス検索パス>\n                  "{0}"区切りリスト(ディレクトリ、JARアーカイブ、\n                  ZIPアーカイブ)で、クラス・ファイルの検索用。\n    -p <module path>\n    --module-path <module path>...\n                  要素を"{0}"で区切ったリストで、各要素は次へのファイル・パスです:\n                  モジュール、またはモジュールが格納されているディレクトリ。各モジュールは次のいずれかです:\n                  モジュラJARまたは展開形式のモジュール・ディレクトリ。\n    --upgrade-module-path <module path>...\n                  要素を"{0}"で区切ったリストで、各要素は次へのファイル・パスです:\n                  モジュール、またはモジュールが格納されているディレクトリで、次のものを置き換えます:\n                  ランタイム・イメージのアップグレード可能なモジュール。各モジュールは次のいずれかです:\n                  モジュラJARまたは展開形式のモジュール・ディレクトリ。\n    --add-modules <module name>[,<module name>...]\n                  初期モジュールに加えて解決するルート・モジュール。\n                  <module name>には次も指定できます: ALL-DEFAULT、ALL-SYSTEM、\n                  ALL-MODULE-PATH.\n    --enable-native-access <module name>[,<module name>...]\n                  モジュール内のコードをJavaランタイムの外のコードおよびデータにアクセスさせることができます。\n                  <module name>は、クラス・パス上のコードを指定するためにALL-UNNAMEDにもできます。\n    --illegal-native-access=<value>\n                  Javaランタイムの外のコードおよびデータへのアクセスを許可または拒否します\n                  (ネイティブ・アクセスが明示的に有効化されていないモジュール内のコードによる)。\n                  \
<value>は、"deny"、"warn"または"allow"のいずれかです。デフォルト値は"warn"です。\n                  このオプションは、将来のリリースで削除される予定です。\n    --list-modules\n                  参照可能なモジュールをリストし終了します\n    -d <module name>\n    --describe-module <module name>\n                  モジュールを説明し終了します\n    --dry-run     VMを作成しメイン・クラスをロードしますが、メイン・メソッドは実行しません。\n                  --dry-runオプションは、次の検証に役立つ場合があります:\n                  モジュール・システム構成などのコマンド行オプション。\n    --validate-modules\n                  すべてのモジュールを検証し終了します\n                  --validate-modulesオプションは、次の検索に役立つ場合があります:\n                  モジュール・パス上のモジュールでの競合およびその他のエラー。\n    -D<name>=<value>\n                  システム・プロパティを設定します\n    -verbose:[class|module|gc|jni]\n                  特定のサブシステムで詳細出力を有効にする\n    -version      製品バージョンをエラー・ストリームに出力して終了します\n    --version     製品バージョンを出力ストリームに出力して終了します\n    -showversion  製品バージョンをエラー・ストリームに出力して続行します\n    --show-version\n                  製品バージョンを出力ストリームに出力して続行します\n    --show-module-resolution\n                  起動時にモジュール解決出力を表示します\n    -? -h -help\n                  このヘルプ・メッセージをエラー・ストリームに出力します\n    --help        このヘルプ・メッセージを出力ストリームに出力します\n    -X            追加オプションのヘルプをエラー・ストリームに出力します\n    --help-extra  追加オプションのヘルプを出力ストリームに出力します\n    -ea[:<packagename>...|:<classname>]\n    -enableassertions[:<packagename>...|:<classname>]\n                  指定した粒度でアサーションを有効にします\n    -da[:<packagename>...|:<classname>]\n    \
-disableassertions[:<packagename>...|:<classname>]\n                  指定した粒度でアサーションを無効にします\n    -esa | -enablesystemassertions\n                  システム・アサーションを有効にします\n    -dsa | -disablesystemassertions\n                  システム・アサーションを無効にします\n    -agentlib:<libname>[=<options>]\n                  ネイティブ・エージェント・ライブラリ<libname>をロードします。例: -agentlib:jdwp\n                  -agentlib:jdwp=helpも参照してください\n    -agentpath:<pathname>[=<options>]\n                  フルパス名を使用して、ネイティブ・エージェント・ライブラリをロードします\n    -javaagent:<jarpath>[=<options>]\n                  Javaプログラミング言語エージェントをロードします。java.lang.instrumentを参照してください\n    -splash:<imagepath>\n                  指定されたイメージを含むスプラッシュ画面を表示します\n                  HiDPIスケールのイメージが自動的にサポートされて使用されます\n                  (可能な場合)。スケーリングされないイメージのファイル名(image.extなど)を\n                  引数として-splashオプションに必ず渡す必要があります。\n                  指定された最も適切なスケーリング済イメージが選択されます\n                  (自動的)。\n                  詳細は、SplashScreen APIのドキュメントを参照してください\n    @argumentファイル\n                  オプションを含む1つ以上の引数ファイル\n    --disable-@files\n                  さらなる引数ファイル拡張を無効にします\n    --enable-preview\n                  クラスをこのリリースのプレビュー機能に依存させることができます\n長いオプションの引数を指定する場合、--<name>=<value>または\n--<name> <value>を使用できます。\n

# Translators please note do not translate the options themselves
java.launcher.X.usage=\n    -Xbatch           バックグラウンド・コンパイルを無効にします\n    -Xbootclasspath/a:<directories and zip/jar files separated by {0}>\n                      ブートストラップ・クラス・パスの最後に追加します\n    -Xcheck:jni       JNI関数に対する追加のチェックを実行します\n    -Xcomp            初回呼出し時にメソッドのコンパイルを強制します\n    -Xdebug           何も実行されません。将来のリリースで削除されるため、非推奨になりました。\n    -Xdiag            追加の診断メッセージを表示します\n    -Xint             インタプリタ・モードの実行のみ\n    -Xinternalversion\n                      -versionオプションより詳細なJVMバージョン情報を\n                      表示します\n    -Xlog:<opts>      Java Virtual Machine (JVM)統合ロギング・フレームワークでの\n                      ロギングを構成または有効化します。詳細は、-Xlog:helpを\n                      使用してください。\n    -Xloggc:<file>    タイムスタンプが付いたファイルにGCステータスのログを記録します\n                      このオプションは非推奨であり、将来のリリースで削除される\n                      可能性があります。-Xlog:gc:<file>で置換されています。\n    -Xmixed           混合モードの実行(デフォルト)\n    -Xmn<size>        若い世代(ナーサリ)のヒープの初期サイズおよび最大サイズ\n                      (バイト単位)を設定します\n    -Xms<size>        Javaの初期ヒープ・サイズを設定します\n    -Xmx<size>        Javaの最大ヒープ・サイズを設定します\n    -Xnoclassgc       クラスのガベージ・コレクションを無効にします\n    -Xrs              Java/VMによるOSシグナルの使用を削減します(ドキュメントを参照)\n    -Xshare:auto      可能であれば共有クラス・データを使用します(デフォルト)\n    -Xshare:off       共有クラス・データの使用を試みません\n    -Xshare:on        共有クラス・データの使用を必須にし、できなければ失敗します。\n                      \
これはテスト・オプションであり、断続的な失敗につながる\n                      可能性があります。本番環境では使用しないでください。\n    -XshowSettings    すべての設定を表示して続行します\n    -XshowSettings:all\n                      すべての設定を詳細に表示して続行します\n    -XshowSettings:locale\n                      すべてのロケール関連の設定を表示して続行します\n    -XshowSettings:properties\n                      すべてのプロパティ設定を表示して続行します\n    -XshowSettings:vm\n                      すべてのVM関連の設定を表示して続行します\n    -XshowSettings:security\n                      すべてのセキュリティ設定を表示して続行します\n    -XshowSettings:security:all\n                      すべてのセキュリティ設定を表示して続行します\n    -XshowSettings:security:properties\n                      セキュリティ・プロパティを表示して続行します\n    -XshowSettings:security:providers\n                      静的セキュリティ・プロバイダ設定を表示して続行します\n    -XshowSettings:security:tls\n                      TLS関連のセキュリティ設定を表示して続行します\n    -XshowSettings:system\n                      (Linuxのみ)ホスト・システムまたはコンテナを表示します\n                      構成して続行します\n    -Xss<size>        javaスレッドのスタック・サイズを設定します\n                      実際のサイズは、次の倍数に切り上げられる場合があります: \n                      オペレーティング・システムの要件に応じたシステム・ページ・サイズ。\n    -Xverify          バイトコード・ベリファイアのモードを設定します\n                      オプション-Xverify:noneは非推奨になり、\n                      将来のリリースで削除される可能性があります。\n    --add-reads <module>=<target-module>(,<target-module>)*\n                      モジュール宣言に関係なく、<module>を更新して<target-module>を\n                      読み取ります。 \n                      <target-module>をALL-UNNAMEDに設定すると、すべての名前のないモジュールを\n                      読み取ることができます。\n    --add-exports \
<module>/<package>=<target-module>(,<target-module>)*\n                      モジュール宣言に関係なく、<module>を更新して<package>を<target-module>に\n                      エクスポートします。\n                      <target-module>をALL-UNNAMEDに設定すると、すべての名前のないモジュールに\n                      エクスポートできます。\n    --add-opens <module>/<package>=<target-module>(,<target-module>)*\n                      モジュール宣言に関係なく、<module>を更新して<package>を\n                      <target-module>に開きます。\n    --limit-modules <module name>[,<module name>...]\n                      参照可能なモジュールの領域を制限します\n    --patch-module <module>=<file>({0}<file>)*\n                      JARファイルまたはディレクトリのクラスおよびリソースで\n                      モジュールをオーバーライドまたは拡張します。\n    --source <version>\n                      ソースファイル・モードでソースのバージョンを設定します。\n    --finalization=<value>\n                      JVMがオブジェクトのファイナライズを実行するかどうかを制御します\n                      <value>は"enabled"または"disabled"のいずれかです。\n                      ファイナライズはデフォルトで有効になっています。\n    --sun-misc-unsafe-memory-access=<value>\n                      サポートされていないAPI sun.misc.Unsafeの使用を許可または拒否します\n                      <value>は"allow"、"warn"、"debug"または"deny"のいずれかです。\n                      デフォルト値は"warn"です。\n\nこの追加オプションは予告なしに変更されることがあります。\n

# Translators please note do not translate the options themselves
java.launcher.X.macosx.usage=\n次のオプションはmacOS固有です:\n    -XstartOnFirstThread\n                      main()メソッドを最初(AppKit)のスレッドで実行する\n    -Xdock:name=<application name>\n                      Dockに表示されるデフォルト・アプリケーション名をオーバーライドする\n    -Xdock:icon=<path to icon file>\n                      Dockに表示されるデフォルト・アイコンをオーバーライドする\n\n

# Translators please note do not translate the options themselves
java.launcher.opt.concise.header  =   使用方法: java [java options...] <application> [application arguments...]\n\n<application>は次のいずれかです:\n  <mainclass>                コンパイルされたメイン・クラスのメイン・メソッドを実行します\n  -jar <jarfile>.jar         JARアーカイブのメイン・クラスを実行します\n  -m <module>[/<mainclass>]  モジュールのメイン・クラスを実行します\n  <sourcefile>.java          ソースファイル・プログラムをコンパイルおよび実行します\n\n主要なjavaオプションには次が含まれます:\n  --class-path <class path>\n    <class path>は、クラス・ファイルを検索するためのディレクトリおよびJARアーカイブのリストであり、"{0}"で区切られます\n  --module-path <module path>\n    <module path>は、モジュールを検索するためのディレクトリおよびJARアーカイブのリストであり、"{0}"で区切られます\n  -version\n    製品バージョンをエラー・ストリームに出力し終了します\n\n使用方法についての追加のヘルプの場合:           java --help\n対話型のJava環境の場合:    jshell

java.launcher.bad.option=\n認識されないshowSettingsオプション: {0}\n有効な値は"all"、"locale"、"properties"、"security"、"system"(Linuxのみ)、"vm"\n有効な"security"サブオプションの値は"all"、"properties"、"providers"、"tls"\n"java -X"を参照してください\n
java.launcher.cls.error1=エラー: メイン・クラス{0}を検出およびロードできませんでした\n原因: {1}: {2}
java.launcher.cls.error2=エラー: メイン・メソッドがクラス{0}で見つかりません。次のようにメイン・メソッドを定義してください。\n   public static void main(String[] args)\nまたはJavaFXアプリケーション・クラスは{1}を拡張する必要があります
java.launcher.cls.error3=エラー: JavaFXランタイム・コンポーネントが不足しており、このアプリケーションの実行に必要です
java.launcher.cls.error4=エラー: メイン・クラス{0}のロード中にLinkageErrorが発生しました\n\t{1}
java.launcher.cls.error5=エラー: メイン・クラス{0}を初期化できません\n原因: {1}: {2}
java.launcher.cls.error6=エラー: 非privateのゼロ引数コンストラクタがクラス{0}に見つかりません\n既存のコンストラクタからprivateを削除するか、次のように定義してください:\n   public {0}()
java.launcher.cls.error7=エラー: staticでない内部クラス{0}コンストラクタを起動できません \n内部クラスをstaticにするか、内部クラスを外部に出してソース・ファイルを区別してください
java.launcher.jar.error1=エラー: ファイル{0}を開こうとしているときに、予期しないエラーが発生しました
java.launcher.jar.error2={0}にマニフェストが見つかりません
java.launcher.jar.error3={0}にメイン・マニフェスト属性がありません
java.launcher.jar.error4={0}内のJavaエージェントのロード中にエラーが発生しました
java.launcher.jar.error5=エラー: ファイル{0}を閉じるときに、予期しないエラーが発生しました
java.launcher.jar.error.illegal.ena.value=エラー: Enable-Native-Accessマニフェスト属性の値"{0}"が不正です。''ALL-UNNAMED''のみ許可されます
java.launcher.init.error=初期化エラー
java.launcher.javafx.error1=エラー: JavaFX launchApplicationメソッドに誤ったシグネチャがあり、\nstaticを宣言してvoid型の値を返す必要があります
java.launcher.module.error1=モジュール{0}にModuleMainClass属性がありません。-m <module>/<main-class>を使用してください
java.launcher.module.error2=エラー: モジュール{1}にメイン・クラス{0}が見つからなかったかロードできませんでした
java.launcher.module.error3=エラー: モジュール{1}のメイン・クラス{0}をロードできません\n原因: {2}
java.launcher.module.error4={0}が見つかりません
java.launcher.module.error5=エラー: モジュール{1}のメイン・クラス{0}を初期化できません\n原因: {2}: {3}
