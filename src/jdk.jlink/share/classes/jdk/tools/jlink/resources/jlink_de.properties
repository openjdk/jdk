#
# Copyright (c) 2015, 2023, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

jlink.description=Set aus Modulen und zugehörige Abhängigkeiten in einem benutzerdefinierten Laufzeitimage assemblieren und optimieren

main.usage.summary=Verwendung: {0} <Optionen> --module-path <Modulpfad> --add-modules <Modul>[,<Modul>...]\nMit --help können Sie eine Liste der möglichen Optionen aufrufen

main.usage=Verwendung: {0} <Optionen> --module-path <Modulpfad> --add-modules <Modul>[,<Modul>...]\nMögliche Optionen:

main.opt.help=\  -h, --help, -?                        Gibt diese Hilfemeldung aus

main.opt.version=\      --version                         Versionsinformationen

main.opt.module-path=\  -p, --module-path <Pfad>              Modulpfad.\n                                        Wird er nicht angegeben, wird das jmods-Verzeichnis des JDK\n                                        verwendet, falls vorhanden. Wird er angegeben,\n                                        aber enthält er nicht das Modul java.base,\n                                        wird das jmods-Verzeichnis des JDK hinzugefügt,\n                                        falls vorhanden.

main.opt.add-modules=\      --add-modules <Mod>[,<Mod>...]    Root-Module, die zusätzlich zu den anfänglichen\n                                        Modulen aufgelöst werden. <Mod> kann auch ALL-MODULE-PATH sein.

main.opt.limit-modules=\      --limit-modules <Mod>[,<Mod>...]  Begrenzt den Bereich der beobachtbaren\n                                        Module

main.opt.output=\      --output <Pfad>                   Ort des Ausgabepfads

main.opt.launcher=\      --launcher <Name>=<Modul>[/<Hauptklasse>]\n                                        Fügt einen Launcher-Befehl mit dem angegebenen\n                                        Namen für das Modul und die Hauptklasse hinzu,\n                                        falls angegeben

main.opt.bind-services=\      --bind-services                   Bindet Serviceprovidermodule und ihre\n                                        Abhängigkeiten ein

main.opt.suggest-providers=\      --suggest-providers [<Name>,...]  Schlägt Provider vor, welche die angegebenen\n                                        Servicetypen aus dem Modulpfad implementieren

main.command.files=\      @<Dateiname>                       Liest Optionen aus der Datei

main.opt.endian=\      --endian <little|big>             Bytereihenfolge des generierten jimage\n                                        (Standard: nativ)

main.opt.save-opts=\      --save-opts <Dateiname>            Speichert jlink-Optionen in der angegebenen Datei

main.opt.ignore-signing-information=\      --ignore-signing-information      Unterdrückt einen schwerwiegenden Fehler, wenn signierte\n                                        modulare JAR-Dateien in das Image eingebunden werden.\n                                        Die signaturbezogenen Dateien der signierten\n                                        modularen JAR-Dateien werden nicht in das\n                                        Laufzeitimage kopiert.

main.opt.verbose=\  -v, --verbose                         Aktiviert Verbose-Tracing

main.msg.bug=Eine Ausnahme ist in jlink aufgetreten. Melden Sie in der Java-Bugdatenbank (https://bugreport.java.com/bugreport/) einen Bug, nachdem Sie die Bugdatenbank auf Duplikate geprüft haben. Geben Sie in Ihrem Bericht Ihr Programm und die folgende Diagnose an. Vielen Dank.

main.extended.help=Liste der verfügbaren Plug-ins:

main.extended.help.footer=Bei Optionen, die eine <Musterliste> erfordern, ist der Wert eine kommagetrennte\nListe von Elementen, die jeweils eines der folgenden Formate verwenden:\n  <Globales Muster>\n  glob:<Globales Muster>\n  regex:<Regex-Muster>\n  @<Dateiname>, wobei der Dateiname der Name einer Datei mit zu verwendenden Mustern ist,\n              ein Muster pro Zeile\n\n

error.prefix=Fehler:
warn.prefix=Warnung:

err.empty.module.path=leerer Modulpfad
err.jlink.version.mismatch=jlink-Version {0}.{1} stimmt nicht mit Ziel-java.base-Version {2}.{3} überein
err.automatic.module:automatisches Modul kann nicht mit jlink verwendet werden: {0} aus {1}
err.unknown.byte.order:unbekannte Bytereihenfolge {0}
err.launcher.main.class.empty:Launcher-Hauptklassenname darf nicht leer sein: {0}
err.launcher.module.name.empty:Launcher-Modulname darf nicht leer sein: {0}
err.launcher.value.format:Launcher-Wert muss folgendes Format haben: <Befehl>=<Modul>[/<Hauptklasse>]: {0}
err.output.must.be.specified:--output muss angegeben werden
err.modulepath.must.be.specified:--module-path ist nicht angegeben, und dieses Laufzeitimage enthält nicht das jmods-Verzeichnis.
err.mods.must.be.specified:keine Module zum {0} angegeben
err.path.not.found=Pfad nicht gefunden: {0}
err.path.not.valid=ungültiger Pfad: {0}
err.file.not.found=Datei nicht gefunden: {0}
err.file.error=Zugriff nicht möglich auf Datei: {0}
err.dir.exists={0} ist bereits vorhanden
err.badpattern=ungültiges Muster {0}
err.unknown.option=unbekannte Option: {0}
err.missing.arg=kein Wert angegeben für {0}
err.internal.error=interner Fehler: {0} {1} {2}
err.invalid.arg.for.option={0} akzeptiert nicht das Argument "{1}"
err.option.after.class=Option muss angegeben werden vor den Klassen: {0}
err.option.unsupported={0} nicht unterstützt: {1}
err.orphan.arguments=ungültiges Argument: {0}
err.config.defaults=Eigenschaft {0} fehlt in der Konfiguration
err.config.defaults.value=falscher Wert in Standardeigenschaft: {0}
err.bom.generation=Generierung der BOM-Datei nicht erfolgreich: {0}
err.not.a.module.directory=Unter Verzeichnis {0} ist keine Datei module-info.class vorhanden
err.cannot.read.module.info=Moduldeskriptor kann nicht gelesen werden aus {0}
err.not.modular.format=ausgewähltes Modul {0} ({1}) hat nicht das jmod- oder modulare JAR-Format
err.signing=signierte modulare JAR-Datei {0} wird gegenwärtig nicht unterstützt, verwenden Sie --ignore-signing-information, um den Fehler zu unterdrücken
err.cannot.determine.target.platform=Zielplattform kann nicht aus {0} bestimmt werden
err.unknown.target.platform=Unbekannte Zielplattform {0}
err.target.endianness.mismatch=Die angegebene Option --endian {0} entspricht nicht dem Endian-Typ der Zielplattform {1}
warn.signing=WARNUNG: Signierte modulare JAR-Datei {0} wird gegenwärtig nicht unterstützt
warn.invalid.arg=ungültiger Klassenname, oder Pfadname ist nicht vorhanden: {0}
warn.split.package=Package {0}, definiert in {1} {2}
warn.provider.notfound=Kein Provider für Service angegeben für --suggest-providers: {0}
no.suggested.providers=Option --bind-services ist angegeben. Keine weiteren Provider vorgeschlagen.
suggested.providers.header=Vorgeschlagene Provider
providers.header=Provider
