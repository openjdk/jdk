#
# Copyright (c) 2017, 2025, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#
#

help.header=Usage: jpackage <options>

help.short=Use jpackage --help (or -h) for a list of possible options

help.option-group.sample.create-native-package=\
\    Generate an application package suitable for the host system:\n\
\        For a modular application:\n\
\            jpackage -n name -p modulePath -m moduleName/className\n\
\        For a non-modular application:\n\
\            jpackage -i inputDir -n name \\\n\
\                --main-class className --main-jar myJar.jar\n\
\        From a pre-built application image:\n\
\            jpackage -n name --app-image appImageDir

help.option-group.sample.create-app-image=\
\    Generate an application image:\n\
\        For a modular application:\n\
\            jpackage --type app-image -n name -p modulePath \\\n\
\                -m moduleName/className\n\
\        For a non-modular application:\n\
\            jpackage --type app-image -i inputDir -n name \\\n\
\                --main-class className --main-jar myJar.jar\n\
\        To provide your own options to jlink, run jlink separately:\n\
\            jlink --output appRuntimeImage -p modulePath \\\n\
\                --add-modules moduleName \\\n\
\                --no-header-files [<additional jlink options>...]\n\
\            jpackage --type app-image -n name \\\n\
\                -m moduleName/className --runtime-image appRuntimeImage

help.option-group.sample.create-runtime-installer=\
\    Generate a Java runtime package:\n\
\        jpackage -n name --runtime-image <runtime-image>

help.option-group.sample.sign-app-image=\
\    Sign the predefined application image:\n\
\        jpackage --type app-image --app-image <app-image> \\\n\
\            --mac-sign [<additional signing options>...]\n\
\        Note: the only additional options that are permitted in this mode are:\n\
\              the set of additional mac signing options and --verbose

help.option-group.sample=Sample usages
help.option-group.generic=Generic Options
help.option-group.runtime-image=Options for creating the runtime image
help.option-group.app-image=Options for creating the application image
help.option-group.launcher=Options for creating the application launcher(s)
help.option-group.launcher-platform=Platform dependent option for creating the application launcher
help.option-group.package=Options for creating the application package
help.option-group.package-platform=Platform dependent options for creating the application package

main.option.argument-file=\
\          Read options and/or mode from a file\n\
\          This option can be used multiple times.

main.option.about-url=\
\          URL of the application's home page

main.option.add-launcher=\
\          Name of launcher, and a path to a Properties file that contains\n\
\          a list of key, value pairs\n\
\          (absolute path or relative to the current directory)\n\
\          The keys "arguments", "description", "icon", "java-options",\n\
\          "launcher-as-service", "linux-shortcut", "main-class", "main-jar",\n\
\          "module", "win-console", "win-menu", and "win-shortcut" can be used.\n\
\          These options are added to, or used to overwrite, the original\n\
\          command line options to build an additional alternative launcher.\n\
\          The main application launcher will be built from the command line\n\
\          options. Additional alternative launchers can be built using\n\
\          this option, and this option can be used multiple times to\n\
\          build multiple additional launchers.

main.option.add-modules=\
\          A comma (",") separated list of modules to add\n\
\          This module list, along with the main module (if specified)\n\
\          will be passed to jlink as the --add-module argument.\n\
\          If not specified, either just the main module (if --module is\n\
\          specified), or the default set of modules (if --main-jar is\n\
\          specified) are used.\n\
\          This option can be used multiple times.

main.option.app-content=\
\          A comma separated list of paths to files and/or directories\n\
\          to add to the application payload.\n\
\          This option can be used more than once.

main.option.app-content.mac=\
\          A comma separated list of paths to files and/or directories\n\
\          to add to the application payload.\n\
\          This option can be used more than once.\n\
\          Note: The value should be a directory with the "Resources"\n\
\          subdirectory (or any other directory that is valid in the "Contents"\n\
\          directory of the application bundle). Otherwise, jpackage may produce\n\
\          invalid application bundle which may fail code signing and/or\n\
\          notarization.

main.option.app-image=\
\          Location of the predefined application image that is used\n\
\          to build an installable package\n\
\          (absolute path or relative to the current directory)

main.option.app-image.mac=\
\          Location of the predefined application image that is used\n\
\          to build an installable package or to sign the predefined\n\
\          application image\n\
\          (absolute path or relative to the current directory)

main.option.app-version=\
\          Version of the application and/or package

main.option.arguments=\
\          Command line arguments to pass to the main class if no command\n\
\          line arguments are given to the launcher\n\
\          This option can be used multiple times.

main.option.copyright=\
\          Copyright for the application

main.option.description=\
\          Description of the application

main.option.dest=\
\          Path where generated output file is placed\n\
\          (absolute path or relative to the current directory)\n\
\          Defaults to the current working directory.

main.option.file-associations=\
\          Path to a Properties file that contains list of key, value pairs\n\
\          (absolute path or relative to the current directory)\n\
\          The keys "extension", "mime-type", "icon", and "description"\n\
\          can be used to describe the association.\n\
\          This option can be used multiple times.

main.option.help=\
\          Print the usage text with a list and description of each valid\n\
\          option for the current platform to the output stream, and exit

main.option.icon=\
\          Path of the icon of the application package\n\
\          (absolute path or relative to the current directory)

main.option.input=\
\          Path of the input directory that contains the files to be packaged\n\
\          (absolute path or relative to the current directory)\n\
\          All files in the input directory will be packaged into the\n\
\          application image.

main.option.install-dir=\
\          Absolute path of the installation directory of the application

main.option.install-dir.win=\
\          Relative sub-path of the installation location of\n\
\          the application such as "Program Files" or "AppData".

main.option.installer-runtime-image=\
\          Path of the predefined runtime image to install\n\
\          (absolute path or relative to the current directory)\n\
\          Option is required when creating a runtime package.

main.option.java-options=\
\          Options to pass to the Java runtime\n\
\          This option can be used multiple times.

main.option.jlink-options=\
\          A space separated list of options to pass to jlink\n\
\          If not specified, defaults to "--strip-native-commands\n\
\          --strip-debug --no-man-pages --no-header-files".\n\
\          This option can be used multiple times.

main.option.launcher-as-service=\
\          Request to create an installer that will register the main\n\
\          application launcher as a background service-type application.

main.option.license-file=\
\          Path to the license file\n\
\          (absolute path or relative to the current directory)

main.option.linux-app-category=\
\          Group value of the RPM <name>.spec file or\n\
\          Section value of DEB control file

main.option.linux-app-release=\
\          Release value of the RPM <name>.spec file or\n\
\          Debian revision value of the DEB control file

main.option.linux-deb-maintainer=\
\          Maintainer for .deb package

main.option.linux-menu-group=\
\          Menu group this application is placed in

main.option.linux-package-deps=\
\          Required packages or capabilities for the application

main.option.linux-package-name=\
\          Name for Linux package, defaults to the application name

main.option.linux-rpm-license-type=\
\          Type of the license ("License: <value>" of the RPM .spec)

main.option.linux-shortcut=\
\          Creates a shortcut for the application.

main.option.mac-app-category=\
\          String used to construct LSApplicationCategoryType in\n\
\          application plist.  The default value is "utilities".

main.option.mac-app-image-sign-identity=\
\          Identity used to sign application image. This value will be passed\n\
\          directly to --sign option of "codesign" tool. This option cannot\n\
\          be combined with --mac-signing-key-user-name.

main.option.mac-app-store=\
\          Indicates that the jpackage output is intended for the\n\
\          Mac App Store.

main.option.mac-dmg-content=\
\          Include all the referenced content in the dmg.\n\
\          This option can be used multiple times.

main.option.mac-entitlements=\
\          Path to file containing entitlements to use when signing\n\
\          executables and libraries in the bundle.

main.option.mac-installer-sign-identity=\
\          Identity used to sign "pkg" installer. This value will be passed\n\
\          directly to --sign option of "productbuild" tool. This option\n\
\          cannot be combined with --mac-signing-key-user-name.

main.option.mac-package-identifier=\
\          An identifier that uniquely identifies the application for macOS\n\
\          Defaults to the main class name.\n\
\          May only use alphanumeric (A-Z,a-z,0-9), hyphen (-),\n\
\          and period (.) characters.

main.option.mac-package-name=\
\          Name of the application as it appears in the Menu Bar\n\
\          This can be different from the application name.\n\
\          This name must be less than 16 characters long and be suitable for\n\
\          displaying in the menu bar and the application Info window.\n\
\          Defaults to the application name.

main.option.mac-package-signing-prefix=\
\          When signing the application package, this value is prefixed\n\
\          to all components that need to be signed that don't have\n\
\          an existing package identifier.

main.option.mac-sign=\
\          Request that the package or the predefined application image be\n\
\          signed.

main.option.mac-signing-keychain=\
\          Name of the keychain to search for the signing identity\n\
\          If not specified, the standard keychains are used.

main.option.mac-signing-key-user-name=\
\          Team or user name portion of Apple signing identities. For direct\n\
\          control of the signing identity used to sign application images or\n\
\          installers use --mac-app-image-sign-identity and/or\n\
\          --mac-installer-sign-identity. This option cannot be combined with\n\
\          --mac-app-image-sign-identity or --mac-installer-sign-identity.

main.option.main-class=\
\          Qualified name of the application main class to execute\n\
\          This option can only be used if --main-jar is specified.

main.option.main-jar=\
\          The main JAR of the application; containing the main class\n\
\          (specified as a path relative to the input path)\n\
\          Either --module or --main-jar option can be specified but not\n\
\          both.

main.option.module=\
\          The main module (and optionally main class) of the application\n\
\          This module must be located on the module path.\n\
\          When this option is specified, the main module will be linked\n\
\          in the Java runtime image.  Either --module or --main-jar\n\
\          option can be specified but not both.

main.option.module-path=\
\          A : separated list of paths\n\
\          Each path is either a directory of modules or the path to a\n\
\          modular jar.\n\
\          (Each path is absolute or relative to the current directory.)\n\
\          This option can be used multiple times.
main.option.module-path.win=\
\          A ; separated list of paths\n\
\          Each path is either a directory of modules or the path to a\n\
\          modular jar.\n\
\          (Each path is absolute or relative to the current directory.)\n\
\          This option can be used multiple times.

main.option.name=\
\          Name of the application and/or package

main.option.resource-dir=\
\          Path to override jpackage resources\n\
\          Icons, template files, and other resources of jpackage can be\n\
\          over-ridden by adding replacement resources to this directory.\n\
\          (absolute path or relative to the current directory)

main.option.runtime-image=\
\          Path of the predefined runtime image that will be copied into\n\
\          the application image\n\
\          (absolute path or relative to the current directory)\n\
\          If --runtime-image is not specified, jpackage will run jlink to\n\
\          create the runtime image using options:\n\
\          --strip-debug, --no-header-files, --no-man-pages, and\n\
\          --strip-native-commands.

main.option.temp=\
\          Path of a new or empty directory used to create temporary files\n\
\          (absolute path or relative to the current directory)\n\
\          If specified, the temp dir will not be removed upon the task\n\
\          completion and must be removed manually.\n\
\          If not specified, a temporary directory will be created and\n\
\          removed upon the task completion.

main.option.type.win=\
\          The type of package to create\n\
\          Valid values are: {"app-image", "exe", "msi"}\n\
\          If this option is not specified a platform dependent\n\
\          default type will be created.
main.option.type.linux=\
\          The type of package to create\n\
\          Valid values are: {"app-image", "deb", "rpm"}\n\
\          If this option is not specified a platform dependent\n\
\          default type will be created.
main.option.type.mac=\
\          The type of package to create\n\
\          Valid values are: {"app-image", "dmg", "pkg"}\n\
\          If this option is not specified a platform dependent\n\
\          default type will be created.

main.option.vendor=\
\          Vendor of the application

main.option.verbose=\
\          Enables verbose output

main.option.version=\
\          Print the product version to the output stream and exit.

main.option.win-console=\
\          Creates a console launcher for the application, should be\n\
\          specified for application which requires console interactions

main.option.win-dir-chooser=\
\          Adds a dialog to enable the user to choose a directory in which\n\
\          the product is installed.

main.option.win-help-url=\
\          URL where user can obtain further information or technical support

main.option.win-menu=\
\          Request to add a Start menu shortcut for this application

main.option.win-menu-group=\
\          Start Menu group this application is placed in

main.option.win-per-user-install=\
\          Request to perform an install on a per-user basis

main.option.win-shortcut=\
\          Request to add desktop shortcut for this application

main.option.win-shortcut-prompt=\
\          Adds a dialog to enable the user to choose if shortcuts\n\
\          will be created by installer.

main.option.win-update-url=\
\          URL of available application update information

main.option.win-upgrade-uuid=\
\          UUID associated with upgrades for this package

