#
# Copyright (c) 1999, 2024, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

## tool

javac.description=Javaクラスおよびインタフェースの定義を読み取り、バイトコードおよびクラス・ファイルにコンパイルします

## standard options

javac.opt.g=すべてのデバッグ情報を生成する
javac.opt.g.none=デバッグ情報を生成しない
javac.opt.g.lines.vars.source=いくつかのデバッグ情報のみを生成する
javac.opt.nowarn=警告を発生させない
javac.opt.verbose=コンパイラの動作についてメッセージを出力する
javac.opt.deprecation=推奨されないAPIが使用されているソースの位置を出力する
javac.opt.classpath=ユーザー・クラス・ファイルおよび注釈プロセッサを検索する位置を指定する
javac.opt.modulepath=アプリケーション・モジュールを検索する位置を指定する
javac.opt.sourcepath=入力ソース・ファイルを検索する位置を指定する
javac.opt.m=指定したモジュールのみコンパイルし、タイムスタンプを確認する
javac.opt.modulesourcepath=複数モジュールの入力ソース・ファイルを検索する位置を指定する
javac.opt.bootclasspath=ブートストラップ・クラス・パスの位置をオーバーライドする
javac.opt.system=システム・モジュールの位置をオーバーライドする
javac.opt.upgrademodulepath=アップグレード可能なモジュールの位置をオーバーライドする
javac.opt.endorseddirs=推奨規格パスの位置をオーバーライドする
javac.opt.extdirs=インストール済み拡張機能の位置をオーバーライドする
javac.opt.processorpath=注釈プロセッサを検索する位置を指定する
javac.opt.processormodulepath=注釈プロセッサを検索するモジュール・パスを指定する
javac.opt.processor=実行する注釈プロセッサの名前。デフォルトの検出処理をバイパス
javac.opt.parameters=メソッド・パラメータにリフレクション用のメタデータを生成します
javac.opt.proc.none.only=注釈処理やコンパイルを実行するかどうかを制御します。
javac.opt.d=生成されたクラス・ファイルを格納する位置を指定する
javac.opt.sourceDest=生成されたソース・ファイルを格納する場所を指定する
javac.opt.headerDest=生成されたネイティブ・ヘッダー・ファイルを格納する場所を指定する
javac.opt.J=<flag>を実行システムに直接渡す
javac.opt.encoding=ソース・ファイルが使用する文字エンコーディングを指定する
javac.opt.profile=使用されているAPIが、指定したプロファイルで使用可能かどうかを確認します。\nこのオプションは非推奨であり、今後のリリースで削除される可能性があります。
javac.opt.target=指定されたJava SEリリースに適したクラス・ファイルを生成します。サポートされているリリース: \n    {0}
javac.opt.release=指定されたJava SEリリースに対してコンパイルします。サポートされているリリース: \n    {0}
javac.opt.source=指定されたJava SEリリースとソースの互換性を保持します。サポートされているリリース: \n    {0}
javac.opt.Werror=警告が発生した場合にコンパイルを終了する
javac.opt.A=注釈プロセッサに渡されるオプション
javac.opt.implicit=暗黙的に参照されるファイルについてクラス・ファイルを生成するかどうかを指定する
javac.opt.pkginfo=package-infoファイルの処理を指定する
javac.opt.multi-release=マルチリリースjarの使用するリリースを指定する
javac.opt.arg.class=<class>
javac.opt.arg.class.list=<class1>[,<class2>,<class3>...]
javac.opt.arg.flag=<flag>
javac.opt.arg.key.equals.value=key[=value]
javac.opt.arg.path=<path>
javac.opt.arg.mspath=<module-source-path>
javac.opt.arg.m=<module>(,<module>)*
javac.opt.arg.jdk=<jdk>|none
javac.opt.arg.dirs=<dirs>
javac.opt.arg.directory=<directory>
javac.opt.arg.encoding=<encoding>
javac.opt.arg.profile=<profile>
javac.opt.arg.release=<release>
javac.opt.arg.number=<number>
javac.opt.plugin=実行されるプラグインの名前とオプション引数
javac.opt.arg.plugin="name args"
javac.opt.arg.multi-release=<release>
javac.opt.arg.default.module.for.created.files=<module-name>

## extended options

javac.opt.maxerrs=出力するエラーの最大数を設定する
javac.opt.maxwarns=出力する警告の最大数を設定する
javac.opt.nogj=言語の汎用性を受け付けない
javac.opt.moreinfo=型変数の拡張情報を出力する
javac.opt.printsearch=クラス・ファイルの検索位置情報を出力する
javac.opt.prompt=各エラーで停止する
javac.opt.s=クラス・ファイルのかわりにjavaソースを発行する
javac.opt.version=バージョン情報
javac.opt.arg.pathname=<pathname>
javac.opt.arg.file=<filename>
javac.opt.Xbootclasspath.p=ブートストラップ・クラス・パスの先頭に付加する
javac.opt.Xbootclasspath.a=ブートストラップ・クラス・パスに追加する
javac.opt.Xlint=推奨の警告を有効にする
javac.opt.Xlint.all=すべての警告を有効にします
javac.opt.Xlint.none=すべての警告を無効にします
#L10N: do not localize: -Xlint
javac.opt.arg.Xlint=<key>(,<key>)*
javac.opt.Xlint.custom=有効または無効にする警告(カンマ区切り)。\n指定した警告を無効にするには、キーの前に''-''を指定します。\nサポートされているキーを表示するには--help-lintを使用します。
javac.opt.Xlint.desc.auxiliaryclass=ソース・ファイルで非表示になっているが他のファイルから使用されている補助クラスについて警告します。

javac.opt.Xlint.desc.cast=不要なキャストの使用について警告します。

javac.opt.Xlint.desc.classfile=クラス・ファイルの内容に関連した問題について警告します。

javac.opt.Xlint.desc.dangling-doc-comments=どの宣言にも添付されていないドキュメンテーション・コメントについて警告します。

javac.opt.Xlint.desc.missing-explicit-ctor=エクスポートされたパッケージのpublicおよびprotectedのクラスに明示的なコンストラクタがないことを警告します。

javac.opt.Xlint.desc.deprecation=非推奨項目の使用について警告します。

javac.opt.Xlint.desc.dep-ann=JavaDocで非推奨としてマークされているが@非推奨の注釈を使用していない項目について警告します。

javac.opt.Xlint.desc.divzero=定整数0で除算されることについて警告します。

javac.opt.Xlint.desc.empty=if以降が空の文であることについて警告します。

javac.opt.Xlint.desc.exports=モジュールのエクスポートに関する問題について警告します。

javac.opt.Xlint.desc.fallthrough=switch文の1つのcaseから次へのフォール・スルーについて警告します。

javac.opt.Xlint.desc.finally=正常に完了しないfinally節について警告します。

javac.opt.Xlint.desc.incubating=実験的なモジュールの使用について警告します。

javac.opt.Xlint.desc.lossy-conversions=複合代入における精度が失われる可能性がある変換についての警告。

javac.opt.Xlint.desc.module=モジュール・システム関連の問題について警告します。

javac.opt.Xlint.desc.opens=モジュールのオープンに関する問題について警告します。

javac.opt.Xlint.desc.options=コマンド行オプションの使用に関する問題について警告します。

javac.opt.Xlint.desc.output-file-clash=出力ファイルがコンパイル中に上書きされた場合に警告します。これは大/小文字が区別されない\n                         ファイルシステムなどで発生する可能性があります。クラス・ファイル、ネイティブ・ヘッダー・ファイルおよびソース・ファイルがカバーされます。

javac.opt.Xlint.desc.overloads=メソッドのオーバーロードに関する問題について警告します。

javac.opt.Xlint.desc.overrides=メソッドのオーバーライドに関する問題について警告します。

javac.opt.Xlint.desc.path=コマンド行の無効なパス要素について警告します。

javac.opt.Xlint.desc.processing=注釈処理に関する問題について警告します。

javac.opt.Xlint.desc.rawtypes=raw型の使用について警告します。

javac.opt.Xlint.desc.removal=削除用にマークされたAPIの使用について警告します。

javac.opt.Xlint.desc.requires-automatic=requires句内の自動モジュールの使用について警告します。

javac.opt.Xlint.desc.requires-transitive-automatic=requires transitive内の自動モジュールについて警告します。

javac.opt.Xlint.desc.serial=serialVersionUIDフィールドのない直列化可能クラスについて警告します。 \n                         直列化可能および外部化可能クラスとインタフェースでの他の要注意宣言についても警告します。

javac.opt.Xlint.desc.static=インスタンスを使用したstaticメンバーへのアクセスについて警告します。

javac.opt.Xlint.desc.strictfp=strictfp修飾子の不要な使用について警告します。

javac.opt.Xlint.desc.text-blocks=テキスト・ブロック・インデント内の一貫性のない空白文字について警告します。

javac.opt.Xlint.desc.this-escape=外部サブクラスでオーバーライドされる可能性のあるメソッドをコンストラクタが呼び出した場合に警告します。\n                         このようなメソッドは、サブクラス・コンストラクタがその初期化を完了する前に実行されます。

javac.opt.Xlint.desc.try=tryブロック(try-with-resourcesなど)の使用に関する問題について警告します。

javac.opt.Xlint.desc.unchecked=無検査操作について警告します。

javac.opt.Xlint.desc.varargs=安全ではない可能性がある可変引数メソッドについて警告します

javac.opt.Xlint.desc.preview=プレビュー言語機能の使用について警告します

javac.opt.Xlint.desc.restricted=制限されたメソッドの使用について警告します。

javac.opt.Xlint.desc.synchronization=値ベース・クラスのインスタンスでの同期の試行について警告します。

javac.opt.Xdoclint=javadocコメントの問題に関する推奨チェックを有効にします
# L10N: do not localize: all none
javac.opt.Xdoclint.subopts = (all|none|[-]<group>)[/<access>]

# L10N: do not localize: accessibility html missing reference syntax
# L10N: do not localize: public protected package private
javac.opt.Xdoclint.custom=javadocコメントの問題に関する特定のチェックを有効または無効にします。\n        ここで、<group>はaccessibility、html、missing、referenceまたはsyntaxのいずれかで、\n        <access>はpublic、protected、packageまたはprivateのいずれかです。

javac.opt.Xdoclint.package.args = [-]<packages>(,[-]<package>)*

javac.opt.Xdoclint.package.desc=特定のパッケージのチェックを有効または無効にします。各<package>は、\n修飾されたパッケージ名、またはパッケージ名の接頭辞の後に''.*''を\n指定(指定したパッケージのすべてのサブパッケージに拡張)したものです。各<package>\nの前に''-''を指定すると、指定した1つ以上のパッケージに関するチェックを無効にできます。

javac.opt.Xstdout=標準出力をリダイレクトする
javac.opt.X=追加オプションのヘルプを出力します
javac.opt.help=このヘルプ・メッセージを出力します
javac.opt.help.lint=-Xlintにサポートされているキーを出力します
javac.opt.help.lint.header=-Xlintにサポートされているキーは次のとおりです:
javac.opt.print=指定した型のテキスト表示を出力する
javac.opt.printRounds=注釈処理の往復についての情報を印刷する
javac.opt.printProcessorInfo=プロセッサが処理を依頼される注釈についての情報を印刷する
javac.opt.userpathsfirst=ブート・クラスパスの後ではなく、ブート・クラスパスの前にクラスのクラスパスおよびソース・パスを検索する
javac.opt.prefer=暗黙的にコンパイルされるクラスについて、ソース・ファイルとクラス・ファイルの両方が見つかった際どちらを読み込むか指定する
javac.opt.preview=プレビュー言語機能を有効にします。-sourceまたは--releaseとともに使用されます。
javac.opt.AT=ファイルからの読取りオプションおよびファイル名
javac.opt.diags=診断モードの選択
javac.opt.addExports=<other-module>がALL-UNNAMEDである場合、その定義モジュールから、追加モジュールまたは\n        すべての名前のないモジュールにエクスポート済とみなされるようにパッケージを指定します。
javac.opt.arg.addExports=<module>/<package>=<other-module>(,<other-module>)*
javac.opt.addReads=指定のモジュールで必須とみなされるように追加モジュールを指定します。\n名前のないモジュールを必要とする場合、<other-module>は\nALL-UNNAMEDにします。
javac.opt.arg.addReads=<module>=<other-module>(,<other-module>)*
javac.opt.patch=JARファイルまたはディレクトリのクラスおよびリソースでモジュールを\n        オーバーライドまたは拡張します
javac.opt.arg.patch=<module>=<file>(:<file>)*
javac.opt.addmods=初期モジュールに加えて解決するルート・モジュール、または<module>が\n        ALL-MODULE-PATHである場合はモジュール・パスのすべてのモジュール。
javac.opt.arg.addmods=<module>(,<module>)*
javac.opt.limitmods=参照可能なモジュールの領域を制限します
javac.opt.arg.limitmods=<module>(,<module>)*
javac.opt.module.version=コンパイルするモジュールのバージョンを指定します
javac.opt.arg.module.version=<バージョン>
javac.opt.inherit_runtime_environment=実行時環境からモジュール・システム構成オプションを継承します。
javac.opt.default.module.for.created.files=何も指定されていないか、推定型の場合、注釈プロセッサによって作成されるファイルのターゲット・モジュールをフォールバックします。
javac.opt.lineDocComments=''///''で行を開始すると、ドキュメンテーション・コメントのサポートが無効化されます

## messages

javac.msg.usage.header=使用方法: {0} <options> <source files>\n使用可能なオプションには次のものがあります。

javac.msg.usage=使用方法: {0} <options> <source files>\n使用可能なオプションのリストについては、--helpを使用します

javac.msg.usage.nonstandard.footer=この追加オプションは予告なしに変更されることがあります。

javac.msg.bug=コンパイラで例外が発生しました({0})。バグ・データベース(https://bugs.java.com)で重複がないかをご確認のうえ、Javaのバグ・レポート・ページ(https://bugreport.java.com)から、Javaコンパイラに対するバグの登録をお願いいたします。レポートには、該当のプログラム、次の診断内容、およびJavaコンパイラに渡されたパラメータをご入力ください。ご協力ありがとうございます。

javac.msg.io=\n\n入出力エラーが発生しました。\n詳細は次のスタックトレースで調査してください。\n

javac.msg.proc.annotation.uncaught.exception=\n\n注釈処理で捕捉されない例外がスローされました。\n詳細は次のスタックトレースで調査してください。\n

javac.msg.plugin.uncaught.exception=\n\nプラグインで捕捉されない例外がスローされました。\n詳細は次のスタック・トレースで調査してください。\n

javac.msg.resource=\n\nシステム・リソースが不足しています。\n詳細は次のスタックトレースで調査してください。\n

javac.version={0} {1}
javac.fullVersion={0}フル・バージョン"{1}"

javac.msg.parameters.output=javacパラメータを次の場所に出力しています: {0}

javac.msg.parameters.output.error=javacパラメータを{0}に出力しようとしたときにエラーが発生しました。パラメータが続きます:
