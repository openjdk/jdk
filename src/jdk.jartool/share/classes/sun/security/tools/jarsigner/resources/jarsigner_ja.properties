#
# Copyright (c) 2000, 2025, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

# shared (from jarsigner)
SPACE=\u0020
6SPACE=\u0020    \u0020
COMMA=,\u0020
provclass.not.a.provider=%sはプロバイダではありません
provider.name.not.found=プロバイダ名"%s"が見つかりません
provider.class.not.found=プロバイダ"%s"が見つかりません
jarsigner.error.=jarsignerエラー:\u0020
Illegal.option.=不正なオプション:\u0020
.keystore.must.be.NONE.if.storetype.is.{0}=-storetypeが{0}の場合、-keystoreはNONEである必要があります
.keypass.can.not.be.specified.if.storetype.is.{0}=-storetypeが{0}の場合、-keypassは指定できません
If.protected.is.specified.then.storepass.and.keypass.must.not.be.specified=-protectedを指定する場合は、-storepassおよび-keypassを指定しないでください
If.keystore.is.not.password.protected.then.storepass.and.keypass.must.not.be.specified=キーストアがパスワードで保護されていない場合、-storepassおよび-keypassを指定しないでください
Usage.jarsigner.options.jar.file.alias=使用方法: jarsigner [options] jar-file alias
.jarsigner.verify.options.jar.file.alias.=\u0020      jarsigner -verify [options] jar-file [alias...]
.jarsigner.version=\u0020      jarsigner -version
.keystore.url.keystore.location=[-keystore <url>]           キーストアの位置
.storepass.password.password.for.keystore.integrity=[-storepass <password>]     キーストア整合性のためのパスワード
.storetype.type.keystore.type=[-storetype <type>]         キーストアの型
.keypass.password.password.for.private.key.if.different.=[-keypass <password>]       秘密キーのパスワード(異なる場合)
.certchain.file.name.of.alternative.certchain.file=[-certchain <file>]         代替証明書チェーン・ファイルの名前
.sigfile.file.name.of.SF.DSA.file=[-sigfile <file>]           .SF/.DSAファイルの名前
.signedjar.file.name.of.signed.JAR.file=[-signedjar <file>]         署名付きJARファイルの名前
.digestalg.algorithm.name.of.digest.algorithm=[-digestalg <algorithm>]    ダイジェスト・アルゴリズムの名前
.sigalg.algorithm.name.of.signature.algorithm=[-sigalg <algorithm>]       シグネチャ・アルゴリズムの名前
.verify.verify.a.signed.JAR.file=[-verify]                   署名付きJARファイルの検証
.version.print.the.program.version=[-version]                  プログラム・バージョンを出力します
.verbose.suboptions.verbose.output.when.signing.verifying.=[-verbose[:suboptions]]     署名/検証時の詳細出力。
.suboptions.can.be.all.grouped.or.summary=\u0020                           サブオプションとして、all、groupedまたはsummaryを使用できます
.certs.display.certificates.when.verbose.and.verifying=[-certs]                    詳細出力および検証時に証明書を表示
.certs.revocation.check=[-revCheck]                 証明書失効チェックの有効化
.tsa.url.location.of.the.Timestamping.Authority=[-tsa <url>]                タイムスタンプ局の場所
.tsacert.alias.public.key.certificate.for.Timestamping.Authority=[-tsacert <alias>]          タイムスタンプ局の公開キー証明書
.tsapolicyid.tsapolicyid.for.Timestamping.Authority=[-tsapolicyid <oid>]        タイムスタンプ局のTSAPolicyID
.tsadigestalg.algorithm.of.digest.data.in.timestamping.request=[-tsadigestalg <algorithm>] タイムスタンプ・リクエストのダイジェスト・データのアルゴリズム
.internalsf.include.the.SF.file.inside.the.signature.block=[-internalsf]               シグネチャ・ブロックに.SFファイルを含める
.sectionsonly.don.t.compute.hash.of.entire.manifest=[-sectionsonly]             マニフェスト全体のハッシュは計算しない
.protected.keystore.has.protected.authentication.path=[-protected]                キーストアには保護された認証パスがある
.providerName.name.provider.name=[-providerName <name>]      プロバイダ名
.add.provider.option=[-addprovider <name>        名前でセキュリティ・プロバイダを追加する(SunPKCS11など)
.providerArg.option.1=\u0020 [-providerArg <arg>]] ... -addproviderの引数を構成する
.providerClass.option=[-providerClass <class>     完全修飾クラス名でセキュリティ・プロバイダを追加する
.providerArg.option.2=\u0020 [-providerArg <arg>]] ... -providerClassの引数を構成する
.providerPath.option=[-providerPath <list>]      プロバイダ・クラスパス
.strict.treat.warnings.as.errors=[-strict]                   警告をエラーとして処理
.conf.url.specify.a.pre.configured.options.file=[-conf <url>]               事前構成済のオプション・ファイルを指定する
.print.this.help.message=[-? -h --help]              このヘルプ・メッセージを出力します
Option.lacks.argument=オプションに引数がありません
Please.type.jarsigner.help.for.usage=使用方法についてはjarsigner --helpと入力してください
Please.specify.jarfile.name=jarfile名を指定してください
Please.specify.alias.name=別名を指定してください
Only.one.alias.can.be.specified=別名は1つのみ指定できます
This.jar.contains.signed.entries.which.is.not.signed.by.the.specified.alias.es.=このjarに含まれる署名済エントリは、指定された別名によって署名されていません。
This.jar.contains.signed.entries.that.s.not.signed.by.alias.in.this.keystore.=このjarに含まれる署名済エントリは、このキーストア内の別名によって署名されていません。
s=s
m=m
k=k
X=X
q=?
.and.d.more.=(他にも%d個)
.s.signature.was.verified.=\u0020 s=シグネチャが検証されました\u0020
.m.entry.is.listed.in.manifest=\u0020 m=エントリがマニフェスト内にリストされます
.k.at.least.one.certificate.was.found.in.keystore=\u0020 k=1つ以上の証明書がキーストアで検出されました
.X.not.signed.by.specified.alias.es.=\u0020 X =指定した別名で署名されていません
.q.unsigned.entry=\u0020 ? = 署名なしのエントリ
no.manifest.=マニフェストは存在しません。
.Signature.related.entries.=(シグネチャ関連エントリ)
.Unsigned.entries.=(署名なしのエントリ)
.Directory.entries.=(ディレクトリ・エントリ)
jar.is.unsigned=jarは署名されていません。
jar.treated.unsigned=警告: 署名が構文解析できないか検証できないため、このjarは署名なしとして扱われます。詳細は、デバッグを有効にして(-J-Djava.security.debug=jar) jarsignerを再実行してください。
jar.treated.unsigned.see.weak=このjarは、現在無効になっている弱いアルゴリズムで署名されているため、署名なしとして扱われます。\n\n詳細は、-verboseオプションを使用してjarsignerを再実行してください。
jar.treated.unsigned.see.weak.verbose=警告: このjarは、セキュリティ・プロパティによって現在無効になっている弱いアルゴリズムで署名されているため、署名なしとして扱われます:
jar.signed.=jarは署名されました。
jar.signed.with.signer.errors.=jarは署名されました - 署名者エラーがあります。
jar.verified.=jarが検証されました。
jar.verified.with.signer.errors.=jarは検証されました - 署名者エラーがあります。

history.with.ts=- 署名者: "%1$s"\n    ダイジェスト・アルゴリズム: %2$s\n    署名アルゴリズム: %3$s、%4$s\n  タイムスタンプ付加者: "%6$s" 日時: %5$tc\n    タイムスタンプのダイジェスト・アルゴリズム: %7$s\n    タイムスタンプの署名アルゴリズム: %8$s、%9$s
history.without.ts=- 署名者: "%1$s"\n    ダイジェスト・アルゴリズム: %2$s\n    署名アルゴリズム: %3$s、%4$s
history.nonexistent.entries=\u0020   警告: 存在しない署名済エントリ:\u0020
history.unparsable=- 署名関連ファイル%sを解析できません
history.nosf=- 署名関連ファイルMETA-INF/%s.SFがありません
history.nobk=- 署名関連ファイルMETA-INF/%s.SFのブロック・ファイルがありません

with.weak=%s (弱)
with.algparams.weak=%2$sを使用した%1$s (弱)
with.disabled=%s (無効)
with.algparams.disabled=%2$sを使用した%1$s (無効)
key.bit=%sキー
key.bit.weak=%sキー(弱い)
key.bit.disabled=%sキー(無効)
nonexistent.entries.found=このjarには、存在しないファイルの署名済エントリが含まれます。詳細は、-verbose出力を参照してください。
external.file.attributes.detected=POSIXファイル権限またはsymlink(あるいはその両方)の属性が検出されました。署名中はこれらの属性は無視され、署名によって保護されません。

jarsigner.=jarsigner:\u0020
signature.filename.must.consist.of.the.following.characters.A.Z.0.9.or.=シグネチャのファイル名に使用できる文字は、A-Z、0-9、_、- のみです。
unable.to.open.jar.file.=次のjarファイルを開くことができません:\u0020
unable.to.create.=作成できません:\u0020
.adding.=\u0020  追加中:\u0020
.updating.=\u0020更新中:\u0020
.signing.=\u0020 署名中:\u0020
attempt.to.rename.signedJarFile.to.jarFile.failed={0}の名前を{1}に変更しようとしましたが失敗しました
attempt.to.rename.jarFile.to.origJar.failed={0}の名前を{1}に変更しようとしましたが失敗しました
unable.to.sign.jar.=jarに署名できません:\u0020
Enter.Passphrase.for.keystore.=キーストアのパスワードを入力してください:\u0020
keystore.load.=キーストアのロード:\u0020
certificate.exception.=証明書例外:\u0020
unable.to.instantiate.keystore.class.=キーストア・クラスのインスタンスを生成できません:\u0020
Certificate.chain.not.found.for.alias.alias.must.reference.a.valid.KeyStore.key.entry.containing.a.private.key.and=次の証明書チェーンが見つかりません: {0}。{1}は、秘密キーおよび対応する公開キー証明書チェーンを含む有効なKeyStoreキー・エントリを参照する必要があります。
File.specified.by.certchain.does.not.exist=-certchainで指定されているファイルは存在しません
Cannot.restore.certchain.from.file.specified=指定されたファイルから証明書チェーンを復元できません
Certificate.chain.not.found.in.the.file.specified.=証明書チェーンは指定されたファイルに見つかりません。
found.non.X.509.certificate.in.signer.s.chain=署名者の連鎖内で非X.509証明書が検出されました
Enter.key.password.for.alias.={0}のキー・パスワードを入力してください:\u0020
unable.to.recover.key.from.keystore=キーストアからキーを復元できません
key.associated.with.alias.not.a.private.key={0}と関連付けられたキーは、秘密キーではありません
you.must.enter.key.password=キー・パスワードを入力する必要があります
unable.to.read.password.=パスワードを読み込めません:\u0020
certificate.is.valid.from=証明書は{0}から{1}まで有効です
certificate.expired.on=証明書は{0}に失効しました
certificate.is.not.valid.until=証明書は{0}まで有効ではありません
certificate.will.expire.on=証明書は{0}に失効します
.Invalid.certificate.chain.=[無効な証明書チェーン:\u0020
.Invalid.TSA.certificate.chain.=[無効なTSA証明書チェーン:\u0020
requesting.a.signature.timestamp=シグネチャ・タイムスタンプのリクエスト
TSA.location.=TSAの場所:\u0020
TSA.certificate.=TSA証明書:\u0020
no.response.from.the.Timestamping.Authority.=タイムスタンプ局からのレスポンスがありません。ファイアウォールを介して接続するときは、必要に応じてHTTPまたはHTTPSプロキシを指定してください。jarsignerに次のオプションを指定してください:
or=または
Certificate.not.found.for.alias.alias.must.reference.a.valid.KeyStore.entry.containing.an.X.509.public.key.certificate.for.the=証明書が見つかりませんでした: {0}。{1}はタイムスタンプ局のX.509公開キー証明書が含まれている有効なKeyStoreエントリを参照する必要があります。
entry.was.signed.on=エントリは{0}に署名されました
Warning.=警告:\u0020
Error.=エラー:\u0020
...Signer=>>> 署名者
...TSA=>>> TSA
trusted.certificate=信頼できる証明書
This.jar.contains.unsigned.entries.which.have.not.been.integrity.checked.=このjarには、整合性チェックをしていない署名なしのエントリが含まれています。\u0020
This.jar.contains.entries.whose.signer.certificate.has.expired.=このjarには、署名者の証明書が期限切れのエントリが含まれています。\u0020
This.jar.contains.entries.whose.signer.certificate.will.expire.within.six.months.=このjarには、署名者の証明書が6か月以内に期限切れとなるエントリが含まれています。\u0020
This.jar.contains.entries.whose.signer.certificate.is.not.yet.valid.=このjarには、署名者の証明書がまだ有効になっていないエントリが含まれています。\u0020
This.jar.contains.entries.whose.signer.certificate.is.self.signed.=このjarには、署名者の証明書が自己署名されているエントリが含まれています。\u0020
Re.run.with.the.verbose.and.certs.options.for.more.details.=詳細は、-verboseおよび-certsオプションを使用して再実行してください。
The.signer.certificate.has.expired.=署名者の証明書は期限切れです。
The.timestamp.expired.1.but.usable.2=タイムスタンプは%1$tY-%1$tm-%1$tdに期限切れになります。ただし、JARは署名者の証明書が%2$tY-%2$tm-%2$tdに期限切れになるまで有効です。
The.timestamp.has.expired.=タイムスタンプは期限切れになりました。
The.signer.certificate.will.expire.within.six.months.=署名者の証明書は6か月以内に期限切れになります。
The.timestamp.will.expire.within.one.year.on.1=タイムスタンプは1年以内の%1$tY-%1$tm-%1$tdに期限切れになります。
The.timestamp.will.expire.within.one.year.on.1.but.2=タイムスタンプは1年以内の%1$tY-%1$tm-%1$tdに期限切れになります。ただし、JARは署名者の証明書が%2$tY-%2$tm-%2$tdに期限切れになるまで有効です。
The.signer.certificate.is.not.yet.valid.=署名者の証明書はまだ有効になっていません。
The.signer.certificate.s.KeyUsage.extension.doesn.t.allow.code.signing.=署名者証明書のKeyUsage拡張機能では、コード署名は許可されません。
The.signer.certificate.s.ExtendedKeyUsage.extension.doesn.t.allow.code.signing.=署名者証明書のExtendedKeyUsage拡張機能では、コード署名は許可されません。
The.signer.certificate.s.NetscapeCertType.extension.doesn.t.allow.code.signing.=署名者証明書のNetscapeCertType拡張機能では、コード署名は許可されません。
This.jar.contains.entries.whose.signer.certificate.s.KeyUsage.extension.doesn.t.allow.code.signing.=このjarには、署名者証明書のKeyUsage拡張機能がコード署名を許可しないエントリが含まれています。
This.jar.contains.entries.whose.signer.certificate.s.ExtendedKeyUsage.extension.doesn.t.allow.code.signing.=このjarには、署名者証明書のExtendedKeyUsage拡張機能がコード署名を許可しないエントリが含まれています。
This.jar.contains.entries.whose.signer.certificate.s.NetscapeCertType.extension.doesn.t.allow.code.signing.=このjarには、署名者証明書のNetscapeCertType拡張機能がコード署名を許可しないエントリが含まれています。
.{0}.extension.does.not.support.code.signing.=[{0}拡張機能はコード署名をサポートしていません]
The.signer.s.certificate.chain.is.invalid.reason.1=署名者の証明書チェーンが無効です。理由: %s
The.tsa.certificate.chain.is.invalid.reason.1=TSA証明書チェーンが無効です。理由: %s
The.signer.s.certificate.is.self.signed.=署名者の証明書は自己署名されています。
The.1.algorithm.specified.for.the.2.option.is.considered.a.security.risk..This.algorithm.will.be.disabled.in.a.future.update.=%1$sアルゴリズム(%2$sオプションに指定)は、セキュリティ・リスクとみなされます。このアルゴリズムは将来の更新で無効化されます。
The.1.algorithm.specified.for.the.2.option.is.considered.a.security.risk.and.is.disabled.=%1$sアルゴリズム(%2$sオプションに指定)は、セキュリティ・リスクとみなされ、無効化されています。
The.timestamp.digest.algorithm.1.is.considered.a.security.risk..This.algorithm.will.be.disabled.in.a.future.update.=%1$sタイムスタンプ・ダイジェスト・アルゴリズムは、セキュリティ・リスクとみなされます。このアルゴリズムは将来の更新で無効化されます。
The.digest.algorithm.1.is.considered.a.security.risk..This.algorithm.will.be.disabled.in.a.future.update.=%1$sダイジェスト・アルゴリズムは、セキュリティ・リスクとみなされます。このアルゴリズムは将来の更新で無効化されます。
The.signature.algorithm.1.is.considered.a.security.risk..This.algorithm.will.be.disabled.in.a.future.update.=%1$s署名アルゴリズムは、セキュリティ・リスクとみなされます。このアルゴリズムは将来の更新で無効化されます。
size.bit.alg=%1$dビット%2$s
The.full.keyAlgName.signing.key.is.considered.a.security.risk..It.will.be.disabled.in.a.future.update.=%s署名キーはセキュリティ・リスクとみなされます。今後の更新では無効になります。
The.full.keyAlgName.signing.key.is.considered.a.security.risk.and.is.disabled.=%s署名キーはセキュリティ・リスクとみなされ、無効になっています。
This.jar.contains.entries.whose.certificate.chain.is.invalid.reason.1=このjarには、証明書チェーンが無効なエントリが含まれています。理由: %s
This.jar.contains.entries.whose.tsa.certificate.chain.is.invalid.reason.1=このjarには、TSA証明書チェーンが無効なエントリが含まれています。理由: %s
no.timestamp.signing=-tsaまたは-tsacertが指定されていないため、このjarにはタイムスタンプが付加されていません。タイムスタンプがないと、署名者証明書の有効期限(%1$tY-%1$tm-%1$td)後に、ユーザーはこのjarを検証できない可能性があります。
invalid.timestamp.signing=タイムスタンプが無効です。有効なタイムスタンプがないと、署名者証明書の有効期限(%1$tY-%1$tm-%1$td)後に、ユーザーはこのjarを検証できない可能性があります。
no.timestamp.verifying=このjarには、タイムスタンプがない署名が含まれています。タイムスタンプがないと、いずれかの署名者証明書の有効期限後に(早ければ%1$tY-%1$tm-%1$td)ユーザーはこのjarを検証できない可能性があります。
bad.timestamp.verifying=このjarには、無効なタイムスタンプのある署名が含まれています。有効なタイムスタンプがないと、いずれかの署名者証明書の有効期限後に(早ければ%1$tY-%1$tm-%1$td)ユーザーはこのjarを検証できない可能性があります。\n詳細は、-J-Djava.security.debug=jarを指定してjarsignerを再実行してください。
The.signer.certificate.will.expire.on.1.=署名者の証明書は%1$tY-%1$tm-%1$tdに期限切れになります。
The.timestamp.will.expire.on.1.=タイムスタンプは%1$tY-%1$tm-%1$tdに期限切れになります。
signer.cert.expired.1.but.timestamp.good.2.=署名者の証明書は%1$tY-%1$tm-%1$tdに期限切れになります。ただし、JARはタイムスタンプが%2$tY-%2$tm-%2$tdに期限切れになるまで有効です。
Unknown.password.type.=不明なパスワード・タイプ:\u0020
Cannot.find.environment.variable.=環境変数が見つかりません:\u0020
Cannot.find.file.=ファイルが見つかりません:\u0020
event.ocsp.check=%sのOCSPサーバーに接続しています...
event.crl.check=%sからCRLをダウンロードしています...
