#
# Copyright (c) 2000, 2025, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

# shared (from jarsigner)
SPACE=\u0020
6SPACE=\u0020    \u0020
COMMA=,\u0020
provclass.not.a.provider=%s kein Provider
provider.name.not.found=Provider namens "%s" nicht gefunden
provider.class.not.found=Provider "%s" nicht gefunden
jarsigner.error.=jarsigner-Fehler:\u0020
Illegal.option.=Unzulässige Option:\u0020
.keystore.must.be.NONE.if.storetype.is.{0}=-keystore muss NONE sein, wenn -storetype {0} ist
.keypass.can.not.be.specified.if.storetype.is.{0}=-keypass kann nicht angegeben werden, wenn -storetype "{0}" ist
If.protected.is.specified.then.storepass.and.keypass.must.not.be.specified=Wenn -protected angegeben ist, dürfen -storepass und -keypass nicht angegeben werden
If.keystore.is.not.password.protected.then.storepass.and.keypass.must.not.be.specified=Wenn der Keystore nicht kennwortgeschützt ist, dürfen -storepass und -keypass nicht angegeben werden
Usage.jarsigner.options.jar.file.alias=Verwendung: jarsigner [options] jar-file alias
.jarsigner.verify.options.jar.file.alias.=\u0020      jarsigner -verify [options] jar-file [alias...]
.jarsigner.version=\u0020      jarsigner -version
.keystore.url.keystore.location=[-keystore <URL>]           Keystore-Speicherort
.storepass.password.password.for.keystore.integrity=[-storepass <Kennwort>]     Kennwort für Keystore-Integrität
.storetype.type.keystore.type=[-storetype <Typ>]         Keystore-Typ
.keypass.password.password.for.private.key.if.different.=[-keypass <Kennwort>]       Kennwort für Private Key (falls unterschiedlich)
.certchain.file.name.of.alternative.certchain.file=[-certchain <Datei>]         Name der alternativen certchain-Datei
.sigfile.file.name.of.SF.DSA.file=[-sigfile <Datei>]           Name der SF/DSA-Datei
.signedjar.file.name.of.signed.JAR.file=[-signedjar <Datei>]         Name der signierten JAR-Datei
.digestalg.algorithm.name.of.digest.algorithm=[-digestalg <Algorithmus>]    Name des Digestalgorithmus
.sigalg.algorithm.name.of.signature.algorithm=[-sigalg <Algorithmus>]       Name des Signaturalgorithmus
.verify.verify.a.signed.JAR.file=[-verify]                   Verifiziert eine signierte JAR-Datei
.version.print.the.program.version=[-version]                  Gibt die Programmversion aus
.verbose.suboptions.verbose.output.when.signing.verifying.=[-verbose[:suboptions]]     Verbose-Ausgabe beim Signieren/Verifizieren.
.suboptions.can.be.all.grouped.or.summary=\u0020                           Als Unteroptionen sind "all", "grouped" und "summary" möglich
.certs.display.certificates.when.verbose.and.verifying=[-certs]                    Zeigt Zertifikate bei Verbose und Verifizierung an
.certs.revocation.check=[-revCheck]                 Aktiviert die Zertifikatswiderrufprüfung
.tsa.url.location.of.the.Timestamping.Authority=[-tsa <URL>]                Ort der Zeitstempelautorität
.tsacert.alias.public.key.certificate.for.Timestamping.Authority=[-tsacert <Alias>]          Public-Key-Zertifikat für Zeitstempelautorität
.tsapolicyid.tsapolicyid.for.Timestamping.Authority=[-tsapolicyid <OID>]        TSAPolicyID für Zeitstempelautorität
.tsadigestalg.algorithm.of.digest.data.in.timestamping.request=[-tsadigestalg <Algorithmus>] Algorithmus der Digestdaten in Zeitstempelanforderung
.internalsf.include.the.SF.file.inside.the.signature.block=[-internalsf]               SF-Datei in Signaturblock aufnehmen
.sectionsonly.don.t.compute.hash.of.entire.manifest=[-sectionsonly]             Berechnet nicht den Hash des gesamten Manifests
.protected.keystore.has.protected.authentication.path=[-protected]                Keystore hat geschützten Authentifizierungspfad
.providerName.name.provider.name=[-providerName <Name>]      Providername
.add.provider.option=[-addprovider <Name>        Fügt einen Sicherheitsprovider nach Name hinzu (z.B. SunPKCS11)
.providerArg.option.1=\u0020 [-providerArg <Argument>]] ... Konfiguriert Argument für -addprovider
.providerClass.option=[-providerClass <Klasse>     Fügt einen Sicherheitsprovider nach vollqualifiziertem Klassennamen hinzu
.providerArg.option.2=\u0020 [-providerArg <Argument>]] ... Konfiguriert Argument für -providerClass
.providerPath.option=[-providerPath <list>]      Provider-Classpath
.strict.treat.warnings.as.errors=[-strict]                   Behandelt Warnungen als Fehler
.conf.url.specify.a.pre.configured.options.file=[-conf <URL>]               Vorkonfigurierte Optionsdatei angeben
.print.this.help.message=[-? -h --help]              Gibt diese Hilfemeldung aus
Option.lacks.argument=Argument fehlt in Option
Please.type.jarsigner.help.for.usage=Geben Sie jarsigner --help ein, um Verwendungsinformationen anzuzeigen
Please.specify.jarfile.name=Geben Sie den Namen der JAR-Datei an
Please.specify.alias.name=Geben Sie einen Aliasnamen an
Only.one.alias.can.be.specified=Nur ein Alias kann angegeben werden
This.jar.contains.signed.entries.which.is.not.signed.by.the.specified.alias.es.=Diese JAR-Datei enthält signierte Einträge, die nicht von den angegebenen Aliasnamen signiert wurden.
This.jar.contains.signed.entries.that.s.not.signed.by.alias.in.this.keystore.=Diese JAR-Datei enthält signierte Einträge, die nicht vom Alias in diesem Keystore signiert wurden.
s=s
m=m
k=k
X=X
q=?
.and.d.more.=(und %d mehr)
.s.signature.was.verified.=\u0020 s = Signatur wurde verifiziert\u0020
.m.entry.is.listed.in.manifest=\u0020 m = Eintrag ist in Manifest aufgeführt
.k.at.least.one.certificate.was.found.in.keystore=\u0020 k = Mindestens ein Zertifikat im Keystore gefunden
.X.not.signed.by.specified.alias.es.=\u0020 X = Nicht von den angegebenen Aliasnamen signiert
.q.unsigned.entry=\u0020 ? = Nicht signierter Eintrag
no.manifest.=Kein Manifest.
.Signature.related.entries.=(Signaturbezogene Einträge)
.Unsigned.entries.=(Nicht signierte Einträge)
.Directory.entries.=(Verzeichniseinträge)
jar.is.unsigned=JAR-Datei ist nicht signiert.
jar.treated.unsigned=Warnung: Signatur kann entweder nicht geparst oder nicht verifiziert werden. Die JAR-Datei wird als nicht signiert behandelt. Weitere Informationen erhalten Sie, indem Sie "jarsigner" mit aktiviertem Debugging erneut ausführen (-J-Djava.security.debug=jar).
jar.treated.unsigned.see.weak=Die JAR-Datei wird als nicht signiert behandelt, da sie mit einem schwachen Algorithmus signiert wurde, der jetzt deaktiviert ist.\n\nFühren Sie "jarsigner" mit der Option "-verbose" erneut aus, um weitere Einzelheiten zu erhalten.
jar.treated.unsigned.see.weak.verbose=Warnung: Die JAR-Datei wird als nicht signiert behandelt, da sie mit einem schwachen Algorithmus signiert wurde, der mittlerweile von der folgenden Sicherheitseigenschaft deaktiviert wurde:
jar.signed.=JAR-Datei signiert.
jar.signed.with.signer.errors.=JAR-Datei signiert, mit Signaturgeberfehlern.
jar.verified.=JAR-Datei verifiziert.
jar.verified.with.signer.errors.=JAR-Datei verifiziert, mit Signaturgeberfehlern.

history.with.ts=- Von "%1$s" signiert\n    Digestalgorithmus: %2$s\n    Signaturalgorithmus: %3$s, %4$s\n  Zeitstempel von "%6$s" am %5$tc\n    Digestalgorithmus für Zeitstempel: %7$s\n    Signaturalgorithmus für Zeitstempel: %8$s, %9$s
history.without.ts=- Von "%1$s" signiert\n    Digestalgorithmus: %2$s\n    Signaturalgorithmus: %3$s, %4$s
history.nonexistent.entries=\u0020   Warnung: Nicht vorhandene signierte Einträge:\u0020
history.unparsable=- Signaturbezogene Datei %s kann nicht geparst werden
history.nosf=- Signaturbezogene Datei META-INF/%s.SF fehlt
history.nobk=- Blockdatei für signaturbezogene Datei META-INF/%s.SF fehlt

with.weak=%s (schwach)
with.algparams.weak=%1$s mit %2$s (schwach)
with.disabled=%s (deaktiviert)
with.algparams.disabled=%1$s mit %2$s (deaktiviert)
key.bit=%s-Schlüssel
key.bit.weak=%s Schlüssel (schwach)
key.bit.disabled=%s Schlüssel (deaktiviert)
nonexistent.entries.found=Diese JAR-Datei enthält signierte Einträge für Dateien, die nicht vorhanden sind. Weitere Details finden Sie in der Verbose-Ausgabe (-verbose).
external.file.attributes.detected=POSIX-Dateiberechtigung und/oder Symlink-Attribute erkannt. Diese Attribute werden bei der Signatur ignoriert und sind nicht durch die Signatur geschützt.

jarsigner.=jarsigner:\u0020
signature.filename.must.consist.of.the.following.characters.A.Z.0.9.or.=Signaturdateiname muss aus den folgenden Zeichen bestehen: A-Z, 0-9, _ oder -
unable.to.open.jar.file.=JAR-Datei kann nicht geöffnet werden:\u0020
unable.to.create.=Erstellen nicht möglich:\u0020
.adding.=\u0020  Wird hinzugefügt:\u0020
.updating.=\u0020Wird aktualisiert:\u0020
.signing.=\u0020 Wird signiert:\u0020
attempt.to.rename.signedJarFile.to.jarFile.failed=Der Versuch, {0} in {1} umzubenennen, war nicht erfolgreich
attempt.to.rename.jarFile.to.origJar.failed=Der Versuch, {0} in {1} umzubenennen, war nicht erfolgreich
unable.to.sign.jar.=JAR-Datei kann nicht signiert werden:\u0020
Enter.Passphrase.for.keystore.=Passphrase für Keystore eingeben:\u0020
keystore.load.=Keystore-Ladevorgang:\u0020
certificate.exception.=Zertifikatsausnahme:\u0020
unable.to.instantiate.keystore.class.=Keystore-Klasse kann nicht instanziiert werden:\u0020
Certificate.chain.not.found.for.alias.alias.must.reference.a.valid.KeyStore.key.entry.containing.a.private.key.and=Zertifikatskette nicht gefunden für: {0}. {1} muss einen gültigen Keystore-Schlüssel referenzieren, der einen Private Key und eine zugehörige Public-Key-Zertifikatskette enthält.
File.specified.by.certchain.does.not.exist=Von -certchain angegebene Datei ist nicht vorhanden
Cannot.restore.certchain.from.file.specified=Zertifikatskette kann nicht aus angegebener Datei wiederhergestellt werden
Certificate.chain.not.found.in.the.file.specified.=Zertifikatskette nicht in der angegebenen Datei gefunden.
found.non.X.509.certificate.in.signer.s.chain=Nicht-X.509-Zertifikat in Kette des Signaturgebers gefunden
Enter.key.password.for.alias.=Schlüsselkennwort für {0} eingeben:\u0020
unable.to.recover.key.from.keystore=Schlüssel kann nicht aus Keystore wiederhergestellt werden
key.associated.with.alias.not.a.private.key=Mit {0} verknüpfter Schlüssel ist kein Private Key
you.must.enter.key.password=Sie müssen ein Schlüsselkennwort eingeben
unable.to.read.password.=Kennwort kann nicht gelesen werden:\u0020
certificate.is.valid.from=Zertifikat ist von {0} bis {1} gültig
certificate.expired.on=Zertifikat ist am {0} abgelaufen
certificate.is.not.valid.until=Zertifikat ist erst ab {0} gültig
certificate.will.expire.on=Zertifikat läuft am {0} ab
.Invalid.certificate.chain.=[Ungültige Zertifikatskette:\u0020
.Invalid.TSA.certificate.chain.=[Ungültige TSA-Zertifikatskette:\u0020
requesting.a.signature.timestamp=Signaturzeitstempel wird angefordert
TSA.location.=TSA-Ort:\u0020
TSA.certificate.=TSA-Zertifikat:\u0020
no.response.from.the.Timestamping.Authority.=Keine Antwort von der Zeitstempelautorität. Bei Verbindungen hinter einer Firewall muss möglicherweise ein HTTP- oder HTTPS-Proxy angegeben werden. Geben Sie die folgenden Optionen für "jarsigner" an:
or=oder
Certificate.not.found.for.alias.alias.must.reference.a.valid.KeyStore.entry.containing.an.X.509.public.key.certificate.for.the=Zertifikat nicht gefunden für: {0}. {1} muss einen gültigen Keystore-Eintrag referenzieren, der ein X.509-Public-Key-Zertifikat für die Zeitstempelautorität enthält.
entry.was.signed.on=Eintrag wurde signiert am {0}
Warning.=Warnung:\u0020
Error.=Fehler:\u0020
...Signer=>>> Signaturgeber
...TSA=>>> TSA
trusted.certificate=vertrauenswürdiges Zertifikat
This.jar.contains.unsigned.entries.which.have.not.been.integrity.checked.=Diese JAR-Datei enthält nicht signierte Einträge, deren Integrität nicht geprüft wurde.\u0020
This.jar.contains.entries.whose.signer.certificate.has.expired.=Diese JAR-Datei enthält Einträge, deren Signaturgeberzertifikat abgelaufen ist.
This.jar.contains.entries.whose.signer.certificate.will.expire.within.six.months.=Diese JAR-Datei enthält Einträge, deren Signaturgeberzertifikat innerhalb der nächsten sechs Monate abläuft.\u0020
This.jar.contains.entries.whose.signer.certificate.is.not.yet.valid.=Diese JAR-Datei enthält Einträge, deren Signaturgeberzertifikat noch nicht gültig ist.\u0020
This.jar.contains.entries.whose.signer.certificate.is.self.signed.=Diese JAR-Datei enthält Einträge, deren Signaturgeberzertifikat selbstsigniert ist.
Re.run.with.the.verbose.and.certs.options.for.more.details.=Führen Sie den Befehl erneut mit den Optionen -verbose und -certs aus, um weitere Details zu erhalten.
The.signer.certificate.has.expired.=Das Signaturgeberzertifikat ist abgelaufen.
The.timestamp.expired.1.but.usable.2=Der Zeitstempel ist am %1$tY-%1$tm-%1$td abgelaufen. Die JAR-Datei bleibt aber gültig, bis das Signaturgeberzertifikat am %2$tY-%2$tm-%2$td abläuft.
The.timestamp.has.expired.=Der Zeitstempel ist abgelaufen.
The.signer.certificate.will.expire.within.six.months.=Das Signaturgeberzertifikat läuft innerhalb der nächsten sechs Monate ab.
The.timestamp.will.expire.within.one.year.on.1=Der Zeitstempel läuft innerhalb des nächsten Jahres am %1$tY-%1$tm-%1$td ab.
The.timestamp.will.expire.within.one.year.on.1.but.2=Der Zeitstempel läuft innerhalb des nächsten Jahres am %1$tY-%1$tm-%1$td ab. Die JAR-Datei bleibt aber gültig, bis das Signaturgeberzertifikat am %2$tY-%2$tm-%2$td abläuft.
The.signer.certificate.is.not.yet.valid.=Das Signaturgeberzertifikat ist noch nicht gültig.
The.signer.certificate.s.KeyUsage.extension.doesn.t.allow.code.signing.=Die KeyUsage-Erweiterung des Signaturgeberzertifikats lässt keine Codesignatur zu.
The.signer.certificate.s.ExtendedKeyUsage.extension.doesn.t.allow.code.signing.=Die ExtendedKeyUsage-Erweiterung des Signaturgeberzertifikats lässt keine Codesignatur zu.
The.signer.certificate.s.NetscapeCertType.extension.doesn.t.allow.code.signing.=Die NetscapeCertType-Erweiterung des Signaturgeberzertifikats lässt keine Codesignatur zu.
This.jar.contains.entries.whose.signer.certificate.s.KeyUsage.extension.doesn.t.allow.code.signing.=Diese JAR-Datei enthält Einträge, bei denen die KeyUsage-Erweiterung des Signaturgeberzertifikats keine Codesignatur zulässt.
This.jar.contains.entries.whose.signer.certificate.s.ExtendedKeyUsage.extension.doesn.t.allow.code.signing.=Diese JAR-Datei enthält Einträge, bei denen die ExtendedKeyUsage-Erweiterung des Signaturgeberzertifikats keine Codesignatur zulässt.
This.jar.contains.entries.whose.signer.certificate.s.NetscapeCertType.extension.doesn.t.allow.code.signing.=Diese JAR-Datei enthält Einträge, bei denen die NetscapeCertType-Erweiterung des Signaturgeberzertifikats keine Codesignatur zulässt.
.{0}.extension.does.not.support.code.signing.=[{0}-Erweiterung unterstützt keine Codesignatur]
The.signer.s.certificate.chain.is.invalid.reason.1=Die Zertifikatskette des Signaturgebers ist ungültig. Grund: %s
The.tsa.certificate.chain.is.invalid.reason.1=Die TSA-Zertifikatskette ist ungültig. Grund: %s
The.signer.s.certificate.is.self.signed.=Das Zertifikat des Signaturgebers ist selbstsigniert.
The.1.algorithm.specified.for.the.2.option.is.considered.a.security.risk..This.algorithm.will.be.disabled.in.a.future.update.=Der für die Option %2$s angegebene %1$s-Algorithmus gilt als Sicherheitsrisiko. Dieser Algorithmus wird in einem zukünftigen Update deaktiviert.
The.1.algorithm.specified.for.the.2.option.is.considered.a.security.risk.and.is.disabled.=Der für die Option %2$s angegebene %1$s-Algorithmus gilt als Sicherheitsrisiko und ist deaktiviert.
The.timestamp.digest.algorithm.1.is.considered.a.security.risk..This.algorithm.will.be.disabled.in.a.future.update.=Der %1$s-Digestalgorithmus des Zeitstempels gilt als Sicherheitsrisiko. Dieser Algorithmus wird in einem zukünftigen Update deaktiviert.
The.digest.algorithm.1.is.considered.a.security.risk..This.algorithm.will.be.disabled.in.a.future.update.=Der %1$s-Digestalgorithmus gilt als Sicherheitsrisiko. Dieser Algorithmus wird in einem zukünftigen Update deaktiviert.
The.signature.algorithm.1.is.considered.a.security.risk..This.algorithm.will.be.disabled.in.a.future.update.=Der %1$s-Signaturalgorithmus gilt als Sicherheitsrisiko. Dieser Algorithmus wird in einem zukünftigen Update deaktiviert.
size.bit.alg=%1$d-Bit %2$s
The.full.keyAlgName.signing.key.is.considered.a.security.risk..It.will.be.disabled.in.a.future.update.=Der %s Signaturschlüssel wird als Sicherheitsrisiko betrachtet. Wird in einem zukünftigen Update deaktiviert.
The.full.keyAlgName.signing.key.is.considered.a.security.risk.and.is.disabled.=Der %s Signaturschlüssel wird als Sicherheitsrisiko betrachtet und ist deaktiviert.
This.jar.contains.entries.whose.certificate.chain.is.invalid.reason.1=Diese JAR-Datei enthält Einträge, deren Zertifikatskette ungültig ist. Grund: %s
This.jar.contains.entries.whose.tsa.certificate.chain.is.invalid.reason.1=Diese JAR-Datei enthält Einträge, deren TSA-Zertifikatskette ungültig ist. Grund: %s
no.timestamp.signing=Weder -tsa noch -tsacert wurde angegeben, und diese JAR-Datei hat keinen Zeitstempel. Ohne Zeitstempel können Benutzer diese JAR-Datei nach dem Ablaufdatum des Signaturgeberzertifikats (%1$tY-%1$tm-%1$td) möglicherweise nicht mehr validieren.
invalid.timestamp.signing=Der Zeitstempel ist ungültig. Ohne einen gültigen Zeitstempel können Benutzer diese JAR-Datei nach dem Ablaufdatum des Signaturgeberzertifikats (%1$tY-%1$tm-%1$td) möglicherweise nicht mehr validieren.
no.timestamp.verifying=Diese JAR-Datei enthält Signaturen ohne Zeitstempel. Ohne einen Zeitstempel können Benutzer diese JAR-Datei nach dem Ablauf eines Signaturgeberzertifikats (frühestens %1$tY-%1$tm-%1$td) möglicherweise nicht mehr validieren.
bad.timestamp.verifying=Diese JAR-Datei enthält Signaturen mit einem ungültigen Zeitstempel. Ohne einen gültigen Zeitstempel können Benutzer diese JAR-Datei nach dem Ablauf eines Signaturgeberzertifikats (frühestens %1$tY-%1$tm-%1$td) möglicherweise nicht mehr validieren.\nFühren Sie "jarsigner" mit -J-Djava.security.debug=jar erneut aus, um weitere Informationen zu erhalten.
The.signer.certificate.will.expire.on.1.=Das Signaturgeberzertifikat läuft am %1$tY-%1$tm-%1$td ab.
The.timestamp.will.expire.on.1.=Der Zeitstempel läuft am %1$tY-%1$tm-%1$td ab.
signer.cert.expired.1.but.timestamp.good.2.=Das Signaturgeberzertifikat ist am %1$tY-%1$tm-%1$td abgelaufen. Die JAR-Datei bleibt aber gültig, bis der Zeitstempel am %2$tY-%2$tm-%2$td abläuft.
Unknown.password.type.=Unbekannter Kennworttyp:\u0020
Cannot.find.environment.variable.=Umgebungsvariable kann nicht gefunden werden:\u0020
Cannot.find.file.=Datei kann nicht gefunden werden:\u0020
event.ocsp.check=Verbindung zu OCSP-Server bei %s wird hergestellt...
event.crl.check=CRL wird von %s heruntergeladen...
