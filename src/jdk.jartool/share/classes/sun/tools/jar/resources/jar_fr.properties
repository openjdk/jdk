#
# Copyright (c) 1999, 2024, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

error.multiple.main.operations=Vous ne pouvez pas indiquer plus d'une option '-cuxtid'
error.cant.open=impossible d''ouvrir : {0}
error.illegal.option=Option non admise : {0}
error.unrecognized.option=option non reconnue : {0}
error.missing.arg=l''option {0} exige un argument
error.bad.file.arg=Erreur lors de l'analyse des arguments de fichier
error.bad.option=Une des options -{ctxuid} doit être spécifiée.
error.bad.cflag=L'indicateur c requiert la spécification d'un fichier manifeste ou d'un fichier d'entrée.
error.bad.uflag=L'indicateur u requiert la spécification d'un fichier manifeste, d'un fichier d'entrée ou d'un indicateur e.
error.bad.eflag=L'indicateur e et le fichier manifeste portant l'attribut Main-Class ne peuvent pas être spécifiés \nensemble.
error.bad.dflag=L'option '-d, --describe-module' ne requiert la spécification d'aucun fichier d'entrée
error.bad.reason=raison incorrecte : {0}, la valeur doit être deprecated, deprecated-for-removal ou incubating
error.nosuch.fileordir={0} : fichier ou répertoire introuvable
error.write.file=Erreur lors de l'écriture d'un fichier JAR existant
error.create.dir={0} : impossible de créer le répertoire
error.incorrect.length=longueur incorrecte lors du traitement de : {0}
error.create.tempfile=Impossible de créer un fichier temporaire
error.hash.dep=Hachage des dépendances du module {0}, module {1} introuvable sur le chemin de modules
error.module.options.without.info=Une des options --module-version ou --hash-modules sans module-info.class
error.no.operative.descriptor=Aucun descripteur opérationnel pour la version : {0}
error.no.root.descriptor=Aucun descripteur de module racine, indiquer --release
error.unable.derive.automodule=Impossible de dériver le descripteur de module pour : {0}
error.unexpected.module-info=Descripteur de module {0} inattendu
error.module.descriptor.not.found=Descripteur de module introuvable
error.invalid.versioned.module.attribute=Attribut de descripteur de module non valide {0}
error.missing.provider=Fournisseur de services introuvable : {0}
error.release.value.notnumber=version {0} non valide
error.release.value.toosmall=version {0} non valide : elle doit être supérieure ou égale à 9
error.release.unexpected.versioned.entry=entrée avec numéro de version {0} inattendue pour la version {1}
error.validator.jarfile.exception=Impossible de valider {0} : {1}
error.validator.jarfile.invalid=fichier JAR multiversion non valide {0} supprimé
error.validator.bad.entry.name=nom d''entrée au format incorrect, {0}
error.validator.version.notnumber=le nom d''entrée : {0} n''a pas de numéro de version
error.validator.entryname.tooshort=le nom d''entrée : {0} est trop court et n''est pas un répertoire
error.validator.isolated.nested.class=l''entrée : {0} est une classe isolée imbriquée
error.validator.new.public.class=l''entrée : {0} contient une nouvelle classe publique introuvable dans les entrées de base
error.validator.incompatible.class.version=l''entrée : {0} a une version de classe non compatible avec une version antérieure
error.validator.different.api=l''entrée : {0} contient une classe avec une API différente de la version antérieure
error.validator.names.mismatch=l''entrée : {0} contient une classe avec le nom interne {1}, les noms ne concordent pas
error.validator.info.name.notequal=module-info.class dans un répertoire avec numéro de version contient un nom incorrect
error.validator.info.requires.transitive=module-info.class dans un répertoire avec numéro de version contient un mot-clé "requires transitive" supplémentaire
error.validator.info.requires.added=module-info.class dans un répertoire avec numéro de version contient des mots-clés "requires" supplémentaires
error.validator.info.requires.dropped=module-info.class dans un répertoire avec numéro de version contient des mots-clés "requires" manquants
error.validator.info.exports.notequal=module-info.class dans un répertoire avec numéro de version contient des mots-clés "exports" différents
error.validator.info.opens.notequal=module-info.class dans un répertoire avec numéro de version contient des mots-clés "opens" différents
error.validator.info.provides.notequal=module-info.class dans un répertoire avec numéro de version contient des mots-clés "provides" différents
error.validator.info.version.notequal={0} : module-info.class dans un répertoire avec numéro de version contient des mots-clés "version" différents
error.validator.info.manclass.notequal={0} : module-info.class dans un répertoire avec numéro de version contient des mots-clés "main-class" différents
warn.validator.identical.entry=Avertissement : l''entrée {0} contient une classe\nidentique à une entrée qui se trouve déjà dans le fichier JAR
warn.validator.resources.with.same.name=Avertissement : entrée {0}, plusieurs ressources du même nom
warn.validator.concealed.public.class=Avertissement : l''entrée {0} est une classe publique\ndans un package dissimulé, le placement de ce fichier JAR sur le\nchemin de classe générera des interfaces publiques incompatibles
warn.release.unexpected.versioned.entry=entrée avec numéro de version {0} inattendue
out.added.manifest=manifeste ajouté
out.added.module-info=module-info ajouté : {0}
out.automodule=Descripteur de module introuvable. Module automatique dérivé.
out.update.manifest=manifeste mis à jour
out.update.module-info=module-info mis à jour : {0}
out.ignore.entry=entrée {0} ignorée
out.adding=ajout : {0}
out.deflated=(compression : {0} %)
out.stored=(stockage : 0 %)
out.create=\  créé : {0}
out.extracted=extrait : {0}
out.inflated=\ décompressé : {0}
out.size=(entrée = {0}) (sortie = {1})

usage.compat=Interface de compatibilité :\nSyntaxe : jar {ctxui}[vfmn0PMe] [jar-file] [manifest-file] [entry-point] [-C dir] files ...\nOptions :\n    -c  crée une archive\n    -t  affiche la table des matières de l'archive\n    -x  extrait des fichiers nommés (ou tous les fichiers) de l'archive\n    -u  met à jour l'archive existante\n    -v  génère une sortie en mode verbose d'une sortie standard\n    -f  spécifie le nom de fichier d'archive\n    -m  inclut les informations de manifeste à partir du fichier manifeste spécifié\n    -n  effectue une normalisation Pack200 après la création d'une archive\n    -e  spécifie le point d'entrée d'une application en mode autonome \n        intégrée à un fichier JAR exécutable\n    -0  stockage uniquement, pas de compression ZIP\n    -P  préserve les signes de début '/' (chemin absolu) et ".." (répertoire parent) dans les noms de fichier\n    -M  ne crée pas de fichier manifeste pour les entrées\n    -i  génère les informations d'index des fichiers JAR spécifiés\n    -C  passe au répertoire spécifié et inclut le fichier suivant\nSi l'un des fichiers est un répertoire, celui-ci est traité récursivement.\nLes noms du fichier manifeste, du fichier d'archive et du point d'entrée sont\nspécifiés dans le même ordre que celui des indicateurs m, f et e.\n\nExemple 1 : pour archiver deux fichiers de classe dans une archive intitulée classes.jar : \n       jar cvf classes.jar Foo.class Bar.class \nExemple 2 : pour utiliser un fichier manifeste existant 'mymanifest', puis archiver tous les\n           fichiers du répertoire foo/ dans 'classes.jar' : \n       jar cvfm classes.jar mymanifest -C foo/ .\n

main.usage.summary=Syntaxe : jar [OPTION...] [ [--release VERSION] [-C dir] files] ...
main.usage.summary.try=Pour plus d'informations, essayez 'jar --help'.

main.help.preopt=Syntaxe : jar [OPTION...] [ [--release VERSION] [-C dir] files] ...\njar crée une archive pour les classes et les ressources, et peut manipuler ou\nrestaurer les classes ou ressources individuelles à partir d'une archive.\n\n Exemples :\n # Création d'une archive nommée classes.jar composée de deux fichiers de classe :\n jar --create --file classes.jar Foo.class Bar.class\n # Création d'une archive à l'aide d'un manifeste existant, avec tous les fichiers dans foo/ :\n jar --create --file classes.jar --manifest mymanifest -C foo/ .\n # Création d'une archive JAR modulaire, où le descripteur de module est situé dans\n # classes/module-info.class :\n jar --create --file foo.jar --main-class com.foo.Main --module-version 1.0\n     -C foo/ classes resources\n # Mise à jour d'un fichier JAR non modulaire existant vers un fichier JAR modulaire :\n jar --update --file foo.jar --main-class com.foo.Main --module-version 1.0\n     -C foo/ module-info.class\n # Crée un fichier JAR multiversion en plaçant certains fichiers dans le répertoire META-INF/versions/9 :\n jar --create --file mr.jar -C foo classes --release 9 -C foo9 classes\n\nPour raccourcir ou simplifier la commande JAR, vous pouvez spécifier des arguments dans un\nfichier texte distinct et le transmettre à la commande JAR avec le signe arobase (@) en tant que préfixe.\n\n Exemples :\n # Options de lecture supplémentaires et liste des fichiers de classe à partir du fichier classes.list\n jar --create --file my.jar @classes.list\n
main.help.opt.main=\ Mode d'exploitation principal :\n
main.help.opt.main.create=\  -c, --create               Crée l'archive
main.help.opt.main.generate-index=\  -i, --generate-index=FILE  Génère des informations d'index pour les archives JAR\n                             indiquées
main.help.opt.main.list=\  -t, --list                 Affiche la table des matières de l'archive
main.help.opt.main.update=\  -u, --update               Met à jour une archive JAR existante
main.help.opt.main.extract=\  -x, --extract              Extrait des fichiers nommés (ou tous les fichiers) de l'archive
main.help.opt.main.describe-module=\  -d, --describe-module      afficher le descripteur de module ou le nom de module automatique
main.help.opt.any=\ Modificateurs d'opération valides pour tous les modes :\n\n  -C DIR                     Passe au répertoire spécifié et inclut le\n                             fichier suivant
main.help.opt.any.file=\  -f, --file=FILE            Nom du fichier d'archive. Lorsqu'il est omis, stdin ou\n                             stdout est utilisé en fonction de l'opération\n      --release VERSION      Place tous les fichiers suivants dans un répertoire avec numéro de version\n                             du fichier JAR (à savoir META-INF/versions/VERSION/)
main.help.opt.any.verbose=\  -v, --verbose              Génère une sortie en mode verbose d'une sortie standard
main.help.opt.create=\ Modificateurs d'opération valides uniquement en mode create :\n
main.help.opt.create.update=\ Modificateurs d'opération valides uniquement en modes create et update :\n
main.help.opt.create.update.main-class=\  -e, --main-class=CLASSNAME Point d'entrée d'une application en mode autonome\n                             intégrée à une archive JAR modulaire\n                             ou exécutable
main.help.opt.create.update.manifest=\  -m, --manifest=FILE        Inclut les informations de manifeste du fichier\n                             manifeste donné
main.help.opt.create.update.no-manifest=\  -M, --no-manifest          Ne crée pas de fichier manifeste pour les entrées
main.help.opt.create.update.module-version=\      --module-version=VERSION    Version de module lors de la création d'un fichier JAR\n                             modulaire ou de la mise à jour d'un fichier JAR non modulaire
main.help.opt.create.update.hash-modules=\      --hash-modules=PATTERN Calcule et enregistre les hachages des modules \n                             mis en correspondance d'après le modèle donné et dépendant\n                             directement ou indirectement d'un fichier JAR modulaire\n                             en cours de création ou d'un fichier JAR non modulaire en cours de mise à jour
main.help.opt.create.update.module-path=\  -p, --module-path          Emplacement de la dépendance de module pour la génération\n                             du hachage
main.help.opt.create.update.do-not-resolve-by-default=\      --do-not-resolve-by-default  Exclure de l'ensemble racine de modules par défaut
main.help.opt.create.update.warn-if-resolved=\      --warn-if-resolved     Indication en fonction de laquelle un outil émet un avertissement si le module\n                             est résolu. La valeur doit être deprecated, deprecated-for-removal,\n                             ou incubating
main.help.opt.create.update.index=\ Modificateurs d'opération valides uniquement en modes create, update et generate-index :\n
main.help.opt.create.update.index.no-compress=\  -0, --no-compress          Stocke uniquement ; n'utilise pas de compression ZIP
main.help.opt.other=\ Autres options :\n
main.help.opt.other.help=\  -h, --help[:compat]        Affiche l'aide ou éventuellement la compatibilité
main.help.opt.other.help-extra=\      --help-extra           Affiche l'aide sur les options supplémentaires
main.help.opt.other.version=\      --version              Imprime la version de programme
main.help.postopt=\ Une archive est un fichier JAR modulaire si un descripteur de module, 'module-info.class', se\n trouve dans la racine des répertoires donnés ou dans la racine de l'archive JAR\n elle-même. Les opérations suivantes sont valides uniquement lors de la création d'un fichier JAR modulaire\n ou de la mise à jour d'un fichier JAR non modulaire existant : '--module-version',\n '--hash-modules' et '--module-path'.\n\n Les arguments obligatoires ou facultatifs pour les options longues sont également obligatoires ou facultatifs\n pour toute option courte correspondante.
