/*
 * Copyright (c) 2025, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 *
 */

/*
class OuterTest1 {
    class Inner {
        public void foo() { System.out.println("Inner.foo"); }
    };
}

Nested class acccess flags are made invalid in this jcod file.
*/

class OuterTest1 {
  0xCAFEBABE;
  0; // minor version
  70; // version
  [] { // Constant Pool
    ; // first element is empty
    Method #2 #3; // #1
    class #4; // #2
    NameAndType #5 #6; // #3
    Utf8 "java/lang/Object"; // #4
    Utf8 "<init>"; // #5
    Utf8 "()V"; // #6
    class #8; // #7
    Utf8 "OuterTest1"; // #8
    Utf8 "Code"; // #9
    Utf8 "LineNumberTable"; // #10
    Utf8 "SourceFile"; // #11
    Utf8 "OuterTest1.java"; // #12
    Utf8 "NestMembers"; // #13
    class #15; // #14
    Utf8 "OuterTest1$Inner"; // #15
    Utf8 "InnerClasses"; // #16
    Utf8 "Inner"; // #17
  } // Constant Pool

  0x0020; // access
  #7;// this_cpx
  #2;// super_cpx

  [] { // Interfaces
  } // Interfaces

  [] { // Fields
  } // Fields

  [] { // Methods
    {  // method
      0x0000; // access
      #5; // name_index
      #6; // descriptor_index
      [] { // Attributes
        Attr(#9) { // Code
          1; // max_stack
          1; // max_locals
          Bytes[]{
            0x2AB70001B1;
          }
          [] { // Traps
          } // end Traps
          [] { // Attributes
            Attr(#10) { // LineNumberTable
              [] { // line_number_table
                0  3;
              }
            } // end LineNumberTable
          } // Attributes
        } // end Code
      } // Attributes
    }
  } // Methods

  [] { // Attributes
    Attr(#11) { // SourceFile
      #12;
    } // end SourceFile
    ;
    Attr(#13) { // NestMembers
      [] { // classes
        #14;
      }
    } // end NestMembers
    ;
    Attr(#16) { // InnerClasses
      [] { // classes
        #14 #7 #17 0x0fff;   // This access flag sets is_interface & is_final, so invalid.
      }
    } // end InnerClasses
  } // Attributes
} // end class OuterTest1
