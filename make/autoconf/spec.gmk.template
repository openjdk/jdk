#
# Copyright (c) 2011, 2025, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

# Configured @DATE_WHEN_CONFIGURED@ to build
# for target system @OPENJDK_TARGET_OS@-@OPENJDK_TARGET_CPU@
#   (called @OPENJDK_TARGET_AUTOCONF_NAME@ by autoconf)
# on build system @OPENJDK_BUILD_OS@-@OPENJDK_BUILD_CPU@
#   (called @OPENJDK_BUILD_AUTOCONF_NAME@ by autoconf)
# using 'configure @CONFIGURE_COMMAND_LINE@'

# The command line given to configure.
CONFIGURE_COMMAND_LINE := @CONFIGURE_COMMAND_LINE@
# The current directory when configure was run
CONFIGURE_START_DIR := @CONFIGURE_START_DIR@

# How configure was originally called, if not called directly
REAL_CONFIGURE_COMMAND_EXEC_SHORT := @REAL_CONFIGURE_COMMAND_EXEC_SHORT@
REAL_CONFIGURE_COMMAND_EXEC_FULL := @REAL_CONFIGURE_COMMAND_EXEC_FULL@
REAL_CONFIGURE_COMMAND_LINE := @REAL_CONFIGURE_COMMAND_LINE@

# A self-referential reference to this file.
SPEC := @SPEC@

# Path to autoconf if overridden by the user, to be used by "make reconfigure"
AUTOCONF := @AUTOCONF@

# What make to use for main processing, after bootstrapping top-level Makefile.
MAKE := @MAKE@

OUTPUT_SYNC_SUPPORTED := @OUTPUT_SYNC_SUPPORTED@
OUTPUT_SYNC := @OUTPUT_SYNC@

# Override the shell with bash
BASH := @BASH@
BASH_ARGS := @BASH_ARGS@

# The "human readable" name of this configuration
CONF_NAME := @CONF_NAME@

# The built jdk will run in this target system.
OPENJDK_TARGET_OS := @OPENJDK_TARGET_OS@
OPENJDK_TARGET_OS_TYPE := @OPENJDK_TARGET_OS_TYPE@
OPENJDK_TARGET_OS_ENV := @OPENJDK_TARGET_OS_ENV@
OPENJDK_TARGET_OS_UPPERCASE := @OPENJDK_TARGET_OS_UPPERCASE@

OPENJDK_TARGET_CPU := @OPENJDK_TARGET_CPU@
OPENJDK_TARGET_CPU_ARCH := @OPENJDK_TARGET_CPU_ARCH@
OPENJDK_TARGET_CPU_BITS := @OPENJDK_TARGET_CPU_BITS@
OPENJDK_TARGET_CPU_ENDIAN := @OPENJDK_TARGET_CPU_ENDIAN@

OPENJDK_TARGET_LIBC := @OPENJDK_TARGET_LIBC@

COMPILE_TYPE := @COMPILE_TYPE@

# Legacy support
OPENJDK_TARGET_CPU_LEGACY := @OPENJDK_TARGET_CPU_LEGACY@
OPENJDK_TARGET_CPU_LEGACY_LIB := @OPENJDK_TARGET_CPU_LEGACY_LIB@
OPENJDK_TARGET_CPU_OSARCH := @OPENJDK_TARGET_CPU_OSARCH@
OPENJDK_TARGET_OS_INCLUDE_SUBDIR := @OPENJDK_TARGET_OS_INCLUDE_SUBDIR@

HOTSPOT_TARGET_OS := @HOTSPOT_TARGET_OS@
HOTSPOT_TARGET_OS_TYPE := @HOTSPOT_TARGET_OS_TYPE@

HOTSPOT_TARGET_CPU := @HOTSPOT_TARGET_CPU@
HOTSPOT_TARGET_CPU_ARCH := @HOTSPOT_TARGET_CPU_ARCH@
HOTSPOT_TARGET_CPU_DEFINE := @HOTSPOT_TARGET_CPU_DEFINE@

HOTSPOT_TARGET_LIBC := @HOTSPOT_TARGET_LIBC@

OPENJDK_TARGET_BUNDLE_PLATFORM := @OPENJDK_TARGET_BUNDLE_PLATFORM@
JDK_ARCH_ABI_PROP_NAME := @JDK_ARCH_ABI_PROP_NAME@

# We are building on this build system.
# When not cross-compiling, it is the same as the target.
OPENJDK_BUILD_OS := @OPENJDK_BUILD_OS@
OPENJDK_BUILD_OS_TYPE := @OPENJDK_BUILD_OS_TYPE@
OPENJDK_BUILD_OS_ENV := @OPENJDK_BUILD_OS_ENV@

OPENJDK_BUILD_CPU := @OPENJDK_BUILD_CPU@
OPENJDK_BUILD_CPU_ARCH := @OPENJDK_BUILD_CPU_ARCH@
OPENJDK_BUILD_CPU_BITS := @OPENJDK_BUILD_CPU_BITS@
OPENJDK_BUILD_CPU_ENDIAN := @OPENJDK_BUILD_CPU_ENDIAN@

OPENJDK_BUILD_CPU_LEGACY := @OPENJDK_BUILD_CPU_LEGACY@
OPENJDK_BUILD_CPU_LEGACY_LIB := @OPENJDK_BUILD_CPU_LEGACY_LIB@
OPENJDK_BUILD_LIBC := @OPENJDK_BUILD_LIBC@

OPENJDK_BUILD_OS_INCLUDE_SUBDIR := @OPENJDK_BUILD_OS_INCLUDE_SUBDIR@

HOTSPOT_BUILD_OS := @HOTSPOT_BUILD_OS@
HOTSPOT_BUILD_OS_TYPE := @HOTSPOT_BUILD_OS_TYPE@
HOTSPOT_BUILD_CPU := @HOTSPOT_BUILD_CPU@
HOTSPOT_BUILD_CPU_ARCH := @HOTSPOT_BUILD_CPU_ARCH@
HOTSPOT_BUILD_CPU_DEFINE := @HOTSPOT_BUILD_CPU_DEFINE@
HOTSPOT_BUILD_LIBC := @HOTSPOT_BUILD_LIBC@

OPENJDK_BUILD_CFLAGS_JDKLIB := @OPENJDK_BUILD_CFLAGS_JDKLIB@
OPENJDK_BUILD_CXXFLAGS_JDKLIB := @OPENJDK_BUILD_CXXFLAGS_JDKLIB@
OPENJDK_BUILD_LDFLAGS_JDKLIB := @OPENJDK_BUILD_LDFLAGS_JDKLIB@
OPENJDK_BUILD_CFLAGS_JDKEXE := @OPENJDK_BUILD_CFLAGS_JDKEXE@
OPENJDK_BUILD_CXXFLAGS_JDKEXE := @OPENJDK_BUILD_CXXFLAGS_JDKEXE@
OPENJDK_BUILD_LDFLAGS_JDKEXE := @OPENJDK_BUILD_LDFLAGS_JDKEXE@

OPENJDK_BUILD_JVM_CFLAGS := @OPENJDK_BUILD_JVM_CFLAGS@
OPENJDK_BUILD_JVM_LDFLAGS := @OPENJDK_BUILD_JVM_LDFLAGS@
OPENJDK_BUILD_JVM_ASFLAGS := @OPENJDK_BUILD_JVM_ASFLAGS@
OPENJDK_BUILD_JVM_LIBS := @OPENJDK_BUILD_JVM_LIBS@

OPENJDK_BUILD_FDLIBM_CFLAGS := @OPENJDK_BUILD_FDLIBM_CFLAGS@
BUILD_CC_DISABLE_WARNING_PREFIX := @BUILD_CC_DISABLE_WARNING_PREFIX@

# Target platform value in ModuleTarget class file attribute.
OPENJDK_MODULE_TARGET_PLATFORM := @OPENJDK_MODULE_TARGET_PLATFORM@

# OS_* properties in release file
RELEASE_FILE_OS_NAME := @RELEASE_FILE_OS_NAME@
RELEASE_FILE_OS_ARCH := @RELEASE_FILE_OS_ARCH@
RELEASE_FILE_LIBC := @RELEASE_FILE_LIBC@

SOURCE_DATE := @SOURCE_DATE@
ISO_8601_FORMAT_STRING := @ISO_8601_FORMAT_STRING@
SOURCE_DATE_ISO_8601_FIXED := @SOURCE_DATE_ISO_8601_FIXED@

LIBM := @LIBM@
LIBDL := @LIBDL@
LIBPTHREAD := @LIBPTHREAD@

WINENV_ROOT := @WINENV_ROOT@
WINENV_PREFIX := @WINENV_PREFIX@

# Save the original path before replacing it with the Visual Studio tools
ORIGINAL_PATH := @ORIGINAL_PATH@

SYSROOT_CFLAGS := @SYSROOT_CFLAGS@
SYSROOT_LDFLAGS := @SYSROOT_LDFLAGS@

# The top-level directory of the source repository
TOPDIR := @TOPDIR@
# Usually the top level directory, but could be something else if a custom
# root is defined.
WORKSPACE_ROOT := @WORKSPACE_ROOT@
IMPORT_MODULES_CLASSES := @IMPORT_MODULES_CLASSES@
IMPORT_MODULES_CMDS := @IMPORT_MODULES_CMDS@
IMPORT_MODULES_LIBS := @IMPORT_MODULES_LIBS@
IMPORT_MODULES_CONF := @IMPORT_MODULES_CONF@
IMPORT_MODULES_LEGAL := @IMPORT_MODULES_LEGAL@
IMPORT_MODULES_MAN := @IMPORT_MODULES_MAN@
IMPORT_MODULES_SRC := @IMPORT_MODULES_SRC@
IMPORT_MODULES_MAKE := @IMPORT_MODULES_MAKE@

COPYRIGHT_YEAR := @COPYRIGHT_YEAR@
HOTSPOT_BUILD_TIME := @HOTSPOT_BUILD_TIME@

# Platform naming variables
LAUNCHER_NAME := @LAUNCHER_NAME@
PRODUCT_NAME := @PRODUCT_NAME@
PRODUCT_SUFFIX := @PRODUCT_SUFFIX@
JDK_RC_PLATFORM_NAME := @JDK_RC_PLATFORM_NAME@
JDK_RC_NAME := @JDK_RC_NAME@
JDK_RC_COMPANY_NAME := @JDK_RC_COMPANY_NAME@
COMPANY_NAME := @COMPANY_NAME@
HOTSPOT_VM_DISTRO := @HOTSPOT_VM_DISTRO@
MACOSX_BUNDLE_NAME_BASE := @MACOSX_BUNDLE_NAME_BASE@
MACOSX_BUNDLE_ID_BASE := @MACOSX_BUNDLE_ID_BASE@
MACOSX_BUNDLE_BUILD_VERSION := @MACOSX_BUNDLE_BUILD_VERSION@
USERNAME := @USERNAME@
VENDOR_URL := @VENDOR_URL@
VENDOR_URL_BUG := @VENDOR_URL_BUG@
VENDOR_URL_VM_BUG := @VENDOR_URL_VM_BUG@

# New (JEP-223) version information

## Building blocks of the version string
# First three version numbers, with well-specified meanings (numerical)
VERSION_FEATURE := @VERSION_FEATURE@
VERSION_INTERIM := @VERSION_INTERIM@
VERSION_UPDATE := @VERSION_UPDATE@
VERSION_PATCH := @VERSION_PATCH@
VERSION_EXTRA1 := @VERSION_EXTRA1@
VERSION_EXTRA2 := @VERSION_EXTRA2@
VERSION_EXTRA3 := @VERSION_EXTRA3@
# The pre-release identifier (string)
VERSION_PRE := @VERSION_PRE@
# The build number (numerical)
VERSION_BUILD := @VERSION_BUILD@
# Optional build information (string)
VERSION_OPT := @VERSION_OPT@

## Composite variables
# The version number as a dot separated sequence of numbers, e.g. 9.0.1
VERSION_NUMBER := @VERSION_NUMBER@
# VERSION_NUMBER but always with exactly 4 positions, with 0 for empty positions.
VERSION_NUMBER_FOUR_POSITIONS := @VERSION_NUMBER_FOUR_POSITIONS@
# The complete version string, with additional build information
VERSION_STRING := @VERSION_STRING@
# The short version string, without trailing zeroes and just PRE, if present.
VERSION_SHORT := @VERSION_SHORT@
# A GA version is defined by the PRE string being empty. Rather than testing for
# that, this variable defines it with true/false.
VERSION_IS_GA := @VERSION_IS_GA@

# Version date
VERSION_DATE := @VERSION_DATE@

# Vendor version string
VENDOR_VERSION_STRING := @VENDOR_VERSION_STRING@

# Class-file version
VERSION_CLASSFILE_MAJOR := @VERSION_CLASSFILE_MAJOR@
VERSION_CLASSFILE_MINOR := @VERSION_CLASSFILE_MINOR@

# Version for API docs "new-since" feature
VERSION_DOCS_API_SINCE := @VERSION_DOCS_API_SINCE@

JDK_SOURCE_TARGET_VERSION := @JDK_SOURCE_TARGET_VERSION@

# How to compile the code: release, fastdebug or slowdebug
DEBUG_LEVEL := @DEBUG_LEVEL@
HOTSPOT_DEBUG_LEVEL := @HOTSPOT_DEBUG_LEVEL@

# Which JVM variants to build (space-separated list)
JVM_VARIANTS := @JVM_VARIANTS@
JVM_VARIANT_MAIN := @JVM_VARIANT_MAIN@

# Lists of features per variant. Only relevant for the variants listed in
# JVM_VARIANTS.
JVM_FEATURES_server := @JVM_FEATURES_server@
JVM_FEATURES_client := @JVM_FEATURES_client@
JVM_FEATURES_core := @JVM_FEATURES_core@
JVM_FEATURES_minimal := @JVM_FEATURES_minimal@
JVM_FEATURES_zero := @JVM_FEATURES_zero@
JVM_FEATURES_custom := @JVM_FEATURES_custom@

# Used for make-time verifications
VALID_JVM_FEATURES := @VALID_JVM_FEATURES@
VALID_JVM_VARIANTS := @VALID_JVM_VARIANTS@

# Allow overriding the default hotspot library path
HOTSPOT_OVERRIDE_LIBPATH := @HOTSPOT_OVERRIDE_LIBPATH@

# Control use of precompiled header in hotspot libjvm build
USE_PRECOMPILED_HEADER := @USE_PRECOMPILED_HEADER@

# Only build headless support or not
ENABLE_HEADLESS_ONLY := @ENABLE_HEADLESS_ONLY@

ENABLE_LINKTIME_GC := @ENABLE_LINKTIME_GC@

# Ship debug symbols (e.g. pdbs on Windows)
SHIP_DEBUG_SYMBOLS := @SHIP_DEBUG_SYMBOLS@

ENABLE_FULL_DOCS := @ENABLE_FULL_DOCS@

# JDK_OUTPUTDIR specifies where a working jvm is built.
# You can run $(JDK_OUTPUTDIR)/bin/java

OUTPUTDIR := @OUTPUTDIR@

CONFIGURESUPPORT_OUTPUTDIR := @CONFIGURESUPPORT_OUTPUTDIR@

BUILD_FAILURE_HANDLER := @BUILD_FAILURE_HANDLER@

BUILD_JTREG_TEST_THREAD_FACTORY := @BUILD_JTREG_TEST_THREAD_FACTORY@

ENABLE_GENERATE_CLASSLIST := @ENABLE_GENERATE_CLASSLIST@

EXCLUDE_TRANSLATIONS := @EXCLUDE_TRANSLATIONS@

BUILD_CDS_ARCHIVE := @BUILD_CDS_ARCHIVE@
BUILD_CDS_ARCHIVE_COH := @BUILD_CDS_ARCHIVE_COH@

ENABLE_COMPATIBLE_CDS_ALIGNMENT := @ENABLE_COMPATIBLE_CDS_ALIGNMENT@

ALLOW_ABSOLUTE_PATHS_IN_OUTPUT := @ALLOW_ABSOLUTE_PATHS_IN_OUTPUT@

HSDIS_BACKEND := @HSDIS_BACKEND@
ENABLE_HSDIS_BUNDLING := @ENABLE_HSDIS_BUNDLING@
HSDIS_CFLAGS := @HSDIS_CFLAGS@
HSDIS_LDFLAGS := @HSDIS_LDFLAGS@
HSDIS_LIBS := @HSDIS_LIBS@
CAPSTONE_ARCH_AARCH64_NAME := @CAPSTONE_ARCH_AARCH64_NAME@

# The boot jdk to use. This is overridden in bootcycle-spec.gmk. Make sure to keep
# it in sync.
BOOT_JDK := @BOOT_JDK@

EXTERNAL_BUILDJDK_PATH := @EXTERNAL_BUILDJDK_PATH@

# Whether the boot jdk jar supports --date=TIMESTAMP
BOOT_JDK_JAR_SUPPORTS_DATE := @BOOT_JDK_JAR_SUPPORTS_DATE@

# The oldest supported boot jdk version
OLDEST_BOOT_JDK_VERSION := @OLDEST_BOOT_JDK_VERSION@

# Information about the build system
NUM_CORES := @NUM_CORES@
MEMORY_SIZE := @MEMORY_SIZE@
ENABLE_JAVAC_SERVER := @ENABLE_JAVAC_SERVER@

# Number of parallel jobs to use for compilation
CONF_JOBS := @CONF_JOBS@
CONF_TEST_JOBS := @CONF_TEST_JOBS@

# Default make target
DEFAULT_MAKE_TARGET := @DEFAULT_MAKE_TARGET@
DEFAULT_LOG := @DEFAULT_LOG@

# Fallback linker
ENABLE_FALLBACK_LINKER := @ENABLE_FALLBACK_LINKER@

FREETYPE_TO_USE := @FREETYPE_TO_USE@
FREETYPE_LIBS := @FREETYPE_LIBS@
FREETYPE_CFLAGS := @FREETYPE_CFLAGS@
FONTCONFIG_CFLAGS := @FONTCONFIG_CFLAGS@
CUPS_CFLAGS := @CUPS_CFLAGS@
ALSA_LIBS := @ALSA_LIBS@
ALSA_CFLAGS := @ALSA_CFLAGS@
LIBFFI_LIBS := @LIBFFI_LIBS@
LIBFFI_CFLAGS := @LIBFFI_CFLAGS@
ENABLE_LIBFFI_BUNDLING := @ENABLE_LIBFFI_BUNDLING@
LIBFFI_LIB_FILE := @LIBFFI_LIB_FILE@
ICONV_CFLAGS := @ICONV_CFLAGS@
ICONV_LDFLAGS := @ICONV_LDFLAGS@
ICONV_LIBS := @ICONV_LIBS@
FILE_MACRO_CFLAGS := @FILE_MACRO_CFLAGS@
REPRODUCIBLE_CFLAGS := @REPRODUCIBLE_CFLAGS@

JMH_CORE_JAR := @JMH_CORE_JAR@
JMH_GENERATOR_JAR := @JMH_GENERATOR_JAR@
JMH_JOPT_SIMPLE_JAR := @JMH_JOPT_SIMPLE_JAR@
JMH_COMMONS_MATH_JAR := @JMH_COMMONS_MATH_JAR@
JMH_VERSION := @JMH_VERSION@

GTEST_FRAMEWORK_SRC := @GTEST_FRAMEWORK_SRC@

# Source file for cacerts
CACERTS_FILE := @CACERTS_FILE@
# Source folder for user provided cacerts PEM files
CACERTS_SRC := @CACERTS_SRC@

# Enable unlimited crypto policy
UNLIMITED_CRYPTO := @UNLIMITED_CRYPTO@

GCOV_ENABLED := @GCOV_ENABLED@
JCOV_ENABLED := @JCOV_ENABLED@
JCOV_HOME := @JCOV_HOME@
JCOV_INPUT_JDK := @JCOV_INPUT_JDK@
JCOV_FILTERS := @JCOV_FILTERS@
JCOV_MODULES := @JCOV_MODULES@

# AddressSanitizer
ASAN_ENABLED := @ASAN_ENABLED@

# LeakSanitizer
LSAN_ENABLED := @LSAN_ENABLED@

# UndefinedBehaviorSanitizer
UBSAN_ENABLED := @UBSAN_ENABLED@
UBSAN_CFLAGS := @UBSAN_CFLAGS@
UBSAN_LDFLAGS := @UBSAN_LDFLAGS@

# Necessary additional compiler flags to compile X11
X_CFLAGS := @X_CFLAGS@
X_LIBS := @X_LIBS@

# The lowest required version of macosx
MACOSX_VERSION_MIN := @MACOSX_VERSION_MIN@
# The highest allowed version of macosx
MACOSX_VERSION_MAX := @MACOSX_VERSION_MAX@

# The macosx code signing configuration
MACOSX_CODESIGN_MODE := @MACOSX_CODESIGN_MODE@
MACOSX_CODESIGN_IDENTITY := @MACOSX_CODESIGN_IDENTITY@

# The code signing hook configuration
SIGNING_HOOK := @SIGNING_HOOK@

# Toolchain type: gcc, clang, microsoft...
TOOLCHAIN_TYPE := @TOOLCHAIN_TYPE@
TOOLCHAIN_VERSION := @TOOLCHAIN_VERSION@
CC_VERSION_NUMBER := @CC_VERSION_NUMBER@
CXX_VERSION_NUMBER := @CXX_VERSION_NUMBER@

# Legacy support
HOTSPOT_TOOLCHAIN_TYPE := @HOTSPOT_TOOLCHAIN_TYPE@

AS_NON_ASM_EXTENSION_OPTION := @AS_NON_ASM_EXTENSION_OPTION@

# Flags used for overriding the default opt setting for a C/C++ source file.
C_O_FLAG_HIGHEST_JVM := @C_O_FLAG_HIGHEST_JVM@
C_O_FLAG_HIGHEST := @C_O_FLAG_HIGHEST@
C_O_FLAG_HI := @C_O_FLAG_HI@
C_O_FLAG_NORM := @C_O_FLAG_NORM@
C_O_FLAG_NONE := @C_O_FLAG_NONE@
C_O_FLAG_SIZE := @C_O_FLAG_SIZE@
CXX_O_FLAG_HIGHEST_JVM := @CXX_O_FLAG_HIGHEST_JVM@
CXX_O_FLAG_HIGHEST := @CXX_O_FLAG_HIGHEST@
CXX_O_FLAG_HI := @CXX_O_FLAG_HI@
CXX_O_FLAG_NORM := @CXX_O_FLAG_NORM@
CXX_O_FLAG_NONE := @CXX_O_FLAG_NONE@
CXX_O_FLAG_SIZE := @CXX_O_FLAG_SIZE@

GENDEPS_FLAGS := @GENDEPS_FLAGS@

DISABLE_WARNING_PREFIX := @DISABLE_WARNING_PREFIX@
CFLAGS_WARNINGS_ARE_ERRORS := @CFLAGS_WARNINGS_ARE_ERRORS@
DISABLED_WARNINGS := @DISABLED_WARNINGS@
DISABLED_WARNINGS_C := @DISABLED_WARNINGS_C@
DISABLED_WARNINGS_CXX := @DISABLED_WARNINGS_CXX@

# A global flag (true or false) determining if native warnings are considered errors.
WARNINGS_AS_ERRORS := @WARNINGS_AS_ERRORS@
JAVA_WARNINGS_AS_ERRORS := @JAVA_WARNINGS_AS_ERRORS@

CFLAGS_CCACHE := @CFLAGS_CCACHE@
ADLC_LANGSTD_CXXFLAGS := @ADLC_LANGSTD_CXXFLAGS@
ADLC_LDFLAGS := @ADLC_LDFLAGS@

# Tools that potentially need to be cross compilation aware.
CC := @CC@

# CFLAGS used to compile the jdk native libraries (C-code)
CFLAGS_JDKLIB := @CFLAGS_JDKLIB@
CXXFLAGS_JDKLIB := @CXXFLAGS_JDKLIB@

# CFLAGS used to compile the jdk native launchers (C-code)
CFLAGS_JDKEXE := @CFLAGS_JDKEXE@
CXXFLAGS_JDKEXE := @CXXFLAGS_JDKEXE@

FDLIBM_CFLAGS := @FDLIBM_CFLAGS@
JVM_CFLAGS := @JVM_CFLAGS@
JVM_LDFLAGS := @JVM_LDFLAGS@
JVM_ASFLAGS := @JVM_ASFLAGS@
JVM_LIBS := @JVM_LIBS@

BASIC_ASFLAGS := @BASIC_ASFLAGS@

MACHINE_FLAG := @MACHINE_FLAG@

# These flags might contain variables set by a custom extension that is included later.
EXTRA_CFLAGS := @EXTRA_CFLAGS@
EXTRA_CXXFLAGS := @EXTRA_CXXFLAGS@
EXTRA_LDFLAGS := @EXTRA_LDFLAGS@
EXTRA_ASFLAGS := @EXTRA_ASFLAGS@

CXX := @CXX@

CPP := @CPP@

# The linker can be gcc or ld on unix systems, or link.exe on windows systems.
LD := @LD@

SYSROOT := @SYSROOT@

# LDFLAGS used to link the jdk native libraries (C-code)
LDFLAGS_JDKLIB := @LDFLAGS_JDKLIB@

# LDFLAGS used to link the jdk native launchers (C-code)
LDFLAGS_JDKEXE := @LDFLAGS_JDKEXE@

# LDFLAGS used to link the static jdk library
LDFLAGS_STATIC_JDK := @LDFLAGS_STATIC_JDK@

# LDFLAGS specific to C++ linking.
LDFLAGS_CXX_JDK := @LDFLAGS_CXX_JDK@

# LDFLAGS specific to partial linking.
LDFLAGS_CXX_PARTIAL_LINKING := @LDFLAGS_CXX_PARTIAL_LINKING@

# Sometimes a different linker is needed for c++ libs
LDCXX := @LDCXX@
# The flags for linking libstdc++ linker.
LIBCXX := @LIBCXX@

# BUILD_CC/BUILD_LD is a compiler/linker that generates code that is runnable on the
# build platform.
BUILD_CC := @BUILD_CC@
BUILD_CXX := @BUILD_CXX@
BUILD_LD := @BUILD_LD@
BUILD_LDCXX := @BUILD_LDCXX@
BUILD_AS := @BUILD_AS@
BUILD_AR := @BUILD_AR@
BUILD_NM := @BUILD_NM@
BUILD_OBJCOPY := @BUILD_OBJCOPY@
BUILD_STRIP := @BUILD_STRIP@
BUILD_SYSROOT_CFLAGS := @BUILD_SYSROOT_CFLAGS@
BUILD_SYSROOT_LDFLAGS := @BUILD_SYSROOT_LDFLAGS@

AS := @AS@

AR := @AR@
ARFLAGS := @ARFLAGS@
LIB := @LIB@
LIBFLAGS := @LIBFLAGS@
NM := @NM@
NMFLAGS := @NMFLAGS@
STRIP := @STRIP@
OBJDUMP := @OBJDUMP@
CXXFILT := @CXXFILT@

LIPO := @LIPO@
INSTALL_NAME_TOOL := @INSTALL_NAME_TOOL@
METAL := @METAL@
METALLIB := @METALLIB@

#
# Options for generating debug symbols
COMPILE_WITH_DEBUG_SYMBOLS := @COMPILE_WITH_DEBUG_SYMBOLS@
COPY_DEBUG_SYMBOLS := @COPY_DEBUG_SYMBOLS@
ZIP_EXTERNAL_DEBUG_SYMBOLS := @ZIP_EXTERNAL_DEBUG_SYMBOLS@

CFLAGS_DEBUG_SYMBOLS := @CFLAGS_DEBUG_SYMBOLS@
ASFLAGS_DEBUG_SYMBOLS := @ASFLAGS_DEBUG_SYMBOLS@

#
# Compress (or not) jars
COMPRESS_JARS := @COMPRESS_JARS@

SHARED_LIBRARY_FLAGS := @SHARED_LIBRARY_FLAGS@

LIBRARY_PREFIX := @LIBRARY_PREFIX@
SHARED_LIBRARY_SUFFIX := @SHARED_LIBRARY_SUFFIX@
STATIC_LIBRARY_SUFFIX := @STATIC_LIBRARY_SUFFIX@
EXECUTABLE_SUFFIX := @EXECUTABLE_SUFFIX@
OBJ_SUFFIX := @OBJ_SUFFIX@

STRIPFLAGS := @STRIPFLAGS@

JAVA_FLAGS := @JAVA_FLAGS@
JAVA_FLAGS_BIG := @JAVA_FLAGS_BIG@
JAVA_FLAGS_SMALL := @JAVA_FLAGS_SMALL@
BUILD_JAVA_FLAGS_SMALL := @BUILD_JAVA_FLAGS_SMALL@
JAVA_TOOL_FLAGS_SMALL := @JAVA_TOOL_FLAGS_SMALL@

# Do not use the *_CMD versions of the variables directly.
JAVA_CMD := @JAVA_CMD@
JAVAC_CMD := @JAVAC_CMD@
JAVADOC_CMD := @JAVADOC_CMD@
JAR_CMD := @JAR_CMD@

JTREG_JDK := @JTREG_JDK@

BOOTCYCLE_JVM_ARGS_BIG := @BOOTCYCLE_JVM_ARGS_BIG@

DOCS_REFERENCE_JAVADOC := @DOCS_REFERENCE_JAVADOC@

JMOD_COMPRESS := @JMOD_COMPRESS@
JLINK_KEEP_PACKAGED_MODULES := @JLINK_KEEP_PACKAGED_MODULES@
JLINK_PRODUCE_LINKABLE_RUNTIME := @JLINK_PRODUCE_LINKABLE_RUNTIME@
JLINK_USER_EXTRA_FLAGS := @JLINK_USER_EXTRA_FLAGS@

RCFLAGS := @RCFLAGS@

# Tools adhering to a minimal and common standard of posix compliance.
AWK := @AWK@
BASENAME := @BASENAME@
CAT := @CAT@
CCACHE := @CCACHE@
CHMOD := @CHMOD@
CMAKE := @CMAKE@
CODESIGN := @CODESIGN@
CP := @CP@
CUT := @CUT@
DATE := @DATE@
IS_GNU_DATE := @IS_GNU_DATE@
DIFF := @DIFF@
DIRNAME := @DIRNAME@
DSYMUTIL := @DSYMUTIL@
FIND := @FIND@
FIND_DELETE := @FIND_DELETE@
FLOCK := @FLOCK@
ECHO := @ECHO@
EGREP := @EGREP@
FGREP := @FGREP@
GREP := @GREP@
GZIP := @GZIP@
HEAD := @HEAD@
LS := @LS@
LN := @LN@
MIG := @MIG@
MKDIR := @MKDIR@
MV := @MV@
NICE := @NICE@
PANDOC := @PANDOC@
TIDY := @TIDY@
PATCH := @PATCH@
PRINTF := @PRINTF@
READLINK := @READLINK@
RM := @RM@
RMDIR := @RMDIR@
SED := @SED@
SH := @SH@
SORT := @SORT@
TAR := @TAR@
TAIL := @TAIL@
TEE := @TEE@
TIME := @TIME@
IS_GNU_TIME := @IS_GNU_TIME@
TR := @TR@
TOUCH := @TOUCH@
WC := @WC@
XARGS := @XARGS@
ZIPEXE := @ZIPEXE@
UNZIP := @UNZIP@
MT := @MT@
RC := @RC@
DUMPBIN := @DUMPBIN@
PATHTOOL := @PATHTOOL@
LDD := @LDD@
OTOOL := @OTOOL@
READELF := @READELF@
EXPR := @EXPR@
FILE := @FILE@
DOT := @DOT@
GIT := @GIT@
OBJCOPY := @OBJCOPY@
SETFILE := @SETFILE@
XATTR := @XATTR@
JT_HOME := @JT_HOME@
JIB_HOME := @JIB_HOME@
DTRACE := @DTRACE@
FIXPATH := @FIXPATH@
FIXPATH_BASE := @FIXPATH_BASE@
ULIMIT := @ULIMIT@

TAR_TYPE := @TAR_TYPE@
TAR_INCLUDE_PARAM := @TAR_INCLUDE_PARAM@
TAR_SUPPORTS_TRANSFORM := @TAR_SUPPORTS_TRANSFORM@

# Build setup
USE_EXTERNAL_LIBJPEG := @USE_EXTERNAL_LIBJPEG@
LIBJPEG_CFLAGS := @LIBJPEG_CFLAGS@
LIBJPEG_LIBS := @LIBJPEG_LIBS@
USE_EXTERNAL_LIBGIF := @USE_EXTERNAL_LIBGIF@
GIFLIB_CFLAGS := @GIFLIB_CFLAGS@
GIFLIB_LIBS := @GIFLIB_LIBS@
USE_EXTERNAL_LIBZ := @USE_EXTERNAL_LIBZ@
LIBZ_CFLAGS := @LIBZ_CFLAGS@
LIBZ_LIBS := @LIBZ_LIBS@
LIBZIP_CAN_USE_MMAP := @LIBZIP_CAN_USE_MMAP@
MSVCR_DLL := @MSVCR_DLL@
VCRUNTIME_1_DLL := @VCRUNTIME_1_DLL@
MSVCP_DLL := @MSVCP_DLL@
UCRT_DLL_DIR := @UCRT_DLL_DIR@
ENABLE_PANDOC := @ENABLE_PANDOC@
PANDOC_MARKDOWN_FLAG := @PANDOC_MARKDOWN_FLAG@

# Libraries
USE_EXTERNAL_LCMS := @USE_EXTERNAL_LCMS@
LCMS_CFLAGS := @LCMS_CFLAGS@
LCMS_LIBS := @LCMS_LIBS@

USE_EXTERNAL_HARFBUZZ := @USE_EXTERNAL_HARFBUZZ@
HARFBUZZ_CFLAGS := @HARFBUZZ_CFLAGS@
HARFBUZZ_LIBS := @HARFBUZZ_LIBS@

USE_EXTERNAL_LIBPNG := @USE_EXTERNAL_LIBPNG@
PNG_LIBS := @PNG_LIBS@
PNG_CFLAGS := @PNG_CFLAGS@

# Misc
INCLUDE_SA := @INCLUDE_SA@
INCLUDE_JVMCI := @INCLUDE_JVMCI@
INCLUDE_COMPILER2 := @INCLUDE_COMPILER2@

OS_VERSION_MAJOR := @OS_VERSION_MAJOR@
OS_VERSION_MINOR := @OS_VERSION_MINOR@
OS_VERSION_MICRO := @OS_VERSION_MICRO@

# Arm SVE
SVE_CFLAGS := @SVE_CFLAGS@

BUILD_ICECC := @BUILD_ICECC@
ICECC := @ICECC@
TOOLCHAIN_PATH := @TOOLCHAIN_PATH@
LOCALE_USED := @LOCALE_USED@
CLASSPATH := @CLASSPATH@

# This macro is called to allow inclusion of closed source counterparts.
# Unless overridden in closed sources, it expands to nothing.
# Usage: This function is called in an open makefile, with the following
# argument:
# $1 the name of the makefile
define IncludeCustomExtension
endef

# Include the custom-spec.gmk file if it exists
-include $(dir $(SPEC))/custom-spec.gmk
